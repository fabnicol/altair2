{
    "collab_server" : "",
    "contents" : "\n'%+%' <- function(x, y) paste0(x, y)\n\n# personnels\n# Analyse.rémunérations[Statut != \"ELU\"\n#         & Filtre_annexe == TRUE\n#         & Filtre_actif == TRUE\n#         & Année == x,\n#         Matricule]\n\n\n#' Tableau des effectifs.\n#'\n#' Elabore un tableau des effectifs et équivalents temps plein travaillés par type de personnel et par année.\n#'\n#' @param période Vecteur des années de la période sous revue\n#' @param Bulletins Base des bulletins de paye, comportant pour l'ensemble de la période\n#'        \\enumerate{\n#'          \\item{ les variables charactère suivantes :\n#'             \\itemize{\n#'                 \\item \\code{Matricule}\n#'                 \\item \\code{Statut}\n#'                 \\item \\code{Grade}}}\n#'           \\item{ les variables numériques :\n#'               \\describe{\n#'                 \\item{\\code{quotité}}{réel entre 0 et 1}\n#'                 \\item{\\code{nb.mois}}{entier entre 0 et 12}}}\n#'           \\item{ la variable booléenne :\n#'               \\describe{\\item{\\code{permanent}}{12 bulletins sur l'année}}}}.\n#' @param Analyse Base des analyses de rémunérations, comptant les variables :\n#'        \\code{Filtre_actif, Filtre_annexe, Statut, Matricule, Année}\n#' @param Analyse Base des analyses de variations de rémunérations, comptant les variables :\n#'       \\code{temps.complet, est.rmpp, statut, Matricule, Année, permanent}\n#' @return Un tableau des effectifs mis en forme de 22 lignes et autant de colonnes numériques que d'années de période, plus une colonne de libellés.\n#' @examples\n#' effectifs(2010:2015)\n#' @export\n\n# Bulletins : \"Matricule\", \"Statut\", \"permanent\", \"quotité\", \"nb.mois\", \"Grade\"\n# Analyse.rémunérations : Filtre_actif, Filtre_annexe, Statut, Matricule, Année (+filtres sur lignes)\n# Analyse.v : temps.complet, est.rmpp, statut, Matricule, Année, permanent   (+ filtres sur lignes)\n\neffectifs <- function(période, Bulletins = Bulletins.paie,\n                      personnels = Analyse.rémunérations,\n                      Analyse.v = Analyse.variations) {\n\n\n  eff <- lapply(période,\n                function(x) {\n                  A <- Bulletins[Année == x,\n                                  c(\"Matricule\", \"Statut\", \"permanent\", \"quotité\", \"nb.mois\", \"Grade\"), with = FALSE]\n\n                  E <- unique(A[ , .(Matricule, permanent)], by = NULL)\n                  ETP <- unique(Bulletins[Année == x,\n                                               .(quotité, Matricule, Statut, permanent, Mois, nb.mois)],\n                                by = NULL)\n                  F <- E[permanent == TRUE, ]\n\n                  G <- unique(A[Statut == \"TITULAIRE\" | Statut == \"STAGIAIRE\", .(Matricule, permanent)], by = NULL)\n\n                  H <- G[permanent == TRUE, ]\n\n                  postes.non.titulaires <- unique(A[Statut == \"NON_TITULAIRE\", Matricule, by = NULL])[[1]]\n\n                  I <- unique(A[Statut == \"ELU\", .(Matricule, permanent)],\n                              by = NULL)\n                  J <- I[permanent == TRUE, ]\n                  K <- unique(A[Statut != \"TITULAIRE\" & Statut != \"STAGIAIRE\" & Grade == \"V\", .(Matricule, permanent)],\n                              by = NULL)\n                  L <- unique(A[Grade == \"A\", .(Matricule, permanent)],\n                              by = NULL)\n                  postes.non.actifs <- unique(personnels[Statut != \"ELU\"\n                                                                    & Filtre_actif == FALSE\n                                                                    & Année == x,\n                                                                    Matricule])\n                  postes.actifs.annexes <- unique(personnels[Statut != \"ELU\"\n                                                                        & Filtre_annexe == TRUE\n                                                                        & Filtre_actif == TRUE\n                                                                        & Année == x,\n                                                                        Matricule])\n                  postes.actifs.non.annexes <- unique(personnels[Statut != \"ELU\"\n                                                                            & Filtre_annexe == FALSE\n                                                                            & Filtre_actif == TRUE\n                                                                            & Année == x,\n                                                                            Matricule])\n\n\n\n                  c(nrow(E),   # Matricules gérés en base\n                    nrow(F),   # dont présents 12 mois\n                    nrow(G),   # dont fonctionnaires\n                    nrow(H),   # dont fonct. présents 12 mois\n                    length(postes.non.titulaires),  # dont non titulaires\n                    nrow(I),   # dont élus\n                    nrow(J),   # dont élus présents 12 mois\n                    nrow(K),   # dont vacataires détectés\n                    nrow(L),   # dont assistantes maternelles détectées\n                    length(postes.non.actifs),      # Postes non actifs\n                    length(postes.actifs.annexes),  # Postes actifs annexes\n                    length(postes.actifs.non.annexes),  # Postes actifs non annexes\n                    ETP[Statut != \"ELU\" , sum(quotité/nb.mois, na.rm=TRUE)],  # Total ETP/année\n                    ETP[Statut != \"ELU\" , sum(quotité, na.rm=TRUE)] / 12,     # Total ETPT/année\n                    ETP[Matricule %chin% unique(Analyse.v[est.rmpp == TRUE    # Total ETPT/année personnes en place\n                                                                   & Année == x,\n                                                                   Matricule]),\n                        sum(quotité, na.rm=TRUE)] / 12,\n\n                    ETP[(Statut == \"TITULAIRE\" | Statut == \"STAGIAIRE\")       # Total ETPT/année fonctionnaires\n                        & Matricule %chin% unique(Analyse.v[Statut == \"TITULAIRE\"\n                                                                     | Statut == \"STAGIAIRE\",\n                                                                     Matricule]),\n                        sum(quotité, na.rm=TRUE)] / 12,\n                    ETP[Statut == \"TITULAIRE\"                                 # Total ETPT/année titulaires à temps complet\n                        & permanent == TRUE\n                        & Matricule %chin% unique(Analyse.v[permanent == TRUE\n                                                                     & statut == \"TITULAIRE\"\n                                                                     & temps.complet == TRUE\n                                                                     & Année == x,\n                                                                     Matricule]),\n                        sum(quotité, na.rm=TRUE)] / 12,\n\n                    ETP[Statut == \"NON_TITULAIRE\"                             # Total ETPT non titulaires\n                        & Matricule %chin% postes.non.titulaires,\n                        sum(quotité, na.rm=TRUE)] / 12,\n\n                    ETP[Statut == \"AUTRE_STATUT\"                              # Total ETPT autre statut\n                        & Matricule %chin% unique(personnels[Statut == \"AUTRE_STATUT\",\n                                                                        Matricule]),\n                        sum(quotité, na.rm=TRUE)] / 12,\n\n                    ETP[Matricule %chin% postes.non.actifs, sum(quotité, na.rm=TRUE)] / 12,         # Total ETPT postes non actifs\n                    ETP[Matricule %chin% postes.actifs.annexes, sum(quotité, na.rm=TRUE)] / 12,     # Total ETPT postes actifs annexes\n                    ETP[Matricule %chin% postes.actifs.non.annexes, sum(quotité, na.rm=TRUE)] / 12)\t# Total ETPT actif non annexes\n                    })\n\n\nfor (i in 1:length(eff)) names(eff[[i]]) <- c(\"Effectifs\",\n                                                          \"Effectifs_12\",\n                                                          \"Effectifs_12_fonct\",\n                                                          \"Effectifs_12_fonct\",\n                                                          \"Effectifs_nontit\",\n                                                          \"Effectifs_élus\",\n                                                          \"Effectifs_12_élus\",\n                                                          \"Effectifs_vac\",\n                                                          \"Effectifs_am\",\n                                                          \"Effectifs_non.actifs\",\n                                                          \"Effectifs_actifs_annexes\",\n                                                          \"Effectifs_actifs_non.annexes\",\n                                                          \"ETP\",\n                                                          \"ETPT\",\n                                                          \"ETPT_pp\",\n                                                          \"ETPT_fonct\",\n                                                          \"Tit_12_100\",\n                                                          \"ETPT_nontit\",\n                                                          \"ETPT_autre\",\n                                                          \"ETPT_non_actif\",\n                                                          \"ETPT_annexe\",\n                                                          \"ETPT_actif_nonannexe\")\n\neffectifs.locale <- lapply(eff,\n                           function(x) formatC(x, big.mark = \" \", format=\"f\", digits=1, decimal.mark=\",\"))\n\ntableau.effectifs <- as.data.frame(effectifs.locale,\n                                   row.names = c(\"Matricules gérés en base (a)\",\n                                                 \"&nbsp;&nbsp;&nbsp;dont présents 12 mois\",\n                                                 \"&nbsp;&nbsp;&nbsp;dont fonctionnaires (b)\",\n                                                 \"&nbsp;&nbsp;&nbsp;dont fonct. présents 12 mois\",\n                                                 \"&nbsp;&nbsp;&nbsp;dont non titulaires\",\n                                                 \"&nbsp;&nbsp;&nbsp;dont élus\",\n                                                 \"&nbsp;&nbsp;&nbsp;dont élus présents 12 mois\",\n                                                 \"&nbsp;&nbsp;&nbsp;dont vacataires détectés (c)\",\n                                                 \"&nbsp;&nbsp;&nbsp;dont assistantes maternelles détectées (c)\",\n                                                 \"Postes non actifs (g)\",\n                                                 \"Postes actifs annexes (g)\",\n                                                 \"Postes actifs non annexes (g)\",\n                                                 \"Total ETP/année (d)\",\n                                                 \"Total ETPT/année (e)\",\n                                                 \"Total ETPT/année personnes en place (f)(g)\",\n                                                 \"Total ETPT/année fonctionnaires (g)\",\n                                                 \"Total ETPT/année titulaires à temps complet (g)\",\n                                                 \"Total ETPT non titulaires (g)\",\n                                                 \"Total ETPT autre statut\",\n                                                 \"Total ETPT postes non actifs (g)\",\n                                                 \"Total ETPT postes actifs annexes (g)\",\n                                                 \"Total ETPT postes actifs non annexes (g)\"))\n\nnames(tableau.effectifs) <-  as.character(période)\n\nreturn(tableau.effectifs)\n}\n\n# Age fin décembre de l'Année en années révolues\n# On trouve quelques valeurs correspondant à des NIr non conventionnels\n# 3, 4 : en cours d'immatriculation\n# 7, 8 : immatriculation temporaire\n\n#' Traitement du NIR (numéro d'inscription au répertoire des personnes physiques).\n#'\n#' Extrait la répartition par âge et sexe des individus ayant un NIR.\n#'\n#' @param Base data.table contenant au moins une variable nommée Nir décrivant le NIR.\n#' @param année Année civile à la fin de laquelle est évalué l'âge de l'individu.\n#' @return Une base data.table ayant la forme suivante (les bornes d'âge ne sont pas impératives) :\n#'        \\tabular{ccc}{\n#'          age \\tab Hommes \\tab Femmes \\cr\n#'          15  \\tab   0  \\tab    1   \\cr\n#'          16  \\tab   NA \\tab    2   \\cr\n#'          17  \\tab   1  \\tab    3   \\cr\n#'          18  \\tab  409 \\tab    52  \\cr\n#'          ... \\tab  ... \\tab ...    \\cr\n#'          68  \\tab 2216 \\tab    NA\n#'        }\n#' @examples\n#' extraire.nir(Base, 2012)\n#' @export\n\nextraire.nir <- function(Base, année)  {\n\n  Base[ , `:=`(age = année - (as.numeric(substr(Nir, 2, 3)) + 1900),\n               sexe = substr(Nir, 1, 1))]\n\n  Base[ , age := ifelse(age > 99, age - 100, age)]\n\n  temp <- Base[age < 69 & age > 14]\n\n  H <- temp[sexe == \"1\" | sexe == \"3\" | sexe == \"7\",  .(Hommes = .N), by = \"age\"]\n  F <- temp[sexe == \"2\" | sexe == \"4\" | sexe == \"8\",  .(Femmes = .N), by = \"age\"]\n\n  HF <- merge(\n    merge(H, F, by = \"age\", all = TRUE),\n    data.table(age = 15:68),\n    by = \"age\",\n    all = TRUE)\n\n  HF\n}\n\n# frame version, added since rev. 1.4, 4th September 2014.\n# (C) Minato Nakazawa <minato-nakazawa@umin.net>\n\npyramidf <- function(data, Laxis=NULL, Raxis=NULL,\n                     frame=c(-1.15, 1.15, -0.05, 1.1),\n                     AxisFM=\"d\", AxisBM=\"\", AxisBI=3, Cgap=0.3, Cstep=5, Csize=1,\n                     Rlab=\"Hommes\", Llab=\"Femmes\", Clab=\"Âges\", GL=TRUE, Cadj=-0.03,\n                     Rcol=\"cadetblue1\", Lcol=\"thistle1\", Ldens=-1, Rdens=-1, main=\"\",\n                     linewidth=2, ...) {\n\n  Left <- data$Femmes\n\n  Right <- data$Hommes\n\n  if (ncol(data)==2) { Center <- row.names(data) } else { Center <- data$age }\n  if (is.null(Laxis)) { Laxis <- seq(0,ceiling(max(c(Left,Right), na.rm=TRUE)/10)*10,len=5) }\n  if (is.null(Raxis)) { Raxis <- Laxis }\n\n  # setting x-y axes\n\n  BX <- c(-1-Cgap/2,1+Cgap/2)\n  BY <- c(-0.05,1.1)\n  XC <- function(XB) { (XB-BX[1])*(frame[2]-frame[1])/(2+Cgap)+frame[1] }\n  YC <- function(YB) { (YB-BY[1])*(frame[4]-frame[3])/1.15+frame[3] }\n\n  # scaling factors\n\n  LL <- max(Laxis)\n  LR <- min(Laxis)\n  LS <- LL-LR\n  LI <- length(Laxis)\n  RL <- min(Raxis)\n  RR <- max(Raxis)\n  RS <- RR-RL\n  RI <- length(Raxis)\n\n  # ticks of axis\n\n  segments(XC(-(Laxis-LR)/LS-Cgap/2),YC(-0.01),XC(-(Laxis-LR)/LS-Cgap/2),YC(0.01))\n  segments(XC((Raxis-RL)/RS+Cgap/2),YC(-0.01),XC((Raxis-RL)/RS+Cgap/2),YC(0.01))\n\n  # vertical grid lines\n\n  if (GL) {\n    segments(XC(-(Laxis-LR)/LS-Cgap/2),YC(0),XC(-(Laxis-LR)/LS-Cgap/2),YC(1),\n             lty=3,col=\"blue\")\n    segments(XC((Raxis-RL)/RS+Cgap/2),YC(0),XC((Raxis-RL)/RS+Cgap/2),YC(1),\n             lty=3,col=\"blue\")\n  }\n\n  # axes\n\n  lines(c(XC(-1-Cgap/2),XC(-Cgap/2)),c(YC(0),YC(0)),lty=1)\n  lines(c(XC(-Cgap/2),XC(-Cgap/2)),c(YC(0),YC(1)),lty=1)\n  lines(c(XC(1+Cgap/2),XC(Cgap/2)),c(YC(0),YC(0)),lty=1)\n  lines(c(XC(Cgap/2),XC(Cgap/2)),c(YC(0),YC(1)),lty=1)\n\n  # labels\n\n  text(XC(-0.5-Cgap/2),YC(1),Llab,pos=3)\n  text(XC(0.5+Cgap/2),YC(1),Rlab,pos=3)\n  text(XC(0),YC(1),Clab,pos=3)\n  Ci <- length(Center)\n  for (i in 0:(Ci-1)) {\n    if ((i%%Cstep)==0) { text(XC(0),YC(i/Ci+Cadj),paste(Center[i+1]),pos=3,cex=Csize) }\n  }\n  text(XC(-(Laxis-LR)/LS-Cgap/2),YC(rep(0,LI)),\n       paste(formatC(Laxis,format=AxisFM,big.mark=AxisBM,big.interval=AxisBI)),pos=1)\n  text(XC((Raxis-RL)/RS+Cgap/2),YC(rep(0,RI)),\n       paste(formatC(Raxis,format=AxisFM,big.mark=AxisBM,big.interval=AxisBI)),pos=1)\n\n  # main text (above the frame)\n\n  if (length(main)>0) { text(XC(0), YC(1.1), main, pos=3) }\n\n  # draw rectangles\n\n  VB <- 0:(Ci-1)/Ci\n  VT <- 1:Ci/Ci\n  LeftP <- -(Left-LR)/LS-Cgap/2\n  rect(XC(LeftP),YC(VB),XC(rep(-Cgap/2,Ci)),YC(VT),col=Lcol,density=Ldens, lwd=linewidth)\n  RightP <- (Right-RL)/RS+Cgap/2\n  rect(XC(rep(Cgap/2,Ci)),YC(VB),XC(RightP),YC(VT),col=Rcol,density=Rdens,lwd=linewidth)\n\n  return(list(Raxis, Laxis))\n}\n\n#' Pyramide des âges.\n#'\n#' Elabore une pyramide des âges verticale avec superposition du début et de la fin de la période sous revue.\n#'\n#' @param Avant data.table/data.frame décrivant la situation en début de période\n#'        Cette base doit avoir la forme suivante (bornes d'âges non impératifs):\n#'        \\tabular{ccc}{\n#'          age \\tab Hommes \\tab Femmes \\cr\n#'          15  \\tab   0  \\tab    1   \\cr\n#'          16  \\tab   NA \\tab    2   \\cr\n#'          17  \\tab   1  \\tab    3   \\cr\n#'          18  \\tab  409 \\tab    52  \\cr\n#'          ... \\tab  ... \\tab ...    \\cr\n#'          68  \\tab 2216 \\tab    NA\n#'        }\n#'        dans laquelle \"age\" peut être soit un vecteur de nom de lignes soit une colonne.\n#' @param Après data.table/data.frame décrivant la situation en fin de période. Même format que \\code{Avant}.\n#' @param titre Titre du graphique.\n#' @param date.début date du début de la période.\n#' @param date.fin date de fin de période.\n#' @param versant Si non renseigné, sans effet. Si renseigné par \"FPT\" (resp. \"FPH\"), le deuxième argument \\code{Après} ne\n#'                doit pas être renseigné. Il est automatiquement remplacé par une base de données disponible dans le répertoire \\code{data/}\n#'                du paquet, correspondant à l'année la plus proche du versant de la fonction publique correspondant. La pyramide superposée représente\n#'                celle qu'aurait l'organisme si la distribution de ses âges était celle du versant mentionné de la fonction publique.\n#' @param couleur_H couleur utilisée pour représenter les hommes (partie droite de la pyramide). Par défaut \\code{darkslateblue}\n#' @param couleur_F couleur utilisée pour représenter les femmes (partie gauche de la pyramide). Par défaut \\code{firebrick4}\n#' @return Une liste de deux vecteurs numériques représentant chacun des axes (gauche puis droit).\n#'         Un graphique comprenat une pyramide, une légende et éventuellement un titre.\n#' @examples\n#' pyramide_ages(df1, df2, \"Pyramide des âges\", 2008, 2012)\n#' @export\n\npyramide_ages <- function(Avant,\n                          Après = NULL,\n                          titre = \"\",\n                          date.début = début.période.sous.revue,\n                          date.fin = fin.période.sous.revue,\n                          versant = \"\",\n                          couleur_H = \"darkslateblue\",\n                          couleur_F = \"firebrick4\") {\n\n  newpage()\n\n  if (versant != \"\") {\n\n    s.avant <- Avant[ , .(H = sum(Hommes, na.rm=TRUE), F = sum(Femmes, na.rm=TRUE))]\n\n    p <- NULL\n\n    for (a in 2010:fin.période.sous.revue) {\n      if (exists(p0 <- \"pyr_\" %+% a %+% \"_\" %+% tolower(versant))) {\n        année <- a\n        p <- p0\n      }\n    }\n\n    stopifnot(!is.null(p))\n\n    pyr <- get(p)\n\n    # sanity checks ---\n\n\n    stopifnot(toupper(pyr[1, versant]) == versant)\n    stopifnot(pyr[1, année.référence]  == année)\n\n    # ---\n\n    tot <- pyr[ , .(H = sum(Hommes), F = sum(Femmes))]\n    année.référence <- as.character(pyr[1, année.référence])\n\n    H.coef.forme <- s.avant$H / tot$H\n    F.coef.forme <- s.avant$F / tot$F\n\n    pyr[ , `:=`(Hommes = Hommes * H.coef.forme,\n                Femmes = Femmes * F.coef.forme)]\n\n    pyramide_ages(Avant,\n                  pyr,\n                  \"Comparaison avec les données nationales [\" %+% versant %+% \"] au 31 décembre \" %+% année.référence,\n                  \"organisme \" %+% fin.période.sous.revue,\n                  paste(versant, année.référence))\n\n    cat(\"Pour obtenir les effectifs nationaux, multiplier les abscisses des hommes par\", round(1 / H.coef.forme),\n        \"et les abscisses des femmes par\", round(1 / F.coef.forme))\n\n    return(0)\n\n  }\n\n  plot(c(0,100), c(0,100), type = \"n\", frame = FALSE, axes = FALSE, xlab = \"\", ylab = \"\",\n       main = titre)\n\n  axes <- pyramidf(Avant, frame = c(10, 75, 0, 90), linewidth = 1)\n\n  if (! is.null(Après)) {\n\n    pyramidf(Après, Laxis = axes[[1]], Raxis = axes[[2]], frame = c(10, 75, 0, 90),\n             Rcol = couleur_H, Lcol = couleur_F,\n             #Lcol=\"deepskyblue\", Rcol = \"deeppink\",\n             Ldens = 7, Rdens = 7)\n\n    legend(\"right\", fill = c(\"thistle1\", \"cadetblue1\", \"firebrick4\", \"darkslateblue\"), density = c(NA, NA, 25, 25),\n           legend = c(\"Femmes \" %+% date.début, \"Hommes \" %+% date.début,\n                      \"Femmes \" %+% date.fin, \"Hommes \" %+% date.fin), cex = 0.8)\n  } else {\n\n    legend(\"right\", fill = c(\"thistle1\", \"cadetblue1\"), density = c(NA, NA),\n           legend = c(\"Femmes \" %+% date.début, \"Hommes \" %+% date.début), cex = 0.8)\n  }\n\n  return(0)\n\n}\n\n",
    "created" : 1458145151271.000,
    "dirty" : false,
    "encoding" : "ISO8859-1",
    "folds" : "",
    "hash" : "1570656878",
    "id" : "C42E9854",
    "lastKnownWriteTime" : 1457948711,
    "last_content_update" : 1457948711,
    "path" : "C:/Users/Public/Dev/altair/altair/R/effectifs.R",
    "project_path" : "R/effectifs.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}