{
    "contents" : "\n#'---\n#'title: false\n#'author: false\n#'date: false\n#'output:\n#'html_document:\n#'css: style.css\n#'---\n\n#'<p class = \"centered\"><img src = \"Altair.bmp\" /></p>\n#'<p class = \"title\">RH Exemple</p>\n#'\n\n#+ echo = FALSE, warning = TRUE, message = FALSE\n\n# comportement global du programme\n\n# Lorsque l'on n'a que une ou deux années, mettre étudier.variations à FALSE\n# Lorsque l'on n'étudie pas une base Xémélios, mettre étudier.tests.statutaires à FALSE\n\nlibrary(compiler)\n#write.csv(unique(Paie[Paie$delta > 500 & Paie$Montant > 500 & Paie$Type %chin% c(\"A\", \"I\", \"R\", \"AV\", \"A\"), c(\"Type\",  \"Libellé\", \"Code\"), with=F]), chemin(\"test.csv\"))\n\noptions(warn = -1, verbose = FALSE, OutDec = \",\", datatable.verbose = FALSE)\n\nencodage.code.source <- \"UTF-8\" #\"ISO-8859-15\"\n\n# encodage :sous unix, les fichiers sources devraient être encodés en UTF-8 pour\n# permettre une génération correcte des documents sous Windows, en ISO-8859-1. \n# Les bases peuvent être en encodage fixe, ici ISO-8859-1 pour des raisons de\n# commodité Windows Pour convertir les fichiers, réencoder sous RStudio par\n# \"Save with encoding...\" les trois fichiers source *.R\n\n\n# dans cet ordre\n\ntry(setwd(\"Tests/Exemple\"), silent = TRUE)\n\nsource(\"prologue.R\", encoding = encodage.code.source)\n\ncompilerOptions <- setCompilerOptions(suppressAll = TRUE)\nJITLevel <- enableJIT(1)\n\nsource(file.path(chemin.dossier, \"bibliotheque.fonctions.paie.R\"), encoding = encodage.code.source)\n\ninstaller.paquets(knitr, digest, colorspace, ggplot2, assertthat, yaml, gtools, utils, data.table)\nif (paralléliser) installer.paquets(parallel)\n\n# + parallel, soSNOW (windows) ou doMC (unix))\n\n# version parallélisée : à ce stade les tests ne sont pas concluant sur les applications de ddply\n# toutefois à terme on pourrait couper les bases en 2 selon les lignes.\n\n#cores <- parallel::detectCores()\n\n# if (setOSWindows)\n#   {\n#     installer.paquets(doSNOW)\n#     library(doSNOW)\n# si utilisation de foreach :\n#     registerDoSNOW(makeCluster(cores, type = \"SOCK\"))\n#   } else {\n#     installer.paquets(doMC)\n#     library(doMC)\n# si utilisation de foreach :\n#     registerDoMC(cores = cores, type=\"SOCK\")\n#   }\n\n#library(foreach)\nlibrary(knitr)\nlibrary(ggplot2)\nlibrary(assertthat)\nlibrary(gtools)\nlibrary(data.table)\n\nif (séparateur.décimal.entrée != \".\")\n  stop(\"Pour les tables importées par data.table::fread, le séparateur décimal doit être '.'\")\n\nif (séparateur.décimal.entrée == séparateur.liste.entrée)\n  stop(\"Le séparateur décimal en entrée doit être différent du séparateur de colonnes !\")\n\nif (séparateur.décimal.sortie == séparateur.liste.sortie)\n  stop(\"Le séparateur décimal en sortie doit être différent du séparateur de colonnes !\")\n\nif (sauvegarder.bases.analyse) {\n  for (path in c(\"Rémunérations\", \"Effectifs\", \"Réglementation\", \"Fiabilité\"))\n    dir.create(file.path(chemin.dossier.bases, path), recursive = TRUE)\n}\n\nif (sauvegarder.bases.origine)\n  dir.create(file.path(chemin.dossier.bases, \"Paiements\"), recursive = TRUE)\n\n# problème temporaire avec l'option fig.retina depuis fin mai 2014\n\nknitr::opts_chunk$set(fig.width = 7.5, echo = FALSE, warning = FALSE, message = FALSE, results = 'asis')\n\n\n# Contrôle de cohérence\n#  on vérifie que chaque code de paie est associé, dans le fichier des codes de paiement (par défaut, racinecodes.csv),\n#  que à chaque code donné on a associé un et un seul type de rémunération (\"INDEMNITAIRE\", \"TRAITEMENT\", etc.)\n# Pour le mode rapide, convertir les fichiers base en UTF-8 SANS BOM (par exemple, notepad++ après Excel)\n\n\nfichier.personnels.existe <- file.exists(chemin(nom.fichier.personnels))\n\nif (fichier.personnels.existe) {\n  base.personnels.catégorie <- read.csv.skip(nom.fichier.personnels, séparateur.liste = séparateur.liste.entrée, séparateur.décimal = séparateur.décimal.entrée)\n  message(\"Chargement du fichier des catégories statutaires des personnels.\")\n}\n\n# Lignes de paie\n# On peut lire jusqu'à 50 fichiers csv de lignes de paie qui seront générés au format :\n\n# \"chemin dossier + racine-Lignes de Paie-j.csv\" où racine est un bref identifiant du type de contrôle (exemple : \"c2a-\", \"PEV-\", ...)\n\nlignes.paie <- nom.fichier.paie %+% \"-\" %+% 1:50 %+% \".csv\"\nlignes.paie <- lignes.paie[file.exists(chemin(lignes.paie))]\n\n# Bulletins de paie\n# On peut lire jusqu'à 10 fichiers csv de bulletins de paie qui seront générés au format :\n\n# \"chemin dossier + racine-Bulletins de Paie-j.csv\"\n\nbulletins.paie <- nom.bulletin.paie %+% \"-\" %+% 1:10 %+% \".csv\"\nbulletins.paie <- bulletins.paie[file.exists(chemin(bulletins.paie))]\nnom.table      <- nom.table[file.exists(chemin(nom.table))]\n\n# Programme principal\n\n# Bases\n\n# Lignes de paie\n\n# On ne retient que les bases ayant pour années au minimum début.période.sous.revue\n# et au maximum fin.période.sous.revue, qui contiennent toutes les colonnes requises\n# pour le contrôle\n\n# Le mode rapide n'est disponible que avec des csv à séparateurs virgule\n# Il permet d'économiser environ 8s par million de ligne lues sur une dizaine de champs\n\nImport.Lignes.paie <- function()  {\n\n  res <- NULL\n  res2 <- NULL\n\n  res <- try(Read.csv(\"Lignes.paie\",\n                      lignes.paie,\n                      colClasses = lignes.paie.classes.input,\n                      colNames = lignes.paie.input.fallback,\n                      séparateur.liste = séparateur.liste.entrée,\n                      séparateur.décimal = séparateur.décimal.entrée,\n                      drop=1:3,\n                      rapide = TRUE),\n             silent = TRUE)\n\n  if (inherits(res, 'try-error')) {\n    res2 <- try(Read.csv(\"Lignes.paie\",\n                         lignes.paie,\n                         colClasses = lignes.paie.classes.input.fallback,\n                         colNames = lignes.paie.input.fallback,\n                         séparateur.liste = séparateur.liste.entrée,\n                         séparateur.décimal = séparateur.décimal.entrée,\n                         rapide = TRUE),\n                silent = TRUE)\n  }\n\n  c(res, res2)\n}\n\n\nimporter.bases.via.xhl2csv <- function(base, table = nom.table, colClasses = colonnes.classes.input, colNames =  colonnes.input) {\n\n  res <- try(Read.csv(base,\n                      table,\n                      colClasses = colClasses,\n                      colNames = colNames,\n                      séparateur.liste = séparateur.liste.entrée,\n                      séparateur.décimal = séparateur.décimal.entrée,\n                      convertir.encodage = (encodage.entrée.xhl2csv != \"UTF-8\"),\n                      encodage = encodage.entrée.xhl2csv,\n                      rapide = TRUE),\n             silent = FALSE)\n\n  if (inherits(res, 'try-error'))\n    stop(\"Problème de lecture de la base de la table bulletins-lignes de Paie\")\n\n  if (!is.null(Paie)) {\n    message(\"Chargement de la table bulletins-lignes de Paie.\")\n  } else {\n    stop(\"Chargement de la table bulletins-lignes de paie en échec.\")\n  }\n  \n\n  message(\"Chargement direct des bulletins et lignes de paie\")\n\n}\n\n\nimporter.bases.via.xhl2csv(\"Paie\")\nimporter.bases.via.xhl2csv(\"Bulletins.paie\", nom.bulletins, colClasses =  colonnes.bulletins.classes.input, colNames = colonnes.bulletins.input)\n\nif (! extraire.années) {\n  début.période.sous.revue <- min(Paie[[1]])\n  fin.période.sous.revue   <- max(Paie[[1]])\n}\n\n#'<p class = \"centered\"><b>Exercices `r paste(début.période.sous.revue, \"à\", fin.période.sous.revue)` </b></p>\n#'<p class = \"author\">Fabrice Nicol</h1>\n#'\n#+ echo = FALSE\n#'`r format(Sys.Date(), \"%a %d %b %Y\")`\n#'\n\n# Le format est jour/mois/année avec deux chiffres-séparateur-deux chiffres-séparateur-4 chiffres.\n# Le séparateur peut être changé en un autre en modifiant le \"/\" dans date.format\n\nif (éliminer.duplications) {\n  avant.redressement <- nrow(Paie)\n  Paie <- unique(Paie, by=NULL)\n  après.redressement <- nrow(Paie)\n}\n\n# dans le cas où l'on ne lance le programme que pour certaines années, il préciser début.période sous revue et fin.période .sous.revue\n# dans le fichier prologue.R. Sinon le programme travaille sur l'ensemble des années disponibles.\n\nif (extraire.années) {\n    Paie <- Paie[Paie$Année >= début.période.sous.revue & Paie$Année <= fin.période.sous.revue, ]\n}\n\npériode                 <- début.période.sous.revue:fin.période.sous.revue\ndurée.sous.revue        <- fin.période.sous.revue - début.période.sous.revue + 1\n\n\nmessage(\"Contrôle des noms de colonne des bulletins de paie : normal.\")\n\n# Lors de la PREMIERE utilisation d'Altair, paramétrer générer.codes <- TRUE dans prologue.R\n# pour générer les fichier des codes de paiement sous le dossier des bases (par défaut \"Données\").\n# ce fichier est trier par ordre croissant des codes de paiement sur les trois premiers chiffres des codes\n# des anomalies peuvent résiduellement apparaître avec des codes contenant des lettres, en général après\n# le troisième chiffre du code.\n# L'utilisateur devra alors renseigner la colonne étiquette.type.rémunération de ce fichier\n\nif (générer.codes)   {\n  source(\"générer.codes.R\", encoding = encodage.code.source)\n  générer.base.codes(Paie) \n}\n  \n  # Paie <- en raison du fonctionnement de knitr sinon inutile\n\nsetkey(Paie, Matricule, Année, Mois)\nsetkey(Bulletins.paie, Matricule, Année, Mois)\n\nPaie <- Paie[ , Filtre_actif := any(Montant[Type == \"T\"] \n                                            & Heures > minimum.positif, na.rm = TRUE), by=\"Matricule,Année\"]\n\nPaie <- Paie[ , `:=`(delta = sum(Montant*(  Type == \"I\"\n                                        | Type == \"T\"\n                                        | Type == \"S\"\n                                        | Type == \"IR\"\n                                        | Type == \"AC\"\n                                        | Type == \"A\"\n                                        | Type == \"R\"\n                                        | Type == \"AV\"),\n                               na.rm=TRUE)\n                            - Brut), by=\"Matricule,Année,Mois\"]\n\n#Bulletins.paie <- unique(Paie[ , .(Matricule, Nom, Année, Mois, Temps.de.travail, Heures,  Statut, Emploi, Grade, Brut, Net.à.Payer, Nir)], by = NULL)\n\nBulletins.paie <- Bulletins.paie[ , `:=`(Sexe = substr(Nir, 1, 1),\n                                         R    = .I - 1)]\n\n# Attention, NA, pas FALSE\n\nset(Bulletins.paie, 1, \"R\", NA)\n\n# Médiane des services horaires à temps complet par emploi et par sexe \n\n# La variable Heures des élus est non fiable et on peut par convention prendre la quotité 1\n\n# Pour faciliter les comparaisons de quotité lors du calcul de la RMPP on arrondit les quotités au centième inférieur\n# Lorsque la déterminéation de la médiane par emploi et sexe du nombre d'heures travaillées à temps complet n'est pas positive, la quotité est indéfinie\n# Une quotité ne peut pas dépasser 1.\n# Les élus sont réputés travailler à temps complet.\n\nmessage(\"Calcul des quotités\")\n\n#on va trouver la plupart du temps 151,67...\n# Tableau de référence des matrices de médianes\n# A ce niveau de généralité, le filtre actif est inutile, sauf peut-être pour de très petits effectifs.\n\nM <- Bulletins.paie[Sexe %chin% c(\"1\", \"2\") & Heures > minimum.positif, .(Médiane_Sexe_Statut = median(Heures, na.rm=TRUE)), by=\"Sexe,Statut\"]\n\nBulletins.paie <- merge(Bulletins.paie, Paie[, .(Filtre_actif=Filtre_actif[1]), by=\"Matricule,Année,Mois\"], all.x=TRUE, all.y=FALSE)\n\nBulletins.paie <- Bulletins.paie[ , pop_calcul_médiane := length(Heures[Temps.de.travail == 100 \n                                                                       & !is.na(Heures) \n                                                                       & Heures > minimum.positif]), by = \"Sexe,Emploi\"]\n\n# Pour les quotités seules les périodes actives sont prises en compte\n\nBulletins.paie <- Bulletins.paie[ , MHeures := ifelse(pop_calcul_médiane > population_minimale_calcul_médiane \n                                                      & Filtre_actif == TRUE,\n                                                      median(Heures[Temps.de.travail == 100 \n                                                                    & Filtre_actif == TRUE\n                                                                    & Heures > minimum.positif], na.rm = TRUE),\n                                                      M[M$Sexe == Bulletins.paie$Sexe\n                                                        & M$Statut == Bulletins.paie$Statut,\n                                                          Médiane_Sexe_Statut]),\n                                 by=\"Sexe,Emploi\"]\n\n# L'écrêtement des quotités est une contrainte statistiquement discutable qui permet de \"stresser\" le modèle\n# Par défaut les quotités sont écrêtées pour pouvoir par la suite raisonner en définissant le temps plein comme quotité == 1\n\nif (écreter.quotités) {\n   Bulletins.paie <- Bulletins.paie[ , quotité   :=  ifelse(MHeures < minimum.positif, NA, ifelse(Heures > MHeures, 1, round(Heures/MHeures, digits=2)))]  \n} else {\n   Bulletins.paie <- Bulletins.paie[ , quotité   :=  ifelse(MHeures < minimum.positif, NA, round(Heures/MHeures, digits=2))]  \n}\n\nBulletins.paie <- Bulletins.paie[Statut == \"ELU\", `:=`(MHeures = 1,\n                                                       quotité = 1)]\n\nmessage(\"Quotités calculées\")\n\nBulletins.paie <- Bulletins.paie[ ,   `:=`(Montant.net.eqtp  = ifelse(is.finite(a<-Net.à.Payer/quotité), a,  NA),\n                                           Montant.brut.eqtp = ifelse(is.finite(a<-Brut/quotité), a,  NA))]\n    \nBulletins.paie <- Bulletins.paie[ ,   `:=`(Statut.sortie   = Statut[length(Net.à.Payer)],\n                                           nb.jours        = calcul.nb.jours.mois(Mois, Année[1]),\n                                           nb.mois         = length(Mois),\n                                           quotité.moyenne = round(mean.default(quotité, na.rm = TRUE), digits = 1)),\n                                      key=c(\"Matricule\", \"Année\")]\n\nBulletins.paie <- Bulletins.paie[ , vind := (Matricule[R] == Matricule & Année[R] == Année - 1 & quotité.moyenne[R] == quotité.moyenne)]\n\nBulletins.paie <- Bulletins.paie[ ,   `:=`(Montant.brut.annuel      = sum(Brut, na.rm=TRUE),\n                                         Montant.brut.annuel.eqtp = sum(Montant.brut.eqtp * 365 / nb.jours, na.rm=TRUE),\n                                         Montant.net.annuel.eqtp  = sum(Montant.net.eqtp * 365 / nb.jours, na.rm=TRUE),\n                                         Montant.net.annuel       = sum(Net.à.Payer, na.rm=TRUE),\n                                         permanent                = nb.jours >= 365,\n                                         vind = vind[1]),\n                                      key=c(\"Matricule\", \"Année\")]\n\nmessage(\"Indicatrice RMPP calculée\")\n\n# Obsolète\n\n# Bulletins.paie.réduit <- unique(Bulletins.paie[ , .(Matricule, Année, quotité.moyenne)], by = NULL)\n# \n# Bulletins.paie.réduit <- Bulletins.paie.réduit[ , nb.années := length(Année), by=\"Matricule\"]\n# \n# indicatrice.quotité <- function(matricule, année)  Bulletins.paie.réduit[Matricule == matricule \n#                                                                          & Année == année, \n#                                                                            quotité.moyenne][1] ==  Bulletins.paie[Matricule == matricule\n#                                                                                                                   & (Année == année - 1),\n#                                                                                                                     quotité.moyenne][1]\n#                                                   \n# \n# Bulletins.paie <- merge(Bulletins.paie, cbind(Bulletins.paie.réduit[ , .(Matricule, Année, nb.années)],\n#                                               vind = mapply(indicatrice.quotité,\n#                                                              Bulletins.paie.réduit[ , Matricule], \n#                                                              Bulletins.paie.réduit[ , Année],\n#                                                              USE.NAMES = FALSE)),\n#                         by = c(\"Matricule\", \"Année\"))\n# \n# delta<-Bulletins.paie[indic.rmpp != vind, .(Matricule, Année, Mois, quotité, quotité.moyenne, indic.rmpp, vind, R)]\n# \n# sauv.bases(dossier = chemin.dossier.bases, \"delta\")\n# stop(\"test\")\n\nPaie <- merge(unique(Bulletins.paie[ , c(\"Matricule\", \n                                  \"Année\",\n                                  \"Mois\",\n                                  \"quotité\",\n                                  \"quotité.moyenne\",\n                                  \"Montant.net.eqtp\",\n                                  \"Montant.brut.eqtp\",\n                                  \"Montant.brut.annuel\",\n                                  \"Montant.brut.annuel.eqtp\",\n                                  \"Montant.net.annuel\",\n                                  \"Montant.net.annuel.eqtp\",\n                                  \"Statut.sortie\",\n                                  \"Sexe\",\n                                  \"nb.jours\",\n                                  \"nb.mois\",\n#                                  \"nb.années\",\n                                  \"vind\",\n                                  \"permanent\"), with=FALSE], by=NULL),\n              Paie, \n              by=c(\"Matricule\",\"Année\",\"Mois\"))\n\nmatricules <- unique(Bulletins.paie[ ,\n                                       c(\"Année\",\n                                         \"Emploi\",\n                                         \"Nom\",\n                                         \"Matricule\"), \n                                       with=FALSE], by=NULL)\n\nif (fichier.personnels.existe) {\n  matricules <- merge(matricules, base.personnels.catégorie, by = clé.fusion, all=TRUE)\n} else {\n  Catégorie <- character(length = nrow(matricules))\n  matricules <- cbind(matricules, Catégorie)\n}\n\nmatricules <- matricules[order(Matricule,  Année), ]\n\nmessage(\"Bulletins de Paie retraités\")\n\n###########  Analyse des rémunérations : base globale ###################\n#                                 c(clé.fusion, étiquette.année),\n\nVérifier_non_annexe <- function(Montant, Année) if (Année == 2013)  (Montant > 3361) else if (Année == 2012) (Montant > 3322) else if(Année == 2011) (Montant > 3222) else if (Année == 2010) (Montant > 3169) else if (Année == 2009) (Montant > 3132)  else (Montant > 3076)\n \n  Analyse.rémunérations <- Paie[ , .(Nir          = Nir[1],\n                                     Montant.net.annuel = Montant.net.annuel[1],\n                                     Montant.net.annuel.eqtp  = Montant.net.annuel.eqtp[1],\n                                     Montant.brut.annuel = Montant.brut.annuel[1],\n                                     Montant.brut.annuel.eqtp = Montant.brut.annuel.eqtp[1],\n                                     heures       = mean.default(Heures, na.rm = TRUE),\n                                     cumHeures    = sum(Heures, na.rm = TRUE),\n                                     Statut       = Statut[1],\n                                     nb.jours     = nb.jours[1],\n                                     nb.mois      = nb.mois[1],\n                                     permanent    = permanent[1],\n                                     ind.quotité  = vind[1],\n                                     Filtre_actif = Filtre_actif[1],\n                                     quotité.moyenne = quotité.moyenne[1],\n                                     Emploi       = Emploi[1],\n                                     Grade        = Grade[1],\n                                     temps.complet = all(quotité == 1),\n                                     Service      = Service[1],\n                                     traitement.indiciaire   = sum(Montant[Type == \"T\"], na.rm = TRUE),\n                                     sft          = sum(Montant[Type == \"S\"], na.rm = TRUE),\n                                     indemnité.résidence = sum(Montant[Type == \"IR\"], na.rm = TRUE),\n                                     indemnités   = sum(Montant[Type == \"I\"], na.rm = TRUE),\n                                     rémunérations.diverses = sum(Montant[Type == \"A\"], na.rm = TRUE),\n                                     autres.rémunérations   = sum(Montant[Type == \"AC\" | Type == \"A\" | Type == \"AV\"], na.rm = TRUE),\n                                     rémunération.vacataire = sum(Montant[Type == \"VAC\"], na.rm = TRUE)),  \n                                by = c(clé.fusion, étiquette.année)]\n\nAnalyse.rémunérations <- Analyse.rémunérations[ , `:=`(rémunération.indemnitaire.imposable = indemnités + sft + indemnité.résidence + rémunérations.diverses,\n                                                       Filtre_actif_non_annexe = (Filtre_actif == TRUE\n                                                                                  & Vérifier_non_annexe(Montant.net.annuel, Année) \n                                                                                  & nb.mois > 1 \n                                                                                  & cumHeures > 120 \n                                                                                  & cumHeures / nb.jours > 1.5))]\n\n                                                 #Montant.brut.annuel - sft - indemnité.résidence - traitement.indiciaire\n\nAnalyse.rémunérations <- Analyse.rémunérations[ ,\n                                               `:=`(rémunération.indemnitaire.imposable.eqtp = ifelse(is.finite(q <- Montant.brut.annuel.eqtp/Montant.brut.annuel), \n                                                                                                            q * rémunération.indemnitaire.imposable,\n                                                                                                            NA),\n\n                                                    total.lignes.paie =  traitement.indiciaire + sft + indemnité.résidence + indemnités + autres.rémunérations,\n\n                                                    part.rémunération.indemnitaire =  ifelse(is.na(s <-  Montant.brut.annuel) | s == 0,\n                                                                                                   NA,\n                                                                                                  (rémunération.indemnitaire.imposable) / s * 100))]\nAnalyse.rémunérations <- Analyse.rémunérations[ , indemnités.élu := ifelse(Statut == \"ELU\", total.lignes.paie, 0)]\n\nAnalyse.rémunérations <- Analyse.rémunérations[! is.na(Montant.brut.annuel)]\n\n\n# if (longueur.non.na(Bulletins.paie[ , quotité > 1]) > minimum.positif & comportement.strict ) \n#   stop(\"Détection de quotités > 1\", call. = FALSE)\n\nmessage(\"Analyse des rémunérations réalisée.\")\n\nAnalyse.variations.par.exercice <- Analyse.rémunérations[Grade != \"A\"  \n                                                         & Grade != \"V\" \n                                                         & Statut != \"ELU\"\n                                                         & Filtre_actif_non_annexe == TRUE,\n                                                         c(clé.fusion, étiquette.année,\n                                                              \"Montant.net.annuel.eqtp\",\n                                                              \"Montant.brut.annuel.eqtp\",\n                                                              \"rémunération.indemnitaire.imposable.eqtp\",\n                                                              \"Statut\",\n                                                              \"Grade\",\n                                                              \"nb.jours\",\n                                                              \"temps.complet\",\n                                                              \"ind.quotité\",\n                                                              \"quotité.moyenne\",\n                                                              \"permanent\"), with=FALSE]\n\nAnalyse.variations.par.exercice <- Analyse.variations.par.exercice[ , indicatrice.année := bitwShiftL(1, Année - début.période.sous.revue) ]\n\nAnalyse.rémunérations.premier.exercice <- Analyse.rémunérations[Analyse.rémunérations$Année == début.période.sous.revue]\n\nif (fichier.personnels.existe)\n{\n  Analyse.rémunérations.premier.exercice <- merge(Analyse.rémunérations.premier.exercice,\n                                                  base.personnels.catégorie,\n                                                  by = clé.fusion, all = FALSE)\n  \n  colonnes.sélectionnées <- c(colonnes.sélectionnées, \"Catégorie\")\n}\n\n\nAnalyse.rémunérations.dernier.exercice <- Analyse.rémunérations[Analyse.rémunérations$Année == fin.période.sous.revue, ]\n\nif (fichier.personnels.existe)\n{\n  Analyse.rémunérations.dernier.exercice <- merge(Analyse.rémunérations.dernier.exercice, base.personnels.catégorie, by = clé.fusion, all = FALSE)\n}\n\n# On ne retire les quotités nulles et NA que pour l'analyse dynamique de la partie 4 \n# On retire également les Heures nulles na et les Heures < seuil.heures\n\nif (enlever.quotités.na) {\n  Analyse.variations.par.exercice <- Analyse.variations.par.exercice[! is.na(quotité.moyenne)]\n}\n\nif (enlever.quotités.nulles) {\n  Analyse.variations.par.exercice <- Analyse.variations.par.exercice[quotité.moyenne > minimum.quotité]\n}\n\nAnalyse.variations.synthèse <- Analyse.variations.par.exercice[ ,\n                                    .(Nexercices = length(Année),\n                                      statut = Statut[length(Année)],\n                                      total.jours = sum(nb.jours, na.rm = TRUE),\n                                      indicatrice.période = sum(indicatrice.année),\n                                      Montant.net.annuel.eqtp.début  = Montant.net.annuel.eqtp[1],\n                                      Montant.net.annuel.eqtp.sortie = Montant.net.annuel.eqtp[length(Année)],\n                                      permanent = all(permanent),\n                                      temps.complet = all(temps.complet),\n                                      moyenne.rémunération.annuelle.sur.période =\n                                           sum(Montant.net.annuel.eqtp, na.rm = TRUE)/length(Année[!is.na(Montant.net.annuel.eqtp) \n                                                                                                   & Montant.net.annuel.eqtp > minimum.positif])),\n                                  by = clé.fusion]\n\nAnalyse.variations.synthèse <- Analyse.variations.synthèse[ ,  pris.en.compte := ! is.na(Montant.net.annuel.eqtp.début)\n                                                                                 & ! is.na(Montant.net.annuel.eqtp.sortie)\n                                                                                 & Montant.net.annuel.eqtp.début  > minimum.positif \n                                                                                 & Montant.net.annuel.eqtp.sortie > minimum.positif ]\n\nAnalyse.variations.synthèse <- Analyse.variations.synthèse[ ,  variation.rémunération := ifelse(pris.en.compte,\n                                                                          (Montant.net.annuel.eqtp.sortie / Montant.net.annuel.eqtp.début - 1)*100,\n                                                                           NA)]\n\nAnalyse.variations.synthèse <- Analyse.variations.synthèse[ ,                                            \n                                         `:=`(variation.moyenne.rémunération = ifelse(pris.en.compte,\n                                                                                 ((variation.rémunération/100 + 1)^(1 / (Nexercices - 1)) - 1) * 100,\n                                                                                 NA),\n    \n                                              variation.rémunération.normalisée = ifelse(durée.sous.revue == Nexercices,\n                                                                                    variation.rémunération,\n                                                                                    NA))]\n\n\nAnalyse.variations.synthèse <- Analyse.variations.synthèse[ ,                                                                 \n                                         `:=`(variation.moyenne.rémunération.normalisée = ifelse(!is.na(variation.rémunération.normalisée),\n                                                                                            variation.moyenne.rémunération,\n                                                                                            NA),\n                                               plus.2.ans  = (total.jours  >= 730),  \n                                               moins.2.ans = (total.jours < 730),\n                                               moins.1.an  = (total.jours < 365),\n                                               moins.six.mois = (total.jours < 183))]\n                                               \n# Note : sous environnement knitr/spin, data.table parvient mal à identifier les noms locaux,\n# ce qui ne pose pas de problème en environnement standard. Il faut donc rajouter le préfixe de base dans ce cas.\n\n\ntemp2 <- Analyse.variations.synthèse[ , .(Matricule, indicatrice.période, pris.en.compte, Nexercices, plus.2.ans)]\n\n\nAnalyse.variations.par.exercice <- merge(Analyse.variations.par.exercice, temp2, by=\"Matricule\")\n\nrm(temp2)\n\nAnalyse.variations.par.exercice <- Analyse.variations.par.exercice[ , est.rmpp :=  Année != début.période.sous.revue  \n                                                                                   & ! is.na(ind.quotité)\n                                                                                   &  ind.quotité == TRUE\n                                                                                   & bitwAnd(bitwShiftL(1, Année - 1 - début.période.sous.revue),\n                                                                                             indicatrice.période) != 0]\n\n\nAnalyse.variations.synthèse.plus.2.ans  <- data.frame(NULL)\nAnalyse.variations.synthèse.moins.2.ans <- data.frame(NULL)\n\nmessage(\"Analyse des variations réalisée.\")\n\nBulletins.paie.nir.total.hors.élus <- unique(Bulletins.paie[Année == fin.période.sous.revue\n                                                           & Mois == 12\n                                                           & Statut != \"ELU\",\n                                                           c(clé.fusion, \"Nir\"), with=FALSE], by = NULL)\n\nBulletins.paie.nir.fonctionnaires  <- unique(Bulletins.paie[Année == fin.période.sous.revue\n                                                           & Mois  == 12\n                                                           & (Statut == \"TITULAIRE\" |\n                                                              Statut == \"STAGIAIRE\"),\n                                                           c(clé.fusion, \"Nir\"), with=FALSE], by = NULL)\n\nBulletins.paie.nir.nontit  <- unique(Bulletins.paie[Année == fin.période.sous.revue\n                                                           & Mois  == 12\n                                                           & (Statut == \"NON_TITULAIRE\"),\n                                                           c(clé.fusion, \"Nir\"), with=FALSE], by = NULL)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \n\nBulletins.paie.nir.permanents  <- unique(Bulletins.paie[Année == fin.période.sous.revue\n                                                           & Mois  == 12\n                                                           & (Statut == \"NON_TITULAIRE\" | Statut == \"STAGIAIRE\" | Statut == \"TITULAIRE\"),\n                                                           c(clé.fusion, \"Nir\"), with=FALSE], by = NULL)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \nnames(Bulletins.paie.nir.total.hors.élus) <- c(clé.fusion, \"Nir\")\n\n# Age au 31 décembre de l'exercice dernier.exerciceal de la période sous revue\n# ne pas oublier [ ,...] ici:\n\nannées.fonctionnaires   <- extraire.nir(Bulletins.paie.nir.fonctionnaires, fin.période.sous.revue)\n\nannées.total.hors.élus  <- extraire.nir(Bulletins.paie.nir.total.hors.élus, fin.période.sous.revue)\n\nannées.total.permanents  <- extraire.nir(Bulletins.paie.nir.permanents, fin.période.sous.revue)\n\nannées.total.nontit     <- extraire.nir(Bulletins.paie.nir.nontit, fin.période.sous.revue)\n\nBulletins.paie.nir.total.hors.élus.début <- unique(Bulletins.paie[Année == début.période.sous.revue\n                                                                  & Mois == 12\n                                                                  & Statut != \"ELU\",\n                                                                  c(clé.fusion, \"Nir\"), with=FALSE], by = NULL)\n\n\nBulletins.paie.nir.fonctionnaires.début  <- unique(Bulletins.paie[Année == début.période.sous.revue\n                                                                  & Mois  == 12\n                                                                  & (Statut == \"TITULAIRE\" |\n                                                                     Statut == \"STAGIAIRE\"),\n                                                                  c(clé.fusion, \"Nir\"), with=FALSE], by = NULL)\n\nBulletins.paie.nir.nontit.début <- unique(Bulletins.paie[Année == début.période.sous.revue\n                                                           & Mois == 12\n                                                           & Statut == \"NON_TITULAIRE\"   , .(Matricule, Nir)], by = NULL)\n\nBulletins.paie.nir.permanents.début  <- unique(Bulletins.paie[Année == début.période.sous.revue\n                                                           & Mois  == 12\n                                                           & (Statut == \"NON_TITULAIRE\" | Statut == \"STAGIAIRE\" | Statut == \"TITULAIRE\"),\n                                                           c(clé.fusion, \"Nir\"), with=FALSE], by = NULL)\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \nnames(Bulletins.paie.nir.total.hors.élus.début) <- c(clé.fusion, \"Nir\")\n\n\n# Age au 31 décembre de l'exercice dernier.exerciceal de la période sous revue\n# ne pas oublier [ ,...] ici:\n\nannées.fonctionnaires.début   <- extraire.nir(Bulletins.paie.nir.fonctionnaires.début, début.période.sous.revue)\n\nannées.total.hors.élus.début  <- extraire.nir(Bulletins.paie.nir.total.hors.élus.début, début.période.sous.revue)\n\nannées.total.nontit.début <- extraire.nir(Bulletins.paie.nir.nontit.début, début.période.sous.revue)\n\nannées.total.permanents.début <- extraire.nir(Bulletins.paie.nir.permanents.début, début.période.sous.revue)\n\n\nmessage(\"Analyse démographique réalisée.\")\n\nif (!is.null(Paie) & !is.null(Analyse.rémunérations)\n    & !is.null(Analyse.variations.synthèse) & !is.null(Analyse.variations.par.exercice))\n  message(\"Statistiques de synthèse réalisées\")\n\n########### Démographie ########################\n\n#'# 1. Statistiques de population\n#'\n#'### 1.1 Effectifs\n\nliste.années <- as.character(période)\n\neffectifs <- lapply(période,\n                    function(x) {\n                      A <- Bulletins.paie[Année == x, .(Matricule, Statut, permanent, quotité, nb.mois, Grade)]\n                      E <- unique(A[ , .(Matricule, permanent)], by = NULL)\n                      ETP <- unique(Bulletins.paie[Année == x, .(quotité, Matricule, Statut, Mois, nb.mois)], by = NULL)\n                      F <- E[permanent == TRUE, ]\n                      G <- unique(A[A$Statut == \"TITULAIRE\" | A$Statut == \"STAGIAIRE\", .(Matricule, permanent)], by = NULL)\n                      H <- G[permanent == TRUE, ]\n                      I <- unique(A[A$Statut == \"ELU\", .(Matricule, permanent)], by = NULL)\n                      J <- I[permanent == TRUE, ]\n                      K <- unique(A[Statut != \"TITULAIRE\" & Statut != \"STAGIAIRE\" & Grade == \"V\", .(Matricule, permanent)], by = NULL)\n                      L <- unique(A[Grade == \"A\", .(Matricule, permanent)], by = NULL)\n                      c(nrow(E), nrow(F), nrow(G),\n                        nrow(H), nrow(I), nrow(J),\n                        nrow(K), nrow(L),\n                        ETP[Statut != \"ELU\" , sum(quotité/nb.mois, na.rm=TRUE)],\n                        ETP[Statut != \"ELU\" , sum(quotité, na.rm=TRUE)] / 12,\n                        ETP[Matricule %chin% Analyse.variations.par.exercice[est.rmpp == TRUE\n                                                                             & Année == x,\n                                                                               Matricule],\n                            sum(quotité, na.rm=TRUE)] / 12,\n                        ETP[Statut == \"TITULAIRE\" | Statut == \"STAGIAIRE\",\n                              sum(quotité, na.rm=TRUE)] / 12,\n                        ETP[Matricule %chin% Analyse.variations.par.exercice[permanent == TRUE\n                                                                             & Statut == \"TITULAIRE\"\n                                                                             & temps.complet == TRUE\n                                                                             & Année == x,\n                                                                             Matricule],\n                            sum(quotité, na.rm=TRUE)] / 12)\n                     })\n\nfor (i in 1:length(effectifs)) names(effectifs[[i]]) <- c(\"Effectifs\", \"Effectifs_12\", \"Effectifs_12_fonct\",\n                                                      \"Effectifs_12_fonct\", \"Effectifs_élus\", \"Effectifs_12_élus\",\n                                                      \"Effectifs_vac\", \"Effectifs_am\",\n                                                      \"ETP\", \"ETPT\", \"ETPT_pp\", \n                                                      \"ETPT_fonct\", \"Tit_12_100\")\n\neffectifs.locale <- lapply(effectifs, function(x) formatC(x, big.mark = \" \", format=\"f\", digits=1, decimal.mark=\",\"))\n\ntableau.effectifs <- as.data.frame(effectifs.locale,\n                                   row.names = c(\"Total effectifs\", \"  dont présents 12 mois\", \"  dont fonctionnaires\",\n                                                 \"  dont fonct. présents 12 mois\", \"  dont élus\", \"  dont élus présents 12 mois\",\n                                                 \"  dont vacataires détectés (a)\", \"  dont assistantes maternelles détectées (a)\",\n                                                 \"Total ETP/année (b)\", \"Total ETPT/année (c)\", \"Total ETPT/année personnes en place (d)\",\n                                                 \"Total ETPT/année fonctionnaires\", \"Total ETPT/année titulaires à temps complet\"))\n\nnames(tableau.effectifs) <- liste.années\nnames(effectifs) <- liste.années\n#'  \n#  \n#'&nbsp;*Tableau `r incrément()`*   \n#            \nkable(tableau.effectifs, row.names = TRUE, align='c')\n#'\n#'**Nota:**   \n#'*(a) Sur la base des libellés d'emploi et des libellés de lignes de paye. La détection peut être lacunaire*   \n#'*(b) ETP  : Equivalent temps plein = rémunération . quotité*  \n#'*(c) ETPT : Equivalent temps plein travaillé = ETP . 12/nombre de mois travaillés dans l'année*  \n#'*(d) Personnes en place : présentes en N et N-1 avec la même quotité   \n#'*Les cinq dernières lignes du tableau sont calculées en ne tenant pas compte des élus.   \n#'   \n#'*Effectifs pourvus mesurés par l'émission d'un bulletin de paie dans l'année.*     \n#'   \n#'[Lien vers la base des effectifs](Bases/Effectifs/tableau.effectifs.csv)\n#'\n#'\n#'### 1.2 Pyramide des âges, personnels non élus\n\n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \nRésumé(c(\"Âge des personnels <br>au 31/12/\" %+% début.période.sous.revue,\n         \"Effectif\"),\n       années.total.hors.élus.début,\n       extra = \"length\",\n       align = 'c')\n#'  \nif (longueur.non.na(années.total.hors.élus.début) > 0)\n  hist(années.total.hors.élus.début,\n       xlab = \"Âge au 31 décembre \" %+% début.période.sous.revue,\n       xlim = c(18, 75),\n       ylab = \"Effectif\",\n       main = \"Pyramide des âges des personnels (non élus)\",\n       col = \"blue\",\n       nclass = 50)\n\n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nRésumé(c(\"Âge des personnels <br>au 31/12/\" %+% fin.période.sous.revue,\n         \"Effectif\"),\n       années.total.hors.élus,\n       extra = \"length\",\n       align = 'c')\n\n#'  \n#'  \nif (longueur.non.na(années.total.hors.élus) > 0)\n  hist(années.total.hors.élus,\n       xlab = \"Âge au 31 décembre \" %+% fin.période.sous.revue,\n       xlim = c(18, 75),\n       ylab = \"Effectif\",\n       main = \"Pyramide des âges des personnels (non élus)\",\n       col = \"blue\",\n       nclass = 50)\n\n#'\n#'### 1.2 Pyramide des âges, personnels non titulaires\n\n\n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nRésumé(c(\"Âge des personnels non titulaires<br>au 31/12/\" %+% début.période.sous.revue,\n         \"Effectif\"),\n       années.total.nontit.début,\n       extra = \"length\",\n       align = 'c')\n\n#'  \nif (longueur.non.na(années.total.nontit.début) > 0)\n  hist(années.total.nontit.début,\n       xlab = \"Âge au 31 décembre \" %+% début.période.sous.revue,\n       xlim = c(18, 75),\n       ylab = \"Effectif\",\n       main = \"Pyramide des âges des personnels non titulaires\",\n       col = \"blue\",\n       nclass = 50)\n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nRésumé(c(\"Âge des personnels non titulaires<br>au 31/12/\" %+% fin.période.sous.revue,\n         \"Effectif\"),\n       années.total.nontit,\n       extra = \"length\",\n       align = 'c')\n\n\t   \nif (longueur.non.na(années.total.nontit) > 0)\n  hist(années.total.nontit,\n       xlab = \"Âge au 31 décembre \" %+% fin.période.sous.revue,\n       xlim = c(18, 75),\n       ylab = \"Effectif\",\n       main = \"Pyramide des âges des personnels non titulaires\",\n       col = \"blue\",\n       nclass = 50)\n\t   \n\t   \n#'  \n#'[Lien vers la base des âges](Bases/Effectifs/Bulletins.paie.nir.nontit.csv)  \n#'  \n#'\n#'\n#'### 1.4 Pyramide des âges, personnels fonctionnaires stagiaires et titulaires\n\n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nRésumé(c(\"Âge des personnels <br>au 31/12/\" %+% début.période.sous.revue,\n         \"Effectif\"),\n       années.fonctionnaires.début,\n       extra = \"length\",\n       align = 'c')\n\n#'  \n#'\n\nif (longueur.non.na(années.fonctionnaires.début) > 0)\n  hist(années.fonctionnaires.début,\n       xlab = \"Âge au 31 décembre \" %+% début.période.sous.revue,\n       xlim = c(18,68),\n       ylab = \"Effectif\",\n       main = \"Pyramide des âges des fonctionnaires\",\n       col = \"navy\",\n       nclass = 50)\n\n#'  \n\n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nRésumé(c(\"Âge des personnels <br>au 31/12/\" %+% fin.période.sous.revue,\n         \"Effectif\"),\n       années.fonctionnaires,\n       extra = \"length\",\n       align = 'c')\n\n#'\n\nif (longueur.non.na(années.fonctionnaires) > 0)\n  hist(années.fonctionnaires,\n       xlab = \"Âge au 31 décembre \" %+% fin.période.sous.revue,\n       xlim = c(18,68),\n       ylab = \"Effectif\",\n       main = \"Pyramide des âges des fonctionnaires\",\n       col = \"navy\",\n       nclass = 50)\n\n#'  \n#'[Lien vers la base des âges](Bases/Effectifs/Bulletins.paie.nir.fonctionnaires.csv)  \n#'  \n\n#'### 1.5 Pyramide des âges, personnels permanents (titulaires, stagiaires et non titulaires)\n\n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nRésumé(c(\"Âge des personnels <br>au 31/12/\" %+% début.période.sous.revue,\n         \"Effectif\"),\n       années.total.permanents.début,\n       extra = \"length\",\n       align = 'c')\n\n#'  \n\nif (longueur.non.na(années.total.permanents.début) > 0)\n  hist(années.total.permanents.début,\n       xlab = \"Âge au 31 décembre \" %+% début.période.sous.revue,\n       xlim = c(18,68),\n       ylab = \"Effectif\",\n       main = \"Pyramide des âges des permanents\",\n       col = \"navy\",\n       nclass = 50)\n\n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nRésumé(c(\"Âge des personnels <br>au 31/12/\" %+% fin.période.sous.revue,\n         \"Effectif\"),\n       années.total.permanents,\n       extra = \"length\",\n       align = 'c')\n\n#'\n\nif (longueur.non.na(années.total.permanents) > 0)\n  hist(années.total.permanents,\n       xlab = \"Âge au 31 décembre \" %+% fin.période.sous.revue,\n       xlim = c(18,68),\n       ylab = \"Effectif\",\n       main = \"Pyramide des âges des permanents\",\n       col = \"navy\",\n       nclass = 50)\n\n#'  \n#'[Lien vers la base des âges](Bases/Effectifs/Bulletins.paie.nir.permanents.csv)  \n#'  \n\n#'### 1.6 Effectifs des personnels par durée de service\n#'\n#'**Personnels en fonction (hors élus) des exercices `r début.période.sous.revue` à `r fin.période.sous.revue` inclus :**\n#'\n\n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\n\n\nTableau(c(\"Plus de 2 ans\",\n          \"Moins de 2 ans\",\n          \"Moins d'un an\",\n          \"Moins de six mois\"),\n        sum(Analyse.variations.synthèse$plus.2.ans, na.rm=TRUE),\n        sum(Analyse.variations.synthèse$moins.2.ans, na.rm=TRUE),\n        sum(Analyse.variations.synthèse$moins.1.an, na.rm=TRUE),\n        sum(Analyse.variations.synthèse$moins.six.mois, na.rm=TRUE))\n\n\n#'\n\nif (nrow(Analyse.variations.par.exercice) > 0)\n  qplot(factor(Année),\n        data = Analyse.variations.par.exercice,\n        geom = \"bar\",\n        fill = factor(!Analyse.variations.par.exercice$plus.2.ans),\n        main = \"Evolutions entre \" %+% début.période.sous.revue %+% \" et \" %+% fin.période.sous.revue,\n        xlab = étiquette.année,\n        ylab = \"Effectif\",\n        asp = 1.4)        +\n  scale_fill_discrete(name = \"Personnels (non élus) en fonction\",\n                      breaks = c(TRUE, FALSE),\n                      labels = c(\"Moins de deux ans\", \"Plus de deux ans\"))\n\n\n\n#'\n#'**Effectifs (hors élus)**   \n#'\n\neffectifs.var <- lapply(période,\n                        function(x) {\n\n                          E <- unique(Analyse.variations.par.exercice[Année == x , .(Matricule, plus.2.ans)], by=NULL)\n                          F <- E[plus.2.ans == TRUE]\n                          tot <- nrow(E)\n                          plus.2.ans <- nrow(F)\n                          résultat <- c(plus.2.ans, tot - plus.2.ans, tot)\n                          rm(E, F, tot, plus.2.ans)\n                          résultat\n                        })\n\neffectifs.var.locale <- lapply(effectifs.var, function(x) formatC(x, big.mark = \" \", format=\"f\", digits=0, decimal.mark=\",\"))\n\ntableau.effectifs.var <- as.data.frame(effectifs.var.locale, row.names = c(\"Plus de deux ans\", \"Moins de deux ans\", \"Total\"))\n\nnames(tableau.effectifs.var) <- liste.années\n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nkable(tableau.effectifs.var, row.names = TRUE, align='c')\n#'\n\n\n#'\n#'**Nota :**\n#'*Personnels en place : ayant servi au moins deux années consécutives pendant la période.*     \n#'*Plus/moins de deux ans : plus/mois de 730 jours sur la période sous revue.*   \n#'\n\nannée <- début.période.sous.revue\n\ncolonnes.sélectionnées <- c(\"traitement.indiciaire\",\n                            \"autres.rémunérations\",\n                            \"rémunération.indemnitaire.imposable\",\n                            \"rémunération.indemnitaire.imposable.eqtp\",\n                            \"total.lignes.paie\",\n                            \"Montant.brut.annuel\",\n                            \"Montant.brut.annuel.eqtp\",\n                            \"part.rémunération.indemnitaire\",\n                            \"Statut\",\n                            \"Grade\",\n                            \"Filtre_actif_non_annexe\",\n                            clé.fusion)\n\n# pour année début #\n\n###########  Analyse des rémunérations  début de période###################\n#  ATTENTION : les années doivent être SUCCESSIVES                        #\n\n\n\n########### Analyse statique premier exercice ########################\n\n#'# 2. Rémunérations brutes : analyse pour l'exercice `r année`    \n#'    \n#'## 2.1 Masse salariale brute de l'ensemble des agents     \n#'     \n#'  \nmasses.premier.personnels <- colSums(Analyse.rémunérations.premier.exercice[Statut != \"ELU\",\n                                                                            .(Montant.brut.annuel,\n                                                                           rémunération.indemnitaire.imposable,\n                                                                           indemnités.élu,\n                                                                           total.lignes.paie,\n                                                                           autres.rémunérations)])\n  \nmasses.premier.élus <- colSums(Analyse.rémunérations.premier.exercice[Statut == \"ELU\",\n                                                                      .(Montant.brut.annuel,\n                                                                        rémunération.indemnitaire.imposable,\n                                                                        indemnités.élu,\n                                                                        total.lignes.paie,\n                                                                        autres.rémunérations)])\n\n#'### Cumuls des rémunérations brutes pour l'exercice `r année`\n#'  \n#'*Personnels (hors élus)*     \n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nTableau.vertical2(c(\"Agrégats\",\n                    \"k&euro;\"),\n                  c(\"Brut annuel (bulletins)\",\n                    \"Brut annuel (lignes), dont :\",\n                    \"\\\\ \\\\ Primes :\",\n                    \"\\\\ \\\\ Autres rémunérations\",\n                    \"Part de primes en %\"),\n                  c(masses.premier.personnels[\"Montant.brut.annuel\"],\n                  masses.premier.personnels[\"total.lignes.paie\"],\n                  masses.premier.personnels[\"rémunération.indemnitaire.imposable\"],\n                  masses.premier.personnels[\"autres.rémunérations\"],\n                  masses.premier.personnels[\"rémunération.indemnitaire.imposable\"]/masses.premier.personnels[\"Montant.brut.annuel\"] * 100))\n\n#'  \n#'*Elus*    \n#'  \n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nTableau.vertical2(c(\"Agrégats\",\n                    \"k&euro;\"),\n                  c(\"Brut annuel (bulletins)\",\n                    \"Brut annuel (lignes), dont :\",\n                    \"\\\\ \\\\ Primes :\",\n                    \"\\\\ \\\\ Autres rémunérations\"),\n                  c(masses.premier.élus[\"Montant.brut.annuel\"],\n                    masses.premier.élus[\"total.lignes.paie\"],\n                    masses.premier.élus[\"rémunération.indemnitaire.imposable\"],\n                    masses.premier.élus[\"autres.rémunérations\"]))\n\n#'  \n#'**Définitions :**\n#'\n#'  *Brut annuel (bulletins)*   : somme du champ *Brut*    \n#'  *Brut annuel (lignes)*      : somme du champ *Montant* des lignes de paye, dont :    \n#'  *Primes*                    : indemnités sauf remboursements, certaines IJSS, indemnités d'élu le cas échéant, Supplément familial de traitement et Indemnité de résidence        \n#'  *Indemnités d'élu*          : toutes rémunérations indemnitaires des élus    \n#'  *Autres rémunérations*      : acomptes, retenues sur brut, rémunérations diverses, rappels   \n#'  \n\n#'**Tests de cohérence**\n#'\n#'Somme des rémunérations brutes versées aux personnels (non élus) :  \n#'  \n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nTableau.vertical2(c(\"Agrégats\",\n                    \"k&euro;\"),\n                  c(\"Bulletins de paie \",\n                    \"Lignes de paie \",\n                    \"Différence \"),\n                  c(masses.premier.personnels[\"Montant.brut.annuel\"],\n                    masses.premier.personnels[\"total.lignes.paie\"],\n                    masses.premier.personnels[\"Montant.brut.annuel\"] -\n                    masses.premier.personnels[\"total.lignes.paie\"]))\n\n#'\n#'à comparer aux soldes des comptes 641 et 648 du compte de gestion.\n#'\n#'Somme des rémunérations brutes versées (élus) :  \n#'  \n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nTableau.vertical2(c(\"Agrégats\",\n                    \"k&euro;\"),\n                  c(\"Bulletins de paie \",\n                    \"Lignes de paie \",\n                    \"Différence \"),\n                  c(masses.premier.élus[\"Montant.brut.annuel\"],\n                    masses.premier.élus[\"total.lignes.paie\"],\n                    masses.premier.élus[\"Montant.brut.annuel\"] -\n                    masses.premier.élus[\"total.lignes.paie\"]))\n\n#'\n#'Les résultats sont exprimés en euros.\n#'\n#'   \n#'## 2.2 Masse salariale brute des fonctionnaires\n#'\n#'*Cette section concerne les personnels fonctionnaires titulaires et stagiaires*  \n#'\nfiltre.fonctionnaire <- function (X) X[ !is.na(X)  & X > minimum.positif ]\n\nAR <- Analyse.rémunérations.premier.exercice[Statut == \"TITULAIRE\" | Statut == \"STAGIAIRE\", colonnes.sélectionnées, with=FALSE]\nattach(AR)\nsource(\"histogrammes.R\", encoding = \"UTF-8\")\nhistogrammes()\ndetach(AR)\n#'    \n#'**Nota :**   \n#'*EQTP : Equivalent temps plein = 12 . moyenne du ratio ratio rémunération / quotité*  \n#'    \n#'**Effectif : `r nrow(AR)`**\n#'\n#'**Tests de cohérence**\n\nif (nrow(AR) > 0) {\n  masses.premier <- colSums(AR[ ,.(Montant.brut.annuel, rémunération.indemnitaire.imposable, total.lignes.paie, autres.rémunérations)])\n} else {\n  masses.premier <- c(0,0) \n}\n\n#'Somme des rémunérations brutes versées aux personnels titulaires et stagiaires :\n#'\n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nTableau.vertical2(c(\"Agrégats\",\n                    \"k&euro;\"),\n                  c(\"Brut annuel (bulletins)\",\n                    \"Brut annuel (lignes), dont :\",\n                    \"\\\\ \\\\ Primes :\",\n                    \"\\\\ \\\\ Autres rémunérations\",\n                    \"Part de primes en %\"),\n                  c(masses.premier[\"Montant.brut.annuel\"],\n                    masses.premier[\"total.lignes.paie\"],\n                    masses.premier[\"rémunération.indemnitaire.imposable\"],\n                    masses.premier[\"autres.rémunérations\"],\n                    masses.premier[\"rémunération.indemnitaire.imposable\"]/masses.premier[\"Montant.brut.annuel\"] * 100))\n\n#'\n#'**Définitions :**\n#'\n#'  *Brut annuel (bulletins)*   : somme du champ *Brut*   \n#'  *Brut annuel (lignes)*      : somme du champ *Montant* des lignes de paye, dont :   \n#'  *Primes*                    : indemnités sauf remboursements, certaines IJSS, indemnités d'élu le cas échéant, Supplément familial de traitement et Indemnité de résidence        \n#'  *Indemnités d'élus*         : toutes rémunérations indemnitaires des élus    \n#'  *Autres rémunérations*      : acomptes, retenues sur brut, rémunérations diverses, rappels   \n#'\n#'**Tests de cohérence**\n#'\n#'Somme des rémunérations brutes versées aux personnels (non élus) :\n#'\n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nTableau.vertical2(c(\"Agrégats\",\n                    \"k&euro;\"),\n                  c(\"Bulletins de paie \",\n                    \"Lignes de paie \",\n                    \"Différence \"),\n                  c(masses.premier[\"Montant.brut.annuel\"],\n                    masses.premier[\"total.lignes.paie\"],\n                    masses.premier[\"Montant.brut.annuel\"] -\n                    masses.premier[\"total.lignes.paie\"]))\n\n\n#'\n#'A comparer aux soldes des comptes 6411, 6419 et 648 du compte de gestion.\n#'\n#'\n#'**Formation et distribution du salaire brut moyen par tête (SMPT) en EQTP pour l'année `r année`**     \n#'   \n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nRésumé(c(\"Traitement indiciaire\",\n         \"Primes\",\n         \"Autres rémunérations\",\n         \"Effectif\"),\n       AR[Grade != \"V\" & Grade != \"A\" & Statut != \"ELU\" & Filtre_actif_non_annexe == TRUE, .(traitement.indiciaire,\n               rémunération.indemnitaire.imposable,\n               autres.rémunérations)],\n       extra = \"length\")\n\n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nRésumé(c(\"Total lignes hors rappels\",\n         \"Total brut\",\n         \"SMPT brut en EQTP\",\n         \"Part de la rém. indemnitaire\",\n         \"Effectif\"),\n       AR[Grade != \"V\" & Grade != \"A\" & Statut != \"ELU\" & Filtre_actif_non_annexe == TRUE, .(total.lignes.paie,\n               Montant.brut.annuel,\n               Montant.brut.annuel.eqtp,\n               part.rémunération.indemnitaire)],\n       extra = \"length\")\n\n#'   \n#'*Hors vacataires identifiés, assistantes maternelles, élus locaux et pour les postes actifs non annexes*  \n#'\n#'**Catégorie A**\n#'\n\nARA <- data.table::data.table(NULL)\nARB <- data.table::data.table(NULL)\nARC <- data.table::data.table(NULL)\n\nif (fichier.personnels.existe) {\n  ARA <- AR[Catégorie == 'A'& Grade != \"V\" & Grade != \"A\" & Statut != \"ELU\" & Filtre_actif_non_annexe == TRUE, ]\n  #'  \n  #'&nbsp;*Tableau `r incrément()`*   \n  #'    \n  \n  Résumé(c(\"Traitement indiciaire\",\n           \"Primes\",\n           \"Autres rémunérations\"),\n         ARA[ , .(traitement.indiciaire,\n                  rémunération.indemnitaire.imposable,\n                  autres.rémunérations)])\n} else\n  cat(\"Pas de statistique en l'absence de fichier des catégories.\\n\")\n\n#'\n\nif (fichier.personnels.existe) {\n  #'  \n  #'&nbsp;*Tableau `r incrément()`*   \n  #'    \n  \n  Résumé(c(\"Total rémunérations\", \n           \"Total rémunérations EQTP\", \n           \"Part de la rémunération indemnitaire\"),\n         ARA[ , .(Montant.brut.annuel,\n                  Montant.brut.annuel.eqtp,\n                  part.rémunération.indemnitaire)])\n}\n\n#'\n#'**Effectif : `r nrow(ARA)`**  \n#'\n#'**Catégorie B**\n#'\n\nif (fichier.personnels.existe) {\n  ARB <- AR[Catégorie == 'B' & Grade != \"V\" & Grade != \"A\" & Statut != \"ELU\" & Filtre_actif_non_annexe == TRUE, ]\n  #'  \n  #'&nbsp;*Tableau `r incrément()`*   \n  #'    \n  \n  Résumé(c(\"Traitement indiciaire\",\n           \"Primes\",\n           \"Autres rémunérations\"),\n         ARB[, .(traitement.indiciaire,\n                  rémunération.indemnitaire.imposable,\n                  autres.rémunérations)])\n} else\n  cat(\"Pas de statistique en l'absence de fichier des catégories.\\n\")\n\n#'\n\nif (fichier.personnels.existe) {\n  #'  \n  #'&nbsp;*Tableau `r incrément()`*   \n  #'    \n  \n  Résumé(c(\"Total rémunérations\",\n           \"Total rémunérations EQTP\",\n           \"Part de la rémunération indemnitaire\"),\n         ARB[, .(Montant.brut.annuel,\n                  Montant.brut.annuel.eqtp,\n                  part.rémunération.indemnitaire)])\n}\n\n#'\n#'**Effectif : `r nrow(ARB)`**\n#'\n#'**Catégorie C**\n#'\n\n\nif (fichier.personnels.existe) {\n  ARC <- AR[Catégorie == 'C'& Grade != \"V\" & Grade != \"A\" & Statut != \"ELU\" & Filtre_actif_non_annexe == TRUE, ]\n  #'  \n  #'&nbsp;*Tableau `r incrément()`*   \n  #'    \n  \n  Résumé(c(\"Traitement indiciaire\",\n           \"Primes\",\n           \"Autres rémunérations\"),\n         ARC[ , .(traitement.indiciaire,\n                  rémunération.indemnitaire.imposable,\n                  autres.rémunérations)])\n} else\n  cat(\"Pas de statistique en l'absence de fichier des catégories.\\n\")\n\n#'\n\nif (fichier.personnels.existe) {\n  #'  \n  #'&nbsp;*Tableau `r incrément()`*   \n  #'    \n  \n  Résumé(c(\"Total rémunérations\",\n           \"Total rémunérations EQTP\",\n           \"Part de la rémunération indemnitaire\"),\n         ARC[ , .(Montant.brut.annuel,\n                  Montant.brut.annuel.eqtp,\n                  part.rémunération.indemnitaire) ])\n}\n\n#'**Effectif : `r nrow(ARC)`**\n#'\n#'\n#'######      <br>\n#'\n#'## 2.3 Contractuels, vacataires et stagiaires inclus   \n#'   \n#'*Les assistantes maternelles et les vacataires sont ici inclus, pour les postes non annexes*   \n#'\nattach(Analyse.rémunérations.premier.exercice, warn.conflicts=FALSE)\ntemp <- rémunération.indemnitaire.imposable.eqtp[Statut != \"ELU\"\n                            & Statut != \"TITULAIRE\"\n                            & Statut != \"STAGIAIRE\"\n                            & Filtre_actif_non_annexe == TRUE\n                            & rémunération.indemnitaire.imposable.eqtp > 1000] / 1000\n\nif (longueur.non.na(temp) > 0)\n  hist(temp,\n       xlab = \"Rémunération indemnitaire brute imposable en milliers d'euros EQTP\\n\",\n       ylab = \"Effectif\",\n       xlim = c(0, 40),\n       main = \"Rémunération annuelle totale des contractuels en \" %+% année,\n       col = \"red\",\n       nclass = 50)\n#'   \n#'**Nota :**\n#'Ne sont retenues que les rémunérations supérieures à 1 000 k&euro;.\n#'Les élus ne sont pas pris en compte.\n#'   \n\ntemp <- positive(autres.rémunérations)\n\ndetach(Analyse.rémunérations.premier.exercice)\n\nif (longueur.non.na(temp))\n  hist(temp,\n       xlab = \"En euros :\\n divers\",\n       ylab = \"Effectif\",\n       xlim = c(0, 5000),\n       main = \"Autres rémunérations en \" %+% année,\n       nclass = 50,\n       col = \"grey\")\n\n#'\n\nAR <- Analyse.rémunérations.premier.exercice[Statut != \"ELU\"\n                                             &  Statut != \"TITULAIRE\"\n                                             &  Statut != \"STAGIAIRE\"\n                                             & Filtre_actif_non_annexe == TRUE,\n                                             colonnes.sélectionnées, \n                                             with=FALSE]\n\n#'   \n#'**Formation et distribution du salaire brut moyen par tête (SMPT) en EQTP pour l'année `r année`**     \n#'   \n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nRésumé(c(\"Primes\",\n         \"Autres rémunérations\",\n         \"Effectif\"),\n       AR[ , .(rémunération.indemnitaire.imposable,\n               autres.rémunérations)],\n       extra = \"length\")\n\n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\n\nRésumé(c(\"Total rémunérations\",\n         \"Total rémunérations EQTP\",\n         \"Effectif\"),\n       AR[ , .(Montant.brut.annuel, Montant.brut.annuel.eqtp)],\n       extra = \"length\")\n#'\n\nnom.base.analyse <- \"Analyse.rémunérations.premier.exercice\"\n\n\n# pour année fin #\n\nannée <- fin.période.sous.revue\n\n###########  Analyse des rémunérations  fin de période###################\n#  ATTENTION : les années doivent être SUCCESSIVES                      #\n\n\n\n########### Analyse statique dernier exercice ########################\n\n#'# 3. Rémunérations brutes : analyse pour l'exercice `r année`    \n#'    \n#'## 3.1 Masse salariale brute de l'ensemble des agents     \n#'     \n#'  \nmasses.dernier.personnels <- colSums(Analyse.rémunérations.dernier.exercice[Statut != \"ELU\",\n                                                                            .(Montant.brut.annuel,\n                                                                              rémunération.indemnitaire.imposable,\n                                                                              indemnités.élu,\n                                                                              total.lignes.paie,\n                                                                              autres.rémunérations)])\n\nmasses.dernier.élus <- colSums(Analyse.rémunérations.dernier.exercice[Statut == \"ELU\",\n                                                                      .(Montant.brut.annuel,\n                                                                        rémunération.indemnitaire.imposable,\n                                                                        indemnités.élu,\n                                                                        total.lignes.paie,\n                                                                        autres.rémunérations)])\n\n#'### Cumuls des rémunérations brutes pour l'exercice `r année`\n#'  \n#'*Personnels (hors élus)*     \n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nTableau.vertical2(c(\"Agrégats\",\n                    \"k&euro;\"),\n                  c(\"Brut annuel (bulletins)\",\n                    \"Brut annuel (lignes), dont :\",\n                    \"\\\\ \\\\ Primes :\",\n                    \"\\\\ \\\\ Autres rémunérations\",\n                    \"Part de primes en %\"),\n                  c(masses.dernier.personnels[\"Montant.brut.annuel\"],\n                    masses.dernier.personnels[\"total.lignes.paie\"],\n                    masses.dernier.personnels[\"rémunération.indemnitaire.imposable\"],\n                    masses.dernier.personnels[\"autres.rémunérations\"],\n                    masses.dernier.personnels[\"rémunération.indemnitaire.imposable\"]/masses.dernier.personnels[\"Montant.brut.annuel\"] * 100))\n\n#'  \n#'*Elus*    \n#'  \n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nTableau.vertical2(c(\"Agrégats\",\n                    \"k&euro;\"),\n                  c(\"Brut annuel (bulletins)\",\n                    \"Brut annuel (lignes), dont :\",\n                    \"\\\\ \\\\ Primes :\",\n                    \"\\\\ \\\\ Autres rémunérations\"),\n                  c(masses.dernier.élus[\"Montant.brut.annuel\"],\n                    masses.dernier.élus[\"total.lignes.paie\"],\n                    masses.dernier.élus[\"rémunération.indemnitaire.imposable\"],\n                    masses.dernier.élus[\"autres.rémunérations\"]))\n\n#'  \n#'**Définitions :**\n#'\n#'  *Brut annuel (bulletins)*   : somme du champ *Brut*    \n#'  *Brut annuel (lignes)*      : somme du champ *Montant* des lignes de paye, dont :    \n#'  *Primes*                    : indemnités sauf remboursements, certaines IJSS, indemnités d'élu le cas échéant, Supplément familial de traitement et Indemnité de résidence        \n#'  *Indemnités d'élu*          : toutes rémunérations indemnitaires des élus    \n#'  *Autres rémunérations*      : acomptes, retenues sur brut, rémunérations diverses, rappels   \n#'  \n\n#'**Tests de cohérence**\n#'\n#'Somme des rémunérations brutes versées aux personnels (non élus) :  \n#'  \n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nTableau.vertical2(c(\"Agrégats\",\n                    \"k&euro;\"),\n                  c(\"Bulletins de paie \",\n                    \"Lignes de paie \",\n                    \"Différence \"),\n                  c(masses.dernier.personnels[\"Montant.brut.annuel\"],\n                    masses.dernier.personnels[\"total.lignes.paie\"],\n                    masses.dernier.personnels[\"Montant.brut.annuel\"] -\n                      masses.dernier.personnels[\"total.lignes.paie\"]))\n\n#'\n#'à comparer aux soldes des comptes 641 et 648 du compte de gestion.\n#'\n#'Somme des rémunérations brutes versées (élus) :  \n#'  \n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nTableau.vertical2(c(\"Agrégats\",\n                    \"k&euro;\"),\n                  c(\"Bulletins de paie \",\n                    \"Lignes de paie \",\n                    \"Différence \"),\n                  c(masses.dernier.élus[\"Montant.brut.annuel\"],\n                    masses.dernier.élus[\"total.lignes.paie\"],\n                    masses.dernier.élus[\"Montant.brut.annuel\"] -\n                      masses.dernier.élus[\"total.lignes.paie\"]))\n\n#'\n#'Les résultats sont exprimés en euros.\n#'\n#'   \n#'## 3.2 Masse salariale brute des fonctionnaires\n#'\n#'*Cette section concerne les personnels fonctionnaires titulaires et stagiaires*  \n#'\nfiltre.fonctionnaire <- function (X) X[ !is.na(X)  & X > minimum.positif ]\n\nAR <- Analyse.rémunérations.dernier.exercice[Statut == \"TITULAIRE\" | Statut == \"STAGIAIRE\", colonnes.sélectionnées, with=FALSE]\nattach(AR)\nsource(\"histogrammes.R\", encoding = \"UTF-8\")\nhistogrammes()\ndetach(AR)\n#'    \n#'**Nota :**   \n#'*EQTP : Equivalent temps plein = 12 . moyenne du ratio ratio rémunération / quotité*  \n#'    \n#'**Effectif : `r nrow(AR)`**\n#'\n#'**Tests de cohérence**\n\nif (nrow(AR) > 0) {\n  masses.dernier <- colSums(AR[ ,.(Montant.brut.annuel, rémunération.indemnitaire.imposable, total.lignes.paie, autres.rémunérations)])\n} else {\n  masses.dernier <- c(0,0) \n}\n\n#'Somme des rémunérations brutes versées aux personnels titulaires et stagiaires :\n#'\n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nTableau.vertical2(c(\"Agrégats\",\n                    \"k&euro;\"),\n                  c(\"Brut annuel (bulletins)\",\n                    \"Brut annuel (lignes), dont :\",\n                    \"\\\\ \\\\ Primes :\",\n                    \"\\\\ \\\\ Autres rémunérations\",\n                    \"Part de primes en %\"),\n                  c(masses.dernier[\"Montant.brut.annuel\"],\n                    masses.dernier[\"total.lignes.paie\"],\n                    masses.dernier[\"rémunération.indemnitaire.imposable\"],\n                    masses.dernier[\"autres.rémunérations\"],\n                    masses.dernier[\"rémunération.indemnitaire.imposable\"]/masses.dernier[\"Montant.brut.annuel\"] * 100))\n\n#'\n#'**Définitions :**\n#'\n#'  *Brut annuel (bulletins)*   : somme du champ *Brut*   \n#'  *Brut annuel (lignes)*      : somme du champ *Montant* des lignes de paye, dont :   \n#'  *Primes*                    : indemnités sauf remboursements, certaines IJSS, indemnités d'élu le cas échéant, Supplément familial de traitement et Indemnité de résidence        \n#'  *Indemnités d'élus*         : toutes rémunérations indemnitaires des élus    \n#'  *Autres rémunérations*      : acomptes, retenues sur brut, rémunérations diverses, rappels   \n#'\n#'**Tests de cohérence**\n#'\n#'Somme des rémunérations brutes versées aux personnels (non élus) :\n#'\n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nTableau.vertical2(c(\"Agrégats\",\n                    \"k&euro;\"),\n                  c(\"Bulletins de paie \",\n                    \"Lignes de paie \",\n                    \"Différence \"),\n                  c(masses.dernier[\"Montant.brut.annuel\"],\n                    masses.dernier[\"total.lignes.paie\"],\n                    masses.dernier[\"Montant.brut.annuel\"] -\n                      masses.dernier[\"total.lignes.paie\"]))\n\n\n#'\n#'A comparer aux soldes des comptes 6411, 6419 et 648 du compte de gestion.\n#'\n#'\n#'**Formation et distribution du salaire brut moyen par tête (SMPT) en EQTP pour l'année `r année`**     \n#'   \n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nRésumé(c(\"Traitement indiciaire\",\n         \"Primes\",\n         \"Autres rémunérations\",\n         \"Effectif\"),\n       AR[Grade != \"V\" & Grade != \"A\" & Statut != \"ELU\" & Filtre_actif_non_annexe == TRUE, .(traitement.indiciaire,\n                                                                                             rémunération.indemnitaire.imposable,\n                                                                                             autres.rémunérations)],\n       extra = \"length\")\n\n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nRésumé(c(\"Total lignes hors rappels\",\n         \"Total brut\",\n         \"SMPT brut en EQTP\",\n         \"Part de la rém. indemnitaire\",\n         \"Effectif\"),\n       AR[Grade != \"V\" & Grade != \"A\" & Statut != \"ELU\" & Filtre_actif_non_annexe == TRUE, .(total.lignes.paie,\n                                                                                             Montant.brut.annuel,\n                                                                                             Montant.brut.annuel.eqtp,\n                                                                                             part.rémunération.indemnitaire)],\n       extra = \"length\")\n\n#'   \n#'*Hors vacataires identifiés, assistantes maternelles, élus locaux et pour les postes actifs non annexes*  \n#'\n#'**Catégorie A**\n#'\n\nARA <- data.table::data.table(NULL)\nARB <- data.table::data.table(NULL)\nARC <- data.table::data.table(NULL)\n\nif (fichier.personnels.existe) {\n  ARA <- AR[Catégorie == 'A'& Grade != \"V\" & Grade != \"A\" & Statut != \"ELU\" & Filtre_actif_non_annexe == TRUE, ]\n  #'  \n  #'&nbsp;*Tableau `r incrément()`*   \n  #'    \n  \n  Résumé(c(\"Traitement indiciaire\",\n           \"Primes\",\n           \"Autres rémunérations\"),\n         ARA[ , .(traitement.indiciaire,\n                  rémunération.indemnitaire.imposable,\n                  autres.rémunérations)])\n} else\n  cat(\"Pas de statistique en l'absence de fichier des catégories.\\n\")\n\n#'\n\nif (fichier.personnels.existe) {\n  #'  \n  #'&nbsp;*Tableau `r incrément()`*   \n  #'    \n  \n  Résumé(c(\"Total rémunérations\", \n           \"Total rémunérations EQTP\", \n           \"Part de la rémunération indemnitaire\"),\n         ARA[ , .(Montant.brut.annuel,\n                  Montant.brut.annuel.eqtp,\n                  part.rémunération.indemnitaire)])\n}\n\n#'\n#'**Effectif : `r nrow(ARA)`**  \n#'\n#'**Catégorie B**\n#'\n\nif (fichier.personnels.existe) {\n  ARB <- AR[Catégorie == 'B' & Grade != \"V\" & Grade != \"A\" & Statut != \"ELU\" & Filtre_actif_non_annexe == TRUE, ]\n  #'  \n  #'&nbsp;*Tableau `r incrément()`*   \n  #'    \n  \n  Résumé(c(\"Traitement indiciaire\",\n           \"Primes\",\n           \"Autres rémunérations\"),\n         ARB[, .(traitement.indiciaire,\n                 rémunération.indemnitaire.imposable,\n                 autres.rémunérations)])\n} else\n  cat(\"Pas de statistique en l'absence de fichier des catégories.\\n\")\n\n#'\n\nif (fichier.personnels.existe) {\n  #'  \n  #'&nbsp;*Tableau `r incrément()`*   \n  #'    \n  \n  Résumé(c(\"Total rémunérations\",\n           \"Total rémunérations EQTP\",\n           \"Part de la rémunération indemnitaire\"),\n         ARB[, .(Montant.brut.annuel,\n                 Montant.brut.annuel.eqtp,\n                 part.rémunération.indemnitaire)])\n}\n\n#'\n#'**Effectif : `r nrow(ARB)`**\n#'\n#'**Catégorie C**\n#'\n\n\nif (fichier.personnels.existe) {\n  ARC <- AR[Catégorie == 'C'& Grade != \"V\" & Grade != \"A\" & Statut != \"ELU\" & Filtre_actif_non_annexe == TRUE, ]\n  #'  \n  #'&nbsp;*Tableau `r incrément()`*   \n  #'    \n  \n  Résumé(c(\"Traitement indiciaire\",\n           \"Primes\",\n           \"Autres rémunérations\"),\n         ARC[ , .(traitement.indiciaire,\n                  rémunération.indemnitaire.imposable,\n                  autres.rémunérations)])\n} else\n  cat(\"Pas de statistique en l'absence de fichier des catégories.\\n\")\n\n#'\n\nif (fichier.personnels.existe) {\n  #'  \n  #'&nbsp;*Tableau `r incrément()`*   \n  #'    \n  \n  Résumé(c(\"Total rémunérations\",\n           \"Total rémunérations EQTP\",\n           \"Part de la rémunération indemnitaire\"),\n         ARC[ , .(Montant.brut.annuel,\n                  Montant.brut.annuel.eqtp,\n                  part.rémunération.indemnitaire) ])\n}\n\n#'**Effectif : `r nrow(ARC)`**\n#'\n#'\n#'######      <br>\n#'\n#'## 3.3 Contractuels, vacataires et stagiaires inclus   \n#'   \n#'*Les assistantes maternelles et les vacataires sont ici inclus, pour les postes non annexes*   \n#'\nattach(Analyse.rémunérations.dernier.exercice, warn.conflicts=FALSE)\ntemp <- rémunération.indemnitaire.imposable.eqtp[Statut != \"ELU\"\n                                                 & Statut != \"TITULAIRE\"\n                                                 & Statut != \"STAGIAIRE\"\n                                                 & Filtre_actif_non_annexe == TRUE\n                                                 & rémunération.indemnitaire.imposable.eqtp > 1000] / 1000\n\nif (longueur.non.na(temp) > 0)\n  hist(temp,\n       xlab = \"Rémunération indemnitaire brute imposable en milliers d'euros EQTP\\n\",\n       ylab = \"Effectif\",\n       xlim = c(0, 40),\n       main = \"Rémunération annuelle totale des contractuels en \" %+% année,\n       col = \"red\",\n       nclass = 50)\n#'   \n#'**Nota :**\n#'Ne sont retenues que les rémunérations supérieures à 1 000 k&euro;.\n#'Les élus ne sont pas pris en compte.\n#'   \n\ntemp <- positive(autres.rémunérations)\n\ndetach(Analyse.rémunérations.dernier.exercice)\n\nif (longueur.non.na(temp))\n  hist(temp,\n       xlab = \"En euros :\\n divers\",\n       ylab = \"Effectif\",\n       xlim = c(0, 5000),\n       main = \"Autres rémunérations en \" %+% année,\n       nclass = 50,\n       col = \"grey\")\n\n#'\n\nAR <- Analyse.rémunérations.dernier.exercice[Statut != \"ELU\"\n                                             &  Statut != \"TITULAIRE\"\n                                             &  Statut != \"STAGIAIRE\"\n                                             & Filtre_actif_non_annexe == TRUE,\n                                             colonnes.sélectionnées, \n                                             with=FALSE]\n\n#'   \n#'**Formation et distribution du salaire brut moyen par tête (SMPT) en EQTP pour l'année `r année`**     \n#'   \n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nRésumé(c(\"Primes\",\n         \"Autres rémunérations\",\n         \"Effectif\"),\n       AR[ , .(rémunération.indemnitaire.imposable,\n               autres.rémunérations)],\n       extra = \"length\")\n\n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\n\nRésumé(c(\"Total rémunérations\",\n         \"Total rémunérations EQTP\",\n         \"Effectif\"),\n       AR[ , .(Montant.brut.annuel, Montant.brut.annuel.eqtp)],\n       extra = \"length\")\n#'\n\nnom.base.analyse <- \"Analyse.rémunérations.dernier.exercice\"\n\n\n# pour année fin #\n\nannée <- fin.période.sous.revue\n\n#'   \n#'## 3.4 Comparaisons source INSEE/DGCL   \n#'   \n#'*Salaires annnuels moyens 2011 en EQTP (hors assistantes maternelles)*   \n\n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nTableau.vertical2(c(\"Agrégat\", \"Salaires bruts 2011 (&euro;)\", \"Salaires bruts 2012 (&euro;)\"),\n                  c(\"Ensemble\", \"Titulaires\", \"Autres salariés\"),\n                  12 * c(2159, 2223, 1903),\n                  12 * c(2195, 2259, NA))\n\n#'   \n#'**Eléments de la rémunération brute pour les titulaires de la FPT entre 2010 et 2012**      \n#'   \n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nTableau.vertical2(\n  c(\"Rém. annuelles\", \"2010 (&euro;)\", \"Primes (%)\", \"2011 (&euro;)\", \"Primes (%)\", \"2012 (&euro;)\", \"Primes (%)\"),\n  c(\"Salaire brut\",\n    \"Traitement brut\",\n    \"Primes et rémunérations annexes\",\n    \"y compris IR et SFT\"),\n  c(26305, 20350,\t\"\", 5955),\n  c(\"\", 22.6, \"\", \"\" ),\n  c(26660, 20562, \"\", 6098),\n  c(\"\", 22.9, \"\", \"\" ),\n  c(12*2259, 12*1727, \"\", 12*532),\n  c(\"\", 23.6, \"\", \"\" ))\n#'   \n#'*Champ : France. Salariés en équivalent-temps plein (EQTP) des collectivités territoriales (y compris bénéficiaires de contrats aidés, hors assistantes maternelles).*   \t\t\t\t\t\t\t\t\t\t\t\t\n#'*Les primes sont cumulées au supplément familial de traitement (SFT) et à l'indemnité de résidence (IR). Le cumul est rapporté à la rémunération brute totale.*    \n#'[Source INSEE](http://www.insee.fr/fr/ffc/ipweb/ip1486/ip1486.xls)    \n#'[Source DGCL](http://www.fonction-publique.gouv.fr/files/files/statistiques/rapports_annuels/2012-2013/xls/Vue3_1_Remunerations.xls)    \n#'[Source DGFIP PLF 2015](http://www.performance-publique.budget.gouv.fr/sites/performance_publique/files/farandole/ressources/2015/pap/pdf/jaunes/jaune2015_fonction_publique.pdf)   \n#'   \n\n########### Analyse dynamique ########################\n#'\n#'# 4. Rémunérations nettes : évolutions sur la période `r début.période.sous.revue` - `r fin.période.sous.revue`    \n#'\n#'Nombre d'exercices: `r durée.sous.revue`   \n#'  \n#'**Les données présentées dans cette section sont toutes relatives à des rémunérations nettes en équivalent temps plein (EQTP)**   \n#'Les élus, les vacataires et les assistantes maternelles ont été retirés de la population étudiée       \n#'Seuls sont considérés les postes actifs et non annexes   \n#'    \n#'*Nota :*   \n#'*EQTP = Equivalent temps plein  = 12 . moyenne du ratio rémunération / quotité*    \n#'    \n#'## 4.1 Distribution de la rémunération nette moyenne sur la période    \n\nAnalyse.variations.par.exercice <- Analyse.variations.par.exercice[nb.jours > seuil.troncature\n                                                                   & ! is.na(Montant.net.annuel.eqtp)\n                                                                   & Montant.net.annuel.eqtp  > minimum.positif \n                                                                   & ! is.na(Statut)] \n\nattach(Analyse.variations.synthèse)\n\ntemp <- positive(moyenne.rémunération.annuelle.sur.période) / 1000\n\nif (longueur.non.na(temp) > 0)\n  hist(temp,\n       xlab = \"Sur la période \" %+% début.période.sous.revue %+% \"-\" %+% fin.période.sous.revue %+% \" en milliers d'euros\",\n       ylab = \"Effectif\",\n       main = \"Rémunération nette moyenne\",\n       col = \"blue\",\n       nclass = 200)\n\n#'\n#+ fig.height=4.5\n\ntemp <- na.omit(moyenne.rémunération.annuelle.sur.période[  moyenne.rémunération.annuelle.sur.période > minimum.positif\n                                                            & (statut == \"TITULAIRE\"  | statut == \"STAGIAIRE\")] / 1000)\n\nif (longueur.non.na(temp) > 0)\n  hist(temp,\n       xlab = \"Sur la période \"%+% début.période.sous.revue %+% \"-\" %+% fin.période.sous.revue %+% \" en milliers d'euros\",\n       ylab = \"Effectif\",\n       main = \"Rémunération nette moyenne des fonctionnaires\",\n       col = \"blue\",\n       nclass = 200)\n\ndetach(Analyse.variations.synthèse)\n\n#'\n#'[Lien vers la base de données synthétique](Bases/Rémunérations/Analyse.variations.synthèse.csv)\n#'[Lien vers la base de données détaillée par année](Bases/Rémunérations/Analyse.variations.par.exercice.csv)\n#'\n#'## 4.2 Evolutions des rémunérations nettes sur la période `r début.période.sous.revue` - `r fin.période.sous.revue`   \n#'\n#'### 4.2.1 Ensemble des personnels fonctionnaires et non titulaires (hors élus)\n#'\n#'\n\n\nmasse.salariale.nette <- rep(0, durée.sous.revue)\n\nf <- function(x) prettyNum(masse.salariale.nette[x - début.période.sous.revue + 1] <<- \n                             sum(Analyse.variations.par.exercice[Année == x, \n                                                               Montant.net.annuel.eqtp],\n                               na.rm = TRUE) / 1000,\n                           big.mark = \" \",\n                           digits = 5,\n                           format = \"fg\")\n\ng <- function(x) prettyNum(mean.default(Analyse.variations.par.exercice[Année == x, \n                                                               Montant.net.annuel.eqtp],\n                               na.rm = TRUE),\n                           big.mark = \" \",\n                           digits = 1,\n                           format = \"fg\")\n#'    \n#'**Salaire net moyen par tête (SMPT net) en EQTP, hors élus**         \n#'       \n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nTableau.vertical(c(étiquette.année, \"Rém. nette totale (k&euro;)\", \"SMPT net (&euro;)\"),\n                 période,\n                 extra = \"variation\",\n                 f,\n                 g)\n\nentrants <- function(x)   {\n  \n  A <- setdiff(Analyse.variations.par.exercice[Année == x, Matricule], \n               Analyse.variations.par.exercice[Année == x -1, Matricule])\n  \n\n  B <- unique(Bulletins.paie[Année == x \n                             & Matricule %chin% A, .(Année, quotité, Matricule, Mois, Statut)], by = NULL)\n\n  eqtp.agent <- B[ , sum(quotité, na.rm=TRUE)] / 12\n  eqtp.fonct <- B[Statut == \"TITULAIRE\" | Statut == \"STAGIAIRE\", sum(quotité, na.rm=TRUE)] / 12\n\n  list(A, eqtp.agent, eqtp.fonct)\n}\n\nsortants <- function(x)   {\n  \n  A <- setdiff(Analyse.variations.par.exercice[Année == x-1, Matricule], \n               Analyse.variations.par.exercice[Année == x, Matricule])\n    \n  B <- unique(Bulletins.paie[Année == x - 1\n                             & Matricule %chin% A, .(Année, quotité, Matricule, Mois, Statut)], by = NULL)\n  \n  eqtp.agent <- B[ , sum(quotité, na.rm=TRUE)] / 12\n  eqtp.fonct <- B[Statut == \"TITULAIRE\" | Statut == \"STAGIAIRE\", sum(quotité, na.rm=TRUE)] / 12\n  \n  list(A, eqtp.agent, eqtp.fonct)\n}\n\ns <- list(0)\ne <- list(0)\nnoria <- rep(0, durée.sous.revue)\nremplacements <- rep(0, durée.sous.revue)\n\nf <- function(x) {\n  y <- x - début.période.sous.revue\n  \n  s[[y]] <<- sortants(x)\n  e[[y]] <<- entrants(x)\n  \n  noria[y] <<- mean.default(Analyse.variations.par.exercice[Année == x \n                                                            & Matricule %chin% e[[y]][[1]], \n                                                       Montant.net.annuel.eqtp],\n                    na.rm = TRUE) - mean.default(Analyse.variations.par.exercice[Année == x- 1 \n                                                                                 & Matricule %chin% s[[y]][[1]], \n                                                                                          Montant.net.annuel.eqtp],\n                                                 na.rm = TRUE)\n  \n  prettyNum(noria[y],\n            big.mark = \" \",\n            digits = 5,\n            format = \"fg\")\n}\n\ng <- function(x) {\n  \n  y <- x - début.période.sous.revue\n\n  remplacements[y] <<- min(e[[y]][[2]], s[[y]][[2]], na.rm=TRUE)\n  \n  prettyNum(noria[y] * remplacements[y] / (masse.salariale.nette[y] * 10),\n                           big.mark = \" \",\n                           digits = 3,\n                           format = \"fg\")\n}\n#'   \n#'**Effet de noria sur salaires nets et taux de remplacements**       \n#'   \n#'**Effet de noria** : *différence entre la rémunération annuelle des entrants à l'année N et des sortants à l'année N-1*.  \n#'*Usuellement calculée sur les rémunérations brutes, ici sur les rémunérations nettes EQTP*  \n#'*afin d'apprécier l'impact de cet effet sur l'évolution des rémunérations nette moyennes calculée au tableau précédent.*               \n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \nif (durée.sous.revue > 1) {\nTableau.vertical(c(étiquette.année,  \"Noria EQTP (&euro;)\", \"En % de la MS N-1\", \"Remplacements EQTP\", \"Taux de remplacements (%)\"),\n                 période[2:durée.sous.revue],\n                 extra = \"no\",\n                 f,\n                 g,\n                 function(x) prettyNum(remplacements[x - début.période.sous.revue], digits=0, format=\"f\"),\n                 function(x) prettyNum(remplacements[x - début.période.sous.revue]/ effectifs[[as.character(x)]][\"ETPT\"] * 100, digits=2, format=\"f\"))\n} else {\n  cat(\"L'effet de noria ne peut être calculé que pour des durées sous revue supérieures à un exercice.\")\n}\n\n#'\n#'*MS N-1 : masse salariale nette de l'année n-1.*   \n#'       \n#'**Distribution et variation sur la période du salaire moyen net par tête (SMPT net) en EQTP**         \n#'       \n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nRésumé(\"Première année\",\n       Analyse.variations.par.exercice[Année == début.période.sous.revue , Montant.net.annuel.eqtp])\n\nRésumé(\"Dernière année\",\n       Analyse.variations.par.exercice[Année == fin.période.sous.revue , Montant.net.annuel.eqtp])\n\n\n#'  \n#'*Nota :*  La population retenue est constituée des agents qui :   \n#'&nbsp;&nbsp;- ne font pas partie des `r quantile.cut` centiles extrêmaux   \n#'&nbsp;&nbsp;- sont au moins présents `r seuil.troncature` jours la première et la dernière année d'activité  \n#'Les élus, vacataires et assistantes maternelles sont retirés du périmètre.   \n#'Seuls sont pris en compte les agents ayant connu au moins un mois actif et ayant eu, sur l'année, des rémunérations non annexes.  \n#'[Compléments méthodologiques](Docs/méthodologie.pdf)     \n#'      \n#'**Comparaisons source INSEE/DGCL**   \n#'\n#'**Salaires annuels moyens 2011 et 2012 en EQTP (hors assistantes maternelles)**   \n#'  \n#'&nbsp;*Tableau `r incrément()`*       \n\n  \nTableau.vertical2(c(\"Agrégat\",  \"Salaires nets 2011 (&euro;)\", \"Salaires nets 2012 (&euro;)\"),\n                  c(\"Ensemble\", \"Titulaires\", \"Autres salariés\"),\n                  12*c(1823, 1886, 1572),\n                  12*c(1848, 1910, NA))\n\n#'*Champ : France. Salariés en équivalent-temps plein (EQTP) des collectivités territoriales (y compris bénéficiaires de contrats aidés, hors assistantes maternelles).*     \t\t\t\n\n\nmatrice.déciles <- t(matrix(12*c(1458, 1274, 1382, 1170, 1743, 1376, 1514, 1305, 1921, 1459, 1635, 1428, 2076, 1540, 1754,\n                                 1559, 2236, 1636, 1883, 1712, 2412, 1751, 2042, 1902, 2636, 1905, 2268, 2156, 2966, 2133,\n                                 2583, 2569, 3538, 2573, 3151, 3400),  ncol = 9))\n\n\n#'**Distribution des salaires nets annuels en EQTP dans la fonction publique par versant en 2011**   \n#' \n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\n\nTableau.vertical2(c(\"Décile (k&euro;)\", \"FPE\", \"FPT\", \"FPH\", \"Secteur privé\"),\n                  paste0(\"D\", 1:9),\n                  matrice.déciles[,1],\n                  matrice.déciles[,2],\n                  matrice.déciles[,3],\n                  matrice.déciles[,4])\n\n\nmatrice.déciles.cat <- matrix(12*c(2170,2416,2606,2789,2985,3222,3523,3927,4570,1823,\n                                    1715,1856,1971,2080,2187,2303,2430,2582,2817,3225,\n                                    1331,1408,1471,1530,1597,1675,1768,1890,2083,2244,\n                                    1135,1195,1252,1307,1364,1436,1540,1732,2243,1668), nrow = 10)\n\n\n\n#'**Distribution des salaires nets annuels en EQTP dans la fonction publique territoriale par catégorie en 2011**   \n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\n\nTableau.vertical2(c(\"Décile (k&euro;)\", \"Catégorie A\", \"Catégorie B\", \"Catégorie C\", \"Autres salariés\"),\n                  c(paste0(\"D\", 1:9), \"Moyenne\"),\n                  matrice.déciles.cat[,1],\n                  matrice.déciles.cat[,2],\n                  matrice.déciles.cat[,3],\n                  matrice.déciles.cat[,4])\n\n#'[Source INSEE, onglets Figure3, F1web et F3web](http://www.insee.fr/fr/ffc/ipweb/ip1486/ip1486.xls)   \n#'   \n#'[Lien vers la base de données](Bases/Rémunérations/Analyse.variations.synthèse.csv)\n#'   \n\n#'### 4.2.2 Fonctionnaires\n#'\n#'**Titulaires et stagiaires**      \n\nf <- function(x) {\n\n  masse.salariale.nette[x - début.période.sous.revue + 1] <<-  sum(Analyse.variations.par.exercice[Année == x\n                                                                                                   & (Statut == \"TITULAIRE\" | Statut == \"STAGIAIRE\"), \n                                                                                                      Montant.net.annuel.eqtp],\n                                                                na.rm = TRUE) / 1000\n\n prettyNum(masse.salariale.nette[x - début.période.sous.revue + 1],\n                           big.mark = \" \",\n                           digits = 5,\n                           format = \"fg\")\n}\n\ng <- function(x) prettyNum(mean.default(Analyse.variations.par.exercice[Année == x \n                                                                        & (Statut == \"TITULAIRE\" | Statut == \"STAGIAIRE\"), \n                                                                         Montant.net.annuel.eqtp],\n                           na.rm = TRUE),\n                   big.mark = \" \",\n                   digits = 1,\n                   format = \"fg\")\n\n\n#'**Salaire net moyen par tête (SMPT net) en EQTP**       \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nTableau.vertical(c(étiquette.année, \"Rém. nette totale (k&euro;)\", \"SMPT net en EQTP (&euro;)\"),\n                 période,\n                 extra = \"variation\",\n                 f,\n                 g)\n\n#'\nf <- function(x) {\n  y <- x - début.période.sous.revue\n  \n  noria[y] <<- sum(Analyse.variations.par.exercice[Année == x \n                                                   & (Statut == \"TITULAIRE\" | Statut == \"STAGIAIRE\") \n                                                   & Matricule %chin% e[[y]][[1]], \n                                                     Montant.net.annuel.eqtp],\n                   na.rm = TRUE) / e[[y]][[3]] -  sum(Analyse.variations.par.exercice[Année == x- 1\n                                                                                      & (Statut == \"TITULAIRE\" | Statut == \"STAGIAIRE\") \n                                                                                      & Matricule %chin% s[[y]][[1]],\n                                                                                        Montant.net.annuel.eqtp],\n                                                  na.rm = TRUE) / s[[y]][[3]]\n  \n  prettyNum(noria[y],\n            big.mark = \" \",\n            digits = 5,\n            format = \"fg\")\n}\n\ng <- function(x) {\n  \n  y <- x - début.période.sous.revue\n\n  remplacements[y] <<- min(e[[y]][[3]], s[[y]][[3]], na.rm=TRUE)\n  \n  prettyNum(noria[y] * remplacements[y] / (masse.salariale.nette[y] * 10),\n            big.mark = \" \",\n            digits = 3,\n            format = \"fg\")\n}\n\n#'   \n#'**Effet de noria sur salaires nets et taux de remplacements**       \n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nif (durée.sous.revue > 1) {\nTableau.vertical(c(étiquette.année,  \"Noria EQTP (&euro;)\", \"En % de la  MSN N-1\", \"Remplacements EQTP\", \"Taux de remplacements (%)\"),\n                 période[2:length(période)],\n                 extra = \"no\",\n                 f,\n                 g,\n                 function(x) prettyNum(remplacements[x - début.période.sous.revue], digits=0, format=\"f\"),\n                 function(x) prettyNum(remplacements[x - début.période.sous.revue]/ effectifs[[as.character(x)]][\"ETPT_fonct\"] * 100, digits=2, format=\"f\"))\n} else {\n  cat(\"L'effet de noria ne peut être calculé que pour des durées sous revue supérieures à un exercice.\")\n}\n#'     \n#'*MS N-1 : masse salariale nette de l'année n-1.*   \n#'       \n#'**Distribution et variation sur la période du salaire moyen net par tête (SMPT net) en EQTP**         \n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\n\nRésumé(\"Première année\",\n       Analyse.variations.par.exercice[Année == début.période.sous.revue & (Statut == \"TITULAIRE\" | Statut == \"STAGIAIRE\"),\n                                           Montant.net.annuel.eqtp])\n\nRésumé(\"Dernière année\",\n       Analyse.variations.par.exercice[Année == fin.période.sous.revue & (Statut == \"TITULAIRE\" | Statut == \"STAGIAIRE\"),\n                                       Montant.net.annuel.eqtp])\n\n\n#'    \nf <- function(x) prettyNum(sum(Analyse.variations.par.exercice[Année == x \n                                                               & Statut == \"TITULAIRE\"\n                                                               & temps.complet == TRUE & permanent == TRUE, \n                                                               Montant.net.annuel.eqtp],\n                               na.rm = TRUE) / 1000,\n                           big.mark = \" \",\n                           digits = 5,\n                           format = \"fg\")\n\ng <- function(x) prettyNum(mean.default(Analyse.variations.par.exercice[Année == x\n                                                               & Statut == \"TITULAIRE\"\n                                                               & temps.complet == TRUE & permanent == TRUE, \n                                                               Montant.net.annuel.eqtp],\n                               na.rm = TRUE),\n                           big.mark = \" \",\n                           digits = 1,\n                           format = \"fg\")\n\n#'   \n#'**Evolution du SMPT net des titulaires à temps complet**     \n#'   \n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nTableau.vertical(c(étiquette.année, \"Rémunération nette totale (k&euro;)\", \"SMPT (&euro;)\"),\n                 période,\n                 extra = \"variation\",\n                 f,\n                 g)\n\n#'    \n#'**Distribution et variation sur la période du salaire moyen net par tête (SMPT net) des titulaires à temps complet**         \n#'       \n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\n\nRésumé(\"Première année\",\n       Analyse.variations.par.exercice[Année == début.période.sous.revue\n                                       & Statut == \"TITULAIRE\" \n                                       & temps.complet == TRUE\n                                       & permanent == TRUE,\n                                           Montant.net.annuel.eqtp])\n\n#'   \nRésumé(\"Dernière année\",\n       Analyse.variations.par.exercice[Année == fin.période.sous.revue\n                                       & Statut == \"TITULAIRE\" \n                                       & temps.complet == TRUE\n                                       & permanent == TRUE,\n                                       Montant.net.annuel.eqtp])\n\n\n#'\n#'[Lien vers la base de données](Bases/Rémunérations/Analyse.variations.synthèse.csv)\n#'\n#'\n\n#'## 4.3 Glissement viellesse-technicité (GVT)   \n#'\n#'### 4.3.1 Ensemble des personnels   \n#'   \n#'*Cette section est consacrée à la rémunération moyenne des personnes en place (RMPP), définies comme présentes deux années consécutives avec la même quotité*   \n#'*L'évolution de la RMPP permet d'étudier le glissement viellesse-technicité \"positif\", à effectifs constants sur deux années*      \n#'*Le GVT positif est dû aux mesures statutaires et individuelles, à l'avancement et aux changements d'activité*  \n\n\n# Appliquer les filtres maintenant\n\nq3 <- quantile(Analyse.variations.synthèse$variation.rémunération, c(quantile.cut/100, 1 - quantile.cut/100), na.rm=TRUE)\n\n# Filtrage : on enlève les personnels présents depuis moins d'un seuil de troncature (ex. 120 jours) dans l'année et les élus\n# (paramètre seuil.troncature) \n\n# Filtrage pour l'étude des variations : on enlève les valeurs manquantes des variations, les centiles extrêmaux,\n# les rémunérations nettes négatives ou proche de zéro. On exige un statut explicite en fin de période.\n# Paramétrable par :\n# minimum.positif, quantile.cut \n\n\nAnalyse.variations.synthèse <- Analyse.variations.synthèse[ total.jours > 2 * seuil.troncature\n                                                            & pris.en.compte == TRUE\n                                                            & ! is.na(statut)   \n                                                            & ! is.na(variation.rémunération) \n                                                            & variation.rémunération > q3[[1]]\n                                                            & variation.rémunération < q3[[2]]]\n\nAnalyse.variations.synthèse.plus.2.ans  <- Analyse.variations.synthèse[! is.na(plus.2.ans) & plus.2.ans == TRUE]\nAnalyse.variations.synthèse.moins.2.ans <- Analyse.variations.synthèse[! is.na(plus.2.ans) & plus.2.ans == FALSE]\n\n#Analyse.variations.par.exercice <- Analyse.variations.par.exercice[Nexercices > 1]\n\n\nif (nrow(Analyse.variations.synthèse.plus.2.ans) > 0)\n  hist(Analyse.variations.synthèse.plus.2.ans$variation.moyenne.rémunération,\n       xlab =\"Variation annuelle moyenne en %\",\n       las = 1,\n       xlim = c(-5,30),\n       ylab =\"Effectifs\",\n       main =\"Rémunération nette des personnes en place\",\n       col =\"blue\",\n       nclass=1000,\n       xaxt = 'n')\n\ntry(axis(side=1, at=seq(-5,30, 1), labels=seq(-5,30,1), lwd=2))\n\n#'\n#'\n\nf <- function(x) prettyNum(sum(Analyse.variations.par.exercice[Année == x\n                                                               & est.rmpp == TRUE,\n                                                               Montant.net.annuel.eqtp],\n                               na.rm = TRUE)/ 1000,\n                           big.mark = \" \",\n                           digits = 5,\n                           format = \"fg\")\n\ng <- function(x) prettyNum(mean.default(Analyse.variations.par.exercice[Année == x \n                                                               & est.rmpp == TRUE,\n                                                               Montant.net.annuel.eqtp],\n                               na.rm = TRUE) ,\n                           big.mark = \" \",\n                           digits = 1,\n                           format = \"fg\")\n#'   \n#'**Evolution de la RMPP nette en EQTP**     \n#'   \n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nTableau.vertical(c(étiquette.année,\n                   \"Rémunération nette totale (k&euro;)\",\n                   \"RMPP nette (k&euro;)\"),\n                 période[2:durée.sous.revue],\n                 extra = \"variation\",\n                 f,\n                 g)\n\n\n#'    \n#'**Distribution et variation sur la période de la rémunération nette des personnes en place**                \n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\n# La légère différence de pérmètre entre Analyse.variations.synthèse et Analyse.variations.par.exercice tient au filtrage des quantiles\n# extrêmaux et des valeurs manquantes des variations\n\n\nmasque.rmpp.fin.période    <- bitwShiftL(3, durée.sous.revue - 2)      #  11{0,1}...{0,1}\nmasque.rmpp.début.période  <- 3                                        #  {0,1}...{0,1}11\nmasque.présent.début.fin   <- bitwShiftL(1, durée.sous.revue - 1) + 1  #  10000..1\nmasque.présent.sur.période <- bitwShiftL(1, durée.sous.revue) -1       #  11111..1\n\n#'  \nRésumé(c(\"Première année\",\n         \"Effectif\"),\n       Analyse.variations.synthèse[bitwAnd(indicatrice.période, masque.rmpp.début.période) == masque.rmpp.début.période, \n                                           Montant.net.annuel.eqtp.début],\n       extra = \"length\")\n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nRésumé(c(\"Dernière année\",\n         \"Effectif\"),\n        Analyse.variations.synthèse[indicatrice.période >= masque.rmpp.fin.période, Montant.net.annuel.eqtp.sortie],\n        extra = \"length\")\n#'\n#'*Variation individuelle de rémunération nette en EQTP pour les personnels présents la première et la dernière année*   \n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nRésumé(c(\"Variation normalisée (%)\",\n         \"Variation annuelle moyenne normalisée (%)\",\n         \"Effectif\"),\n       Analyse.variations.synthèse[bitwAnd(indicatrice.période, masque.présent.début.fin) == masque.présent.début.fin, c(\"variation.rémunération.normalisée\",\n                                                                                                                          \"variation.moyenne.rémunération.normalisée\"), with=FALSE],\n       extra = \"length\")\n\n# #'\n# #'*Variation individuelle de rémunération nette en EQTP pour les personnels présents sur toute la période*   \n# #'  \n# #'&nbsp;*Tableau `r incrément()`*   \n# #'  \n# \n# Résumé(\"Variation normalisée (%)\",\n#         # \"Variation annuelle moyenne normalisée (%)\",\n#          \"Effectif\"),\n#        Analyse.variations.synthèse[indicatrice.période == masque.présent.sur.période, variation.rémunération.normalisée],\n#        extra = \"length\")\n\n#'    \n#'### 4.3.2 Titulaires et stagiaires     \n#'   \n\nf <- function(x) prettyNum(sum(Analyse.variations.par.exercice[Année == x\n                                                               & est.rmpp == TRUE\n                                                               & (Statut == \"TITULAIRE\" | Statut == \"STAGIAIRE\"),\n                                                                 Montant.net.annuel.eqtp],\n                               na.rm = TRUE)/ 1000,\n                           big.mark = \" \",\n                           digits = 5,\n                           format = \"fg\")\n\ng <- function(x) prettyNum(mean.default(Analyse.variations.par.exercice[Année == x \n                                                                        & est.rmpp == TRUE\n                                                                        & (Statut == \"TITULAIRE\" | Statut == \"STAGIAIRE\"),\n                                                                        Montant.net.annuel.eqtp],\n                                        na.rm = TRUE) ,\n                           big.mark = \" \",\n                           digits = 1,\n                           format = \"fg\")\n#'   \n#'**Evolution de la RMPP nette en EQTP**     \n#'   \n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\n\nTableau.vertical(c(étiquette.année,\n                   \"Rémunération nette totale (k&euro;)\",\n                   \"RMPP nette (k&euro;)\"),\n                 période[2:durée.sous.revue],\n                 extra = \"variation\",\n                 f,\n                 g)\n\n#'    \n#'**Distribution et variation sur la période de la rémunération nette des fonctionnaires en place**                \n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\n#'  \nRésumé(c(\"Première année\",\n         \"Effectif\"),\n       Analyse.variations.synthèse[(statut == \"TITULAIRE\" | statut == \"STAGIAIRE\")\n                                   & bitwAnd(indicatrice.période, masque.rmpp.début.période) == masque.rmpp.début.période, \n                                   Montant.net.annuel.eqtp.début],\n       extra = \"length\")\n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nRésumé(c(\"Dernière année\",\n         \"Effectif\"),\n       Analyse.variations.synthèse[statut == \"TITULAIRE\" | statut == \"STAGIAIRE\"\n                                   & indicatrice.période >= masque.rmpp.fin.période, Montant.net.annuel.eqtp.sortie],\n       extra = \"length\")\n#'\n#'*Variation individuelle de rémunération nette en EQTP pour les personnels présents la première et la dernière année*   \n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nRésumé(c(\"Variation normalisée (%)\",\n         \"Variation annuelle moyenne normalisée (%)\",\n         \"Effectif\"),\n       Analyse.variations.synthèse[(statut == \"TITULAIRE\" | statut == \"STAGIAIRE\")\n                                   & bitwAnd(indicatrice.période, masque.présent.début.fin) == masque.présent.début.fin,\n                                   c(\"variation.rémunération.normalisée\",  \"variation.moyenne.rémunération.normalisée\"),\n                                   with = FALSE],\n       extra = \"length\")\n\n\n#'\n#'\n#'[Lien vers la base de données](Bases/Rémunérations/Analyse.variations.synthèse.csv)\n#'\n#'**Nota**   \n#'*Personnes en place :* en fonction au moins deux années consécutives sur la période `r début.période.sous.revue` à `r fin.période.sous.revue`    \n#'*Variation sur la période d'activité :* entre l'arrivée et le départ de la personne      \n#'*Variation normalisée :* conforme à la définition INSEE (présente en début et en fin de période avec la même quotité)  \n#'  \n#'**Commentaire**       \n#'Les différences éventuelles constatées entre l'évolution de la RMPP au tableau `r numéro.tableau-2` sont dues soit à l'effet de noria soit à l'effet périmètre.    \n#'      \n\n#'\n########### Tests statutaires ########################\n#'\n#'[Lien vers la base de données](Bases/Rémunérations/Analyse.variations.synthèse.csv)\n#'\n#'\n#'### 4.4 Comparaisons avec la situation nationale des rémunérations   \n#'  \n#'**Évolution en euros courants du SMPT et de la RMPP dans la FPT (en % et euros courants)**    \n\n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nTableau.vertical2(c(\"Année\", \"2008-2009\", \"2009-2010\", \"2010-2011\", \"2011-1012\", \"2008-2012\", \"Moy. 2008-2012\", \"Médiane 2007-2011\"),\n                  c(\"SMPT brut\", \"SMPT net\", \"RMPP brute\", \"RMPP nette\"),         \n                  t(data.frame(c(\"2,5\", \"1,3\", \"1,5\", \"1,7\", \"7,2\", \"1,8\", \"\"),\n                  c(\"3,0\", \"1,4\", \"1,3\", \"1,4\", \"7,3\", \"1,8\", \"13,4\"),\n                  c(\"3,3\", \"2,5\", \"2,5\", \"2,7\", \"11,5\", \"2,8\", \"\"),\n                  c(\"3,3\", \"2,5\", \"2,3\", \"2,4\", \"10,9\", \"2,6\", \"\"))))\n\n\n#'*Source : fichier général de l'État (FGE), DADS, SIASP, Insee, Drees. Traitement Insee, Drees, DGCL*    \n#'Hors assistants maternels et familiaux, y compris bénéficiaires de contrats aidés.   \n#'SMPT : Salaire moyen par tête en EQTP.   \n#'RMPP : Agents présents 24 mois consécutifs chez le même employeur avec la même quotité de travail.  \n#'Moyenne des variation géométriques annuelles pour les agents du champ.  \n#'La dernière colonne présente la médiane des augmentations du SMPT net pour les agents présents en 2007 et 2011.   \n#'  \n#'**Salaires nets annuels et évolution moyenne type de collectivité en &euro; courants  EQTP**    \n#'   \n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nTableau.vertical2(c(\"Type de collectivité\", \"SMPT net 2011 (&euro;)\", \"SMPT net 2012 (&euro;)\", \"Évolution annuelle moy. 2007-2011 (%)\"),\n  c(\"Communes\",\n    \"CCAS et caisses des écoles\",\n    \"EPCI à fiscalité propre\",\n    \"Autres structures intercommunales\",\n    \"Départements\",\n    \"SDIS\",\n    \"Régions\",\t\t \n    \"Autres collectivités locales\",\t \n    \"Ensemble (moyenne)\"),\t\n   c(20784, 19415, 22882, 21299, 24487, 29811, 22432, 24680, 21873),\n  12*c(1760, 1643, 1924, 1807, 2062, 2495, 1903,  2058, 1848),\n   c(\"2,5\", \"2,4\", \"3,1\", \"3,0\", \"3,9\", \"3,4\", \"3,8\", \"3,2\", \"2,9\"))\n\n#'\n#'*Champ : France. Salariés en équivalent-temps plein (EQTP) des collectivités territoriales (y compris bénéficiaires de contrats aidés, hors assistantes maternelles).*     \t\t\t\n#'Conversion en euros courants, calcul CRC.  \n#'[Source INSEE données 2011 obsolètes](http://www.insee.fr/fr/ffc/ipweb/ip1486/ip1486.xls)   \n#'[Source DGAFP](http://infos.emploipublic.fr/dossiers/la-fonction-publique-en-chiffres/la-fonction-publique-en-chiffre-2013/non-defini-08/apm-71444/)  \n#'[Source PLF 2014 données 2011 révisées p.151](http://www.fonction-publique.gouv.fr/files/files/statistiques/jaunes/jaune2014_FP.pdf)   \n#'[Source PLF 2015 données 2012 p.130](http://www.performance-publique.budget.gouv.fr/sites/performance_publique/files/farandole/ressources/2015/pap/pdf/jaunes/jaune2015_fonction_publique.pdf)   \n#'    \n#'# 5. Tests réglementaires   \n#'## 5.1 Contrôle des heures supplémentaires, des NBI et primes informatiques   \n#'   \n#'**Dans cette partie, l'ensemble de la base de paye est étudié.**  \n#'Les agents non actifs ou dont le poste est annexe sont réintroduits dans le périmètre.   \n\nif (N <- length(unique(Paie[Statut != \"TITULAIRE\"\n                                        & Statut != \"STAGIAIRE\"\n                                        & NBI != 0, \n                                        Matricule])))\n  cat(\"Il existe \", N, \"non titulaire\", ifelse(N>1, \"s\", \"\"), \" percevant une NBI.\")\n\nNBI.aux.non.titulaires <- Paie[Statut != \"TITULAIRE\"\n                               & Statut != \"STAGIAIRE\"\n                               & NBI != 0\n                               & grepl(expression.rég.nbi, Libellé, ignore.case=TRUE),\n                               c(étiquette.matricule,\n                                 \"Statut\",\n                                 étiquette.code,\n                                 étiquette.libellé,\n                                 étiquette.année,\n                                 \"Mois\",\n                                 \"NBI\",\n                                 étiquette.montant),\n                               with=FALSE]\n\nnombre.Lignes.paie.NBI.nontit <- nrow(NBI.aux.non.titulaires)\n\n# Prime de fonctions informatiques : pas dans la base de VLB\n# on cherche la chaine de char. \"INFO\" dans les libellés de primes\n\n# variante : filtre <- regexpr(\".*(INFO|PFI|P.F.I).*\", toupper(Paie$Libellé)) et regmatches(Paie$Libellé, filtre)\n\nattach(Paie, warn.conflicts=FALSE)\nfiltre <- grep(\".*(INFO|PFI|P.F.I).*\", Libellé)\n\npersonnels.prime.informatique <- Paie[ filtre,\n                                       c(étiquette.matricule,\n                                         étiquette.année,\n                                         \"Mois\",\n                                         \"Statut\",\n                                         étiquette.code,\n                                         étiquette.libellé,\n                                         étiquette.montant), with=FALSE]\n\nprimes.informatiques.potentielles <- unique(Libellé[filtre], by=NULL)\n\nif  (length(primes.informatiques.potentielles) == 0)\n  primes.informatiques.potentielles <- \"aucune\"\n\nnombre.personnels.pfi <- nrow(personnels.prime.informatique)\n\ndetach(Paie)\n#'Primes informatiques potentielles : `r primes.informatiques.potentielles`\n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nTableau(\n  c(\"Nombre de lignes NBI pour non titulaires\",\n    \"Nombre de bénéficiaires de PFI\"),\n  nombre.Lignes.paie.NBI.nontit,\n  nombre.personnels.pfi)\n\n#'   \n#'[Lien vers la base de données NBI aux non titulaires](Bases/Réglementation/NBI.aux.non.titulaires.csv)   \n#'[Lien vers la base de données Primes informatiques](Bases/Réglementation/personnels.prime.informatique.csv)   \n#'   \n#'**Nota :**   \n#'NBI: nouvelle bonification indiciaire   \n#'PFI: prime de fonctions informatiques   \n#'  \n#'## 5.2 Contrôle des vacations pour les fonctionnaires\n\n# Vacations et statut de fonctionnaire\n\n  lignes.fonctionnaires.et.vacations <- Paie[(Statut == \"TITULAIRE\" | Statut == \"STAGIAIRE\") & Grade == \"V\",\n                                              c(étiquette.matricule,\n                                                \"Nom\", \"Prénom\",\n                                                \"Statut\",\n                                                étiquette.code,\n                                                étiquette.libellé,\n                                                étiquette.montant),\n                                              with=FALSE]\n\n  matricules.fonctionnaires.et.vacations <- unique(lignes.fonctionnaires.et.vacations[ , .(Matricule, Nom, Prénom)], by=NULL)\n  nombre.fonctionnaires.et.vacations <- nrow(matricules.fonctionnaires.et.vacations)\n#'\n\nif (! is.null(nombre.fonctionnaires.et.vacations)) {\n  cat(\"Il y a \",\n      nombre.fonctionnaires.et.vacations,\n      \"fonctionnaire(s) effectuant des vacations pour son propre établissement. Les bulletins concernés sont donnés en lien.\" )\n}  else  {\n  cat(\"Pas de vacation détectée.\")\n}\n\n\n#'\n#'[Lien vers les matricules des fonctionnaires concernés](Bases/Réglementation/matricules.fonctionnaires.et.vacations.csv)\n#'[Lien vers les bulletins de paye correspondants](Bases/Réglementation/lignes.fonctionnaires.et.vacations.csv)\n#'\n#'## 5.3 Contrôles sur les cumuls traitement indiciaire, indemnités et vacations des contractuels\n\n# Vacations et régime indemnitaire\n\n  lignes.contractuels.et.vacations <- Paie[Statut != \"TITULAIRE\"\n                                           & Statut != \"STAGIAIRE\"\n                                           & Grade == \"V\",\n                                           c(étiquette.matricule,\n                                             \"Nom\", \"Prénom\",\n                                             étiquette.code,\n                                             étiquette.libellé,\n                                             étiquette.montant),\n                                           with=FALSE]\n\n  matricules.contractuels.et.vacations <- unique(lignes.contractuels.et.vacations[ , .(Matricule, Nom, Prénom)], by=NULL)\n\n  nombre.contractuels.et.vacations     <- nrow(matricules.contractuels.et.vacations)\n    \n  RI.et.vacations <- data.frame(NULL)\n  traitement.et.vacations <- data.frame(NULL)\n\n if (nombre.contractuels.et.vacations) \n  {\n     RI.et.vacations <- Paie[Type == \"I\"\n                             & Matricule %chin% matricules.contractuels.et.vacations$Matricule,\n                             c(étiquette.matricule,\n                               \"Statut\",\n                               étiquette.code,\n                               \"Type\",\n                               étiquette.libellé,\n                               étiquette.montant), \n                             with=FALSE]\n  \n  # Vacations et indiciaire\n  \n    traitement.et.vacations <- Paie[Type == \"T\" \n                                    & Matricule %chin% matricules.contractuels.et.vacations$Matricule,\n                                    c(étiquette.matricule,\n                                      \"Statut\",\n                                      étiquette.code,\n                                      \"Type\",\n                                      étiquette.libellé,\n                                      étiquette.montant),\n                                    with=FALSE]\n  }\n\n  nombre.Lignes.paie.contractuels.et.vacations <- nrow(lignes.contractuels.et.vacations)\n  nombre.Lignes.paie.RI.et.vacations           <- nrow(RI.et.vacations)\n  nombre.Lignes.paie.traitement.et.vacations   <- nrow(traitement.et.vacations)\n\n#'\n#'**Contractuels effectuant des vacations (CEV)**\n#'\n\n\nif (exists(\"nombre.contractuels.et.vacations\")) {\n  #'  \n  #'&nbsp;*Tableau `r incrément()`*   \n  #'    \n  \n  Tableau(c(\"Nombre de CEV\",\n            \"Nombre de lignes\",\n            \"Nombre de lignes indemnitaires\",\n            \"Nombre de lignes de traitement\"),\n          nombre.contractuels.et.vacations,\n          nombre.Lignes.paie.contractuels.et.vacations,\n          nombre.Lignes.paie.RI.et.vacations,\n          nombre.Lignes.paie.traitement.et.vacations)\n}\n#'  \n#'[Lien vers le bulletins des CEV](Bases/Réglementation/lignes.contractuels.et.vacations.csv)   \n#'[Lien vers la base de données Matricules des CEV](Bases/Réglementation/matricules.contractuels.et.vacations.csv)  \n#'[Lien vers la base de données Cumul régime indemnitaire et vacations de CEV](Bases/Réglementation/RI.et.vacations.csv)  \n#'[Lien vers la base de données Lignes de traitement indiciaire pour CEV](Bases/Réglementation/traitement.et.vacations.csv)  \n#'  \n#'\n#'\n#'## 5.4 Contrôle sur les indemnités IAT et IFTS\n\n#IAT et IFTS\n\nrésultat.ifts.manquant <- FALSE\nrésultat.iat.manquant  <- FALSE\n\nifts.logical <- grepl(expression.rég.ifts, Paie$Libellé, ignore.case=TRUE)\niat.logical  <- grepl(expression.rég.iat, Paie$Libellé, ignore.case=TRUE)\ncodes.ifts  <- unique(Paie[ifts.logical, Code], by=NULL)\nif (length(codes.ifts) == 0) {\n  cat(\"Il n'a pas été possible d'identifier les IFTS par expression régulière.\")\n  résultat.ifts.manquant <- TRUE\n}\n\nif (! any(iat.logical)) {\n  cat(\"Il n'a pas été possible d'identifier les IAT par expression régulière.\")\n  résultat.iat.manquant <- TRUE\n}\n\npersonnels.iat.ifts <- intersect(Paie[iat.logical, Matricule],\n                                 Paie[ifts.logical, Matricule])\nif (length(personnels.iat.ifts))  names(personnels.iat.ifts) <- \"Matricules des agents percevant IAT et/ou IFTS sur la période\"\n\nnombre.personnels.iat.ifts <- length(personnels.iat.ifts)\nbase.iat.ifts <- Paie[Matricule %chin% personnels.iat.ifts & (ifts.logical | iat.logical)]\nbase.iat.ifts <- base.iat.ifts[order(Matricule, Année, Mois)]\n\n#'\n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'      \nif (nrow(base.iat.ifts)) {\n  Tableau(c(\"Codes IFTS\", \"Nombre de personnels percevant IAT et IFTS\"),\n          sep.milliers = \"\",\n          paste0(codes.ifts, collapse = \" \"),\n          nombre.personnels.iat.ifts)\n} else {\n  cat(\"Tests sans résultat positif.\")\n}\n\n#'   \n#'[Codes IFTS retenus](Bases/Réglementation/codes.ifts.csv)\n#'[Lien vers la base de données](Bases/Réglementation/base.iat.ifts.csv)\n#'\n#'### Contrôle sur les IFTS pour catégories B et contractuels\n\n#IFTS et IB >= 380 (IM >= 350)\n#'  \nif (! résultat.ifts.manquant) {\n    lignes.ifts.anormales <- na.omit(Paie[as.integer(Indice) < 350   & ifts.logical == TRUE,\n                                          c(clé.fusion,\n                                            étiquette.année,\n                                            \"Mois\",\n                                            \"Statut\",\n                                            étiquette.code,\n                                            étiquette.libellé,\n                                            \"Indice\",\n                                            étiquette.montant), \n                                          with=FALSE])\n} else {\n\n    lignes.ifts.anormales <- NULL\n    cat(\"Il n'a pas été possible de déterminer les lignes IFTS anormales faute d'indentification des libellés IFTS.\")\n}\n#'  \nnombre.lignes.ifts.anormales <- nrow(lignes.ifts.anormales)\n\n# IFTS et non tit\n\nifts.et.contractuel <- NULL \n\nif (! résultat.ifts.manquant) {\n  \n  ifts.et.contractuel <- Paie[ Statut != \"TITULAIRE\"\n                             & Statut != \"STAGIAIRE\"\n                             & ifts.logical,\n                             c(étiquette.matricule,\n                               étiquette.année,\n                               \"Mois\",\n                               \"Statut\",\n                               étiquette.code,\n                               étiquette.libellé,\n                               \"Indice\",\n                               étiquette.montant),\n                             with=FALSE]\n}\n\nnombre.lignes.ifts.et.contractuel <- nrow(ifts.et.contractuel)\n\n#'\n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nif (! résultat.ifts.manquant) {\n   Tableau(c(\"Nombre de lignes de paye de contractuels percevant des IFTS\", \"Nombre de lignes IFTS pour IB < 380\"), nombre.lignes.ifts.et.contractuel, nombre.lignes.ifts.anormales)\n}\n\n#'\n#'[Lien vers la base de données Lignes IFTS pour contractuels](Bases/Réglementation/ifts.et.contractuel.csv)\n#'[Lien vers la base de données Lignes IFTS pour IB < 380](Bases/Réglementation/lignes.ifts.anormales.csv)\n#'\n#'**Nota :**\n#'IB < 380 : fonctionnaire percevant un indice brut inférieur à 380\n#'\n#'######\n#'\n#'## 5.5 Contrôle sur les heures supplémentaires\n\n# Sont repérées comme heures supplémentaires ou complémentaires les heures dont le libellé obéissent à\n# l'expression régulière expression.rég.heures.sup donnée par le fichier prologue.R\n\ncolonnes <- c(étiquette.matricule,\n              étiquette.année,\n              \"Mois\",\n              \"Statut\",\n              \"Libellé\",\n              étiquette.code,\n              \"Heures\",\n              \"Heures.Sup.\",\n              \"Base\",\n              \"Taux\",\n              \"Montant\",\n              \"Type\")\n\nHS.sup.25 <- Paie[Heures.Sup. >= 25, colonnes, with=FALSE]\n\nHS.sup.indiciaire.mensuel <- HS.sup.25[Type == \"T\", .(Matricule, Année, Mois, Montant)]\n\nHS.sup.25 <-  HS.sup.25[Type %chin% c(\"I\", \"T\", \"R\")\n                          & ! grepl(\".*SMIC.*\",\n                                    Libellé, ignore.case = TRUE)\n                          & grepl(expression.rég.heures.sup,\n                                  Libellé, ignore.case = TRUE), ]\n\nHS.sup.25 <- HS.sup.25[order(Matricule, Année, Mois), ]\n\n# donne un tableau à 3 dimensions [Matricules, Années, Mois] dont les valeurs sont nommées par matricule\n# bizarrement le hashage de la variable année se fait par charactère alors que le mois reste entier dans certaines exécutions et pas dans d'autres !\n# Tout convertir en as.character() est plus prudent.\n\ntemp <- with(HS.sup.indiciaire.mensuel,\n              tapply(Montant, list(Matricule, Année, Mois), FUN=sum))\n\ntraitement.indiciaire.mensuel <- unlist(Map(function(x, y, z) temp[x, y, z],\n                                             as.character(HS.sup.indiciaire.mensuel$Matricule),\n                                             as.character(HS.sup.indiciaire.mensuel$Année),\n                                             as.character(HS.sup.indiciaire.mensuel$Mois)), use.names=FALSE)\n\nHS.sup.25 <- merge(as.data.frame(HS.sup.25), data.frame(Matricule=HS.sup.indiciaire.mensuel$Matricule,\n                                             Année=HS.sup.indiciaire.mensuel$Année,\n                                             Mois=HS.sup.indiciaire.mensuel$Mois,\n                                             \"Traitement indiciaire mensuel\"=traitement.indiciaire.mensuel), \n                                             by=c(\"Matricule\", \"Année\", \"Mois\"))\n\nrm(temp, traitement.indiciaire.mensuel, HS.sup.indiciaire.mensuel )\n\nHS.sup.25 <- merge(HS.sup.25, Analyse.rémunérations[ , .(Matricule, Année, traitement.indiciaire)], by=c(\"Matricule\", \"Année\"))\n\nHS.sup.25 <- unique(HS.sup.25, by=NULL)\n\nnames(HS.sup.25) <- sub(\"traitement.indiciaire\", \"Traitement indiciaire annuel\", names(HS.sup.25))\n\nnombre.Lignes.paie.HS.sup.25 <- nrow(HS.sup.25)\n\nihts.anormales <- data.frame(NULL)\n\nif (fichier.personnels.existe)\n  nombre.ihts.anormales <- nrow(ihts.anormales) else nombre.ihts.anormales <- NA\n\n#'\n#'  \n#'&nbsp;*Tableau `r incrément()`*   \n#'    \n\nTableau(c(\"Nombre de lignes HS en excès\", \"Nombre de lignes IHTS anormales\"), nombre.Lignes.paie.HS.sup.25, nombre.ihts.anormales)\n\n#'\n#'[Lien vers la base de données Heures suplémentaires en excès : matricules](Bases/Réglementation/HS.sup.25.csv)\n#'[Lien vers la base de données IHTS anormales](Bases/Réglementation/ihts.anormales.csv)\n#'\n#'**Nota :**\n#'HS en excès : au-delà de 25 heures par mois\n#'IHTS anormales : non attribuées à des fonctionnaires de catégorie B ou C.\n#'\n#'## 5.6 Contrôle sur les indemnités des élus\n#'   \n\nrémunérations.élu <- Analyse.rémunérations[ indemnités.élu > minimum.positif,\n                                            c(clé.fusion,\n                                              \"Année\",\n                                              \"Emploi\",\n                                              \"indemnités.élu\",\n                                              \"autres.rémunérations\",\n                                              \"rémunération.indemnitaire.imposable\"),\n                                            with=FALSE ]\n\nrémunérations.élu <- rémunérations.élu[ , rémunération.indemnitaire.imposable := indemnités.élu +  rémunération.indemnitaire.imposable]\n\nif (!fusionner.nom.prénom)\n  rémunérations.élu <- merge(unique(matricules[ , .(Nom,  Matricule)], by=NULL),\n                             rémunérations.élu,\n                             by = étiquette.matricule,\n                             all.y = TRUE,\n                             all.x = FALSE)\n\nnames(rémunérations.élu) <- c(union(clé.fusion, \"Nom\"),\n                              \"Année\",\n                              \"Emploi\",\n                              \"Indemnités \",\n                              \"Autres \",\n                              \"Total \")\n\nrémunérations.élu <- na.omit(rémunérations.élu)\n\n#'   \nif (générer.table.élus)\n{\n    if (nrow(rémunérations.élu) > 0)\n      kable(rémunérations.élu, row.names = FALSE)\n} else {\n  \n   cat(\"Tableau des indemnités d'élu : non générée.\")\n}\n\n#'   \nif (sauvegarder.bases.analyse)\n  Sauv.base(file.path(chemin.dossier.bases, \"Effectifs\"),\n            \"matricules\",\n            fichier.personnels)\n\n#'[Lien vers la base de données Rémunérations des élus](Bases/Réglementation/rémunérations.élu.csv)\n#'\n#'# Annexe\n#'## Liens complémentaires\n#'\n#'[Lien vers la base de données des bulletins et lignes de paie](Bases/Paiements/Bulletins.paie.csv)\n#'[Lien vers la base de données fusionnées des bulletins et lignes de paie](Bases/Paiements/Paie.csv)\n#'\n#'\n#'[Lien vers le fichier des personnels](Bases/Effectifs/Catégories des personnels.csv)\n#'  \n#'## Fiabilité du traitement statistique  \n#'### Eliminations des doublons  \n#'  \nif (après.redressement != avant.redressement) {\n      \ncat(\"Retraitement de la base : \")\n\n} else {\ncat(\"Aucune duplication de ligne détecté. \")\n}\n\n#'  \nif (après.redressement != avant.redressement)\n  cat(\"Elimination de \", avant.redressement - après.redressement, \" lignes dupliquées\")\n\n#'   \nbase.heures.nulles.salaire.nonnull     <- Bulletins.paie[Heures == 0  & (Net.à.Payer != 0 | Brut != 0)]\nbase.quotité.indéfinie.salaire.nonnull <- Bulletins.paie[MHeures == 0 & (Net.à.Payer != 0 | Brut != 0)]\n\nnligne.base.heures.nulles.salaire.nonnull     <- nrow(base.heures.nulles.salaire.nonnull)\nnligne.base.quotité.indéfinie.salaire.nonnull <- nrow(base.quotité.indéfinie.salaire.nonnull)\n#'  \nif (nligne.base.heures.nulles.salaire.nonnull)\n   cat(\"Nombre de bulletins de paye de salaires (net ou brut) versés pour un champ Heures = 0 : \", nligne.base.heures.nulles.salaire.nonnull)\n#'   \nif (nligne.base.quotité.indéfinie.salaire.nonnull)\n   cat(\"\\nNombre de bulletins de paye de salaires (net ou brut) versés pour une quotité de travail indéfinie : \", nligne.base.heures.nulles.salaire.nonnull)\n#'   \n#'[Lien vers la base de données des salaires versés pour Heures=0](Bases/Fiabilité/base.heures.nulles.salaire.nonnull.csv)   \n#'[Lien vers la base de données des salaires versés à quotité indéfinie](Bases/Fiabilité/base.quotité.indéfinie.salaire.nonnull.csv)   \n#'\n#'# Tableau des personnels : renseigner la catégorie\n#'\n#'Utiliser les codes : A, B, C, ELU, AUTRES\n#'\n#'En cas de changement de catégorie en cours de période, utiliser la catégorie AUTRES\n#'Cela peut conduire à modifier manuellement le fichier Catégories des personnels.csv\n#'\nif (générer.table.effectifs)\n  kable(matricules, row.names = FALSE)\n\n# ------------------------------------------------------------------------------------------------------------------\n#  Sauvegardes : enlever les commentaires en mode opérationnel\n##\n\nif (sauvegarder.bases.analyse) {\n\n  sauv.bases(file.path(chemin.dossier.bases, \"Rémunérations\"),\n             \"Analyse.rémunérations\",\n             \"Analyse.variations.synthèse\",\n             \"Analyse.variations.par.exercice\",\n             \"masses.premier.personnels\",\n             \"masses.premier.élus\",\n             \"masses.dernier.personnels\",\n             \"masses.dernier.élus\")\n\n  sauv.bases(file.path(chemin.dossier.bases, \"Effectifs\"),\n             \"Bulletins.paie.nir.total.hors.élus\",\n             \"Bulletins.paie.nir.fonctionnaires\",\n             \"Bulletins.paie.nir.nontit\",\n             \"Bulletins.paie.nir.permanents\",\n             \"tableau.effectifs\")\n\n  sauv.bases(file.path(chemin.dossier.bases, \"Réglementation\"),\n             \"base.iat.ifts\",\n             \"codes.ifts\",\n             \"HS.sup.25\",\n             \"ifts.et.contractuel\",\n             \"ihts.anormales\",\n             \"lignes.contractuels.et.vacations\",\n             \"lignes.fonctionnaires.et.vacations\",\n             \"lignes.ifts.anormales\",\n             \"matricules.contractuels.et.vacations\",\n             \"matricules.fonctionnaires.et.vacations\",\n             \"NBI.aux.non.titulaires\",\n             \"personnels.prime.informatique\",\n             \"personnels.iat.ifts\",\n             \"rémunérations.élu\",\n             \"RI.et.vacations\",\n             \"traitement.et.vacations\")\n  \n  sauv.bases(file.path(chemin.dossier.bases, \"Fiabilité\"),\n              \"base.heures.nulles.salaire.nonnull\",\n              \"base.quotité.indéfinie.salaire.nonnull\")\n  \n}\n\nif (sauvegarder.bases.origine)\n  sauv.bases(file.path(chemin.dossier.bases, \"Paiements\"),\n             \"Paie\",\n             \"Bulletins.paie\")\n\n\n\n",
    "created" : 1417020456688.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3777152108",
    "id" : "A1160E94",
    "lastKnownWriteTime" : 1417094884,
    "path" : "C:/Dev/altair/Tests/Exemple/altair.R",
    "project_path" : "Tests/Exemple/altair.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}