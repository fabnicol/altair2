{
    "contents" : "\n\nVérifier_non_annexe <- function(Montant, Année) if (Année == 2013)  (Montant > 3361) else if (Année == 2012) (Montant > 3322) else if(Année == 2011) (Montant > 3222) else if (Année == 2010) (Montant > 3169) else if (Année == 2009) (Montant > 3132)  else (Montant > 3076)\n\nAnalyse.rémunérations <- Paie[ , .(Nir          = Nir[1],\n                                   Montant.net.annuel = Montant.net.annuel[1],\n                                   Montant.net.annuel.eqtp  = Montant.net.annuel.eqtp[1],\n                                   Montant.brut.annuel = Montant.brut.annuel[1],\n                                   Montant.brut.annuel.eqtp = Montant.brut.annuel.eqtp[1],\n                                   heures       = mean.default(Heures, na.rm = TRUE),\n                                   cumHeures    = sum(Heures, na.rm = TRUE),\n                                   Statut       = Statut[1],\n                                   nb.jours     = nb.jours[1],\n                                   nb.mois      = nb.mois[1],\n                                   permanent    = permanent[1],\n                                   ind.quotité  = indicatrice.quotité.pp[1],\n                                   Filtre_actif = Filtre_actif[1],\n                                   quotité.moyenne = quotité.moyenne[1],\n                                   Emploi       = Emploi[1],\n                                   Grade        = Grade[1],\n                                   temps.complet = all(quotité == 1),\n                                   Service      = Service[1],\n                                   traitement.indiciaire   = sum(Montant[Type == \"T\"], na.rm = TRUE),\n                                   sft          = sum(Montant[Type == \"S\"], na.rm = TRUE),\n                                   indemnité.résidence = sum(Montant[Type == \"IR\"], na.rm = TRUE),\n                                   indemnités   = sum(Montant[Type == \"I\"], na.rm = TRUE),\n                                   rémunérations.diverses = sum(Montant[Type == \"A\"], na.rm = TRUE),\n                                   autres.rémunérations   = sum(Montant[Type == \"AC\" | Type == \"A\" | Type == \"AV\"], na.rm = TRUE),\n                                   rémunération.vacataire = sum(Montant[Type == \"VAC\"], na.rm = TRUE)),  \n                              by = c(clé.fusion, étiquette.année)]\n\nAnalyse.rémunérations[ ,  Filtre_non_annexe := Vérifier_non_annexe(Montant.net.annuel, Année)\n                      & nb.mois > 1 \n                      & cumHeures > 120 \n                      & cumHeures / nb.jours > 1.5]\n\nAnalyse.rémunérations[ , `:=`(rémunération.indemnitaire.imposable = indemnités + sft + indemnité.résidence + rémunérations.diverses,\n                              Filtre_actif_non_annexe = (Filtre_actif == TRUE & Filtre_non_annexe == TRUE))]\n\n#Montant.brut.annuel - sft - indemnité.résidence - traitement.indiciaire\n\nAnalyse.rémunérations[ ,\n                      `:=`(rémunération.indemnitaire.imposable.eqtp = ifelse(is.finite(q <- Montant.brut.annuel.eqtp/Montant.brut.annuel), \n                                                                             q * rémunération.indemnitaire.imposable,\n                                                                             NA),\n                           \n                           total.lignes.paie =  traitement.indiciaire + sft + indemnité.résidence + indemnités + autres.rémunérations,\n                           \n                           part.rémunération.indemnitaire =  ifelse(is.finite(q <- rémunération.indemnitaire.imposable/Montant.brut.annuel),\n                                                                    pmin(q, 1) * 100,\n                                                                    NA))]\n\nAnalyse.rémunérations[ , indemnités.élu := ifelse(Statut == \"ELU\", total.lignes.paie, 0)]\n\nAnalyse.rémunérations <- Analyse.rémunérations[! is.na(Montant.brut.annuel)]\n\nmessage(\"Analyse des rémunérations réalisée.\")\n\nAnalyse.variations.par.exercice <- Analyse.rémunérations[Grade != \"A\"  \n                                                         & Grade != \"V\" \n                                                         & Statut != \"ELU\"\n                                                         & Filtre_actif_non_annexe == TRUE,\n                                                         c(clé.fusion, étiquette.année,\n                                                           \"Montant.net.annuel.eqtp\",\n                                                           \"Montant.brut.annuel.eqtp\",\n                                                           \"rémunération.indemnitaire.imposable.eqtp\",\n                                                           \"Statut\",\n                                                           \"Grade\",\n                                                           \"nb.jours\",\n                                                           \"temps.complet\",\n                                                           \"ind.quotité\",\n                                                           \"quotité.moyenne\",\n                                                           \"permanent\"), with=FALSE]\n\nAnalyse.variations.par.exercice[ , indicatrice.année := bitwShiftL(1, Année - début.période.sous.revue) ]\n\nsélectionner.exercice.analyse.rémunérations <- function(année) {\n  \n  Analyse.rémunérations.exercice <- Analyse.rémunérations[Année == année]\n  \n  if (fichier.personnels.existe)\n  {\n    Analyse.rémunérations.exercice <- merge(Analyse.rémunérations.exercice,\n                                            base.personnels.catégorie,\n                                            by = clé.fusion,\n                                            all = FALSE)\n    \n    if (! \"Catégorie\" %in% colonnes.sélectionnées) colonnes.sélectionnées <- c(colonnes.sélectionnées, \"Catégorie\")\n  }\n  \n  Analyse.rémunérations.exercice\n  \n}\n\n# On ne retire les quotités nulles et NA que pour l'analyse dynamique de la partie 4 \n# On retire également les Heures nulles na et les Heures < seuil.heures\n\nif (enlever.quotités.na) {\n  Analyse.variations.par.exercice <- Analyse.variations.par.exercice[! is.na(quotité.moyenne)]\n}\n\nif (enlever.quotités.nulles) {\n  Analyse.variations.par.exercice <- Analyse.variations.par.exercice[quotité.moyenne > minimum.quotité]\n}\n\nAnalyse.variations.synthèse <- Analyse.variations.par.exercice[ ,\n                                                               .(Nexercices = length(Année),\n                                                                 statut = Statut[length(Année)],\n                                                                 total.jours = sum(nb.jours, na.rm = TRUE),\n                                                                 indicatrice.période = sum(indicatrice.année),\n                                                                 Montant.net.annuel.eqtp.début  = Montant.net.annuel.eqtp[1],\n                                                                 Montant.net.annuel.eqtp.sortie = Montant.net.annuel.eqtp[length(Année)],\n                                                                 permanent = all(permanent),\n                                                                 temps.complet = all(temps.complet),\n                                                                 moyenne.rémunération.annuelle.sur.période =\n                                                                   sum(Montant.net.annuel.eqtp, na.rm = TRUE)/length(Année[!is.na(Montant.net.annuel.eqtp) \n                                                                                                                           & Montant.net.annuel.eqtp > minimum.positif])),\n                                                               by = clé.fusion]\n\nAnalyse.variations.synthèse[ ,  pris.en.compte := ! is.na(Montant.net.annuel.eqtp.début)\n                            & ! is.na(Montant.net.annuel.eqtp.sortie)\n                            & Montant.net.annuel.eqtp.début  > minimum.positif \n                            & Montant.net.annuel.eqtp.sortie > minimum.positif ]\n\nAnalyse.variations.synthèse[ ,  variation.rémunération := ifelse(pris.en.compte,\n                                                                 (Montant.net.annuel.eqtp.sortie / Montant.net.annuel.eqtp.début - 1)*100,\n                                                                 NA)]\n\nAnalyse.variations.synthèse[ ,                                            \n                            `:=`(variation.moyenne.rémunération = ifelse(pris.en.compte,\n                                                                         ((variation.rémunération/100 + 1)^(1 / (Nexercices - 1)) - 1) * 100,\n                                                                         NA),\n                                 \n                                 variation.rémunération.normalisée = ifelse(durée.sous.revue == Nexercices,\n                                                                            variation.rémunération,\n                                                                            NA))]\n\n\nAnalyse.variations.synthèse[ ,                                                                 \n                            `:=`(variation.moyenne.rémunération.normalisée = ifelse(!is.na(variation.rémunération.normalisée),\n                                                                                    variation.moyenne.rémunération,\n                                                                                    NA),\n                                 plus.2.ans  = (total.jours  >= 730),  \n                                 moins.2.ans = (total.jours < 730),\n                                 moins.1.an  = (total.jours < 365),\n                                 moins.six.mois = (total.jours < 183))]\n\n# Note : sous environnement knitr/spin, data.table parvient mal à identifier les noms locaux,\n# ce qui ne pose pas de problème en environnement standard. Il faut donc rajouter le préfixe de base dans ce cas.\n\n\ntemp2 <- Analyse.variations.synthèse[ , .(Matricule, indicatrice.période, pris.en.compte, Nexercices, plus.2.ans)]\n\n\nAnalyse.variations.par.exercice <- merge(Analyse.variations.par.exercice, temp2, by=\"Matricule\")\n\nrm(temp2)\n\nAnalyse.variations.par.exercice[ , est.rmpp :=  Année != début.période.sous.revue  \n                                & ! is.na(ind.quotité)\n                                &  ind.quotité == TRUE\n                                & bitwAnd(bitwShiftL(1, Année - 1 - début.période.sous.revue),\n                                          indicatrice.période) != 0]\n\n\nAnalyse.variations.synthèse.plus.2.ans  <- data.frame(NULL)\nAnalyse.variations.synthèse.moins.2.ans <- data.frame(NULL)\n\nmessage(\"Analyse des variations réalisée.\")\n\nBulletins.paie.nir.total.hors.élus <- unique(Bulletins.paie[Année == fin.période.sous.revue\n                                                            & Mois == 12\n                                                            & Statut != \"ELU\",\n                                                            c(clé.fusion, \"Nir\"), with=FALSE], by = NULL)\n\nBulletins.paie.nir.fonctionnaires  <- unique(Bulletins.paie[Année == fin.période.sous.revue\n                                                            & Mois  == 12\n                                                            & (Statut == \"TITULAIRE\" |\n                                                                 Statut == \"STAGIAIRE\"),\n                                                            c(clé.fusion, \"Nir\"), with=FALSE], by = NULL)\n\nBulletins.paie.nir.nontit  <- unique(Bulletins.paie[Année == fin.période.sous.revue\n                                                    & Mois  == 12\n                                                    & Statut == \"NON_TITULAIRE\",\n                                                    c(clé.fusion, \"Nir\"), with=FALSE], by = NULL)\n\n\nBulletins.paie.nir.permanents  <- unique(Bulletins.paie[Année == fin.période.sous.revue\n                                                        & Mois  == 12\n                                                        & (Statut == \"NON_TITULAIRE\" | Statut == \"STAGIAIRE\" | Statut == \"TITULAIRE\"),\n                                                        c(clé.fusion, \"Nir\"), with=FALSE], by = NULL)\n\nnames(Bulletins.paie.nir.total.hors.élus) <- c(clé.fusion, \"Nir\")\n\n# Age au 31 décembre de l'exercice dernier.exerciceal de la période sous revue\n# ne pas oublier [ ,...] ici:\n\nannées.fonctionnaires   <- extraire.nir(Bulletins.paie.nir.fonctionnaires, fin.période.sous.revue)\n\nannées.total.hors.élus  <- extraire.nir(Bulletins.paie.nir.total.hors.élus, fin.période.sous.revue)\n\nannées.total.permanents <- extraire.nir(Bulletins.paie.nir.permanents, fin.période.sous.revue)\n\nannées.total.nontit     <- extraire.nir(Bulletins.paie.nir.nontit, fin.période.sous.revue)\n\nBulletins.paie.nir.total.hors.élus.début <- unique(Bulletins.paie[Année == début.période.sous.revue\n                                                                  & Mois == 12\n                                                                  & Statut != \"ELU\",\n                                                                  c(clé.fusion, \"Nir\"), with=FALSE], by = NULL)\n\nBulletins.paie.nir.fonctionnaires.début  <- unique(Bulletins.paie[Année == début.période.sous.revue\n                                                                  & Mois  == 12\n                                                                  & (Statut == \"TITULAIRE\" |\n                                                                       Statut == \"STAGIAIRE\"),\n                                                                  c(clé.fusion, \"Nir\"), with=FALSE], by = NULL)\n\nBulletins.paie.nir.nontit.début          <- unique(Bulletins.paie[Année == début.période.sous.revue\n                                                                  & Mois == 12\n                                                                  & Statut == \"NON_TITULAIRE\"   , .(Matricule, Nir)], by = NULL)\n\nBulletins.paie.nir.permanents.début      <- unique(Bulletins.paie[Année == début.période.sous.revue\n                                                                  & Mois  == 12\n                                                                  & (Statut == \"NON_TITULAIRE\" | Statut == \"STAGIAIRE\" | Statut == \"TITULAIRE\"),\n                                                                  c(clé.fusion, \"Nir\"), with=FALSE], by = NULL)\n\n\nnames(Bulletins.paie.nir.total.hors.élus.début) <- c(clé.fusion, \"Nir\")\n\n\n# Age au 31 décembre de l'exercice dernier.exerciceal de la période sous revue\n# ne pas oublier [ ,...] ici:\n\nannées.fonctionnaires.début   <- extraire.nir(Bulletins.paie.nir.fonctionnaires.début, début.période.sous.revue)\n\nannées.total.hors.élus.début  <- extraire.nir(Bulletins.paie.nir.total.hors.élus.début, début.période.sous.revue)\n\nannées.total.nontit.début     <- extraire.nir(Bulletins.paie.nir.nontit.début, début.période.sous.revue)\n\nannées.total.permanents.début <- extraire.nir(Bulletins.paie.nir.permanents.début, début.période.sous.revue)\n\nmessage(\"Analyse démographique réalisée.\")\n\nif (!is.null(Paie) & !is.null(Analyse.rémunérations)\n    & !is.null(Analyse.variations.synthèse) & !is.null(Analyse.variations.par.exercice))\n  message(\"Statistiques de synthèse réalisées\")\nmessage(\"Démographie...\")\n",
    "created" : 1421713273952.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3364091454",
    "id" : "6C2ED9FB",
    "lastKnownWriteTime" : 1421716394,
    "path" : "C:/Dev/altair/Tests/Exemple/analyse.rémunérations.R",
    "project_path" : "Tests/Exemple/analyse.rémunérations.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}