{
    "contents" : "  \n  \n\n```{r }\n\n\nAnalyse.rémunérations.exercice <- sélectionner.exercice.analyse.rémunérations(année)\n\n```\n\n   \n# `r chapitre`. Rémunérations brutes : analyse pour l'exercice `r année`    \n   \n## `r chapitre`.1 Masse salariale brute de l'ensemble des agents     \n    \n \n\n```{r }\nmasses.personnels <- colSums(Analyse.rémunérations.exercice[Statut != \"ELU\",\n                                                                            .(Montant.brut.annuel,\n                                                                              rémunération.indemnitaire.imposable,\n                                                                              indemnités.élu,\n                                                                              total.lignes.paie,\n                                                                              autres.rémunérations)])\n\nmasses.élus <- colSums(Analyse.rémunérations.exercice[Statut == \"ELU\",\n                                                                      .(Montant.brut.annuel,\n                                                                        rémunération.indemnitaire.imposable,\n                                                                        indemnités.élu,\n                                                                        total.lignes.paie,\n                                                                        autres.rémunérations)])\n```\n\n### Cumuls des rémunérations brutes pour l'exercice `r année`   \n \n*Personnels (hors élus)*     \n \n&nbsp;*Tableau `r incrément()`*   \n   \n\n```{r }\nTableau.vertical2(c(\"Agrégats\",\n                    \"k&euro;\"),\n                  c(\"Brut annuel (bulletins)\",\n                    \"Brut annuel (lignes), dont :\",\n                    \"\\\\ \\\\ Primes :\",\n                    \"\\\\ \\\\ Autres rémunérations\",\n                    \"Part de primes en %\"),\n                  c(masses.personnels[\"Montant.brut.annuel\"],\n                    masses.personnels[\"total.lignes.paie\"],\n                    masses.personnels[\"rémunération.indemnitaire.imposable\"],\n                    masses.personnels[\"autres.rémunérations\"],\n                    masses.personnels[\"rémunération.indemnitaire.imposable\"]/masses.personnels[\"Montant.brut.annuel\"] * 100))\n```\n\n   \n*Elus*    \n \n \n&nbsp;*Tableau `r incrément()`*   \n   \n\n```{r }\nTableau.vertical2(c(\"Agrégats\",\n                    \"k&euro;\"),\n                  c(\"Brut annuel (bulletins)\",\n                    \"Brut annuel (lignes), dont :\",\n                    \"\\\\ \\\\ Primes :\",\n                    \"\\\\ \\\\ Autres rémunérations\"),\n                  c(masses.élus[\"Montant.brut.annuel\"],\n                    masses.élus[\"total.lignes.paie\"],\n                    masses.élus[\"rémunération.indemnitaire.imposable\"],\n                    masses.élus[\"autres.rémunérations\"]))\n```\n   \n    \n**Définitions :**   \n\n *Brut annuel (bulletins)*   : somme du champ *Brut*    \n *Brut annuel (lignes)*      : somme du champ *Montant* des lignes de paye, dont :    \n *Primes*                    : indemnités sauf remboursements, certaines IJSS, indemnités d'élu le cas échéant, Supplément familial de traitement et Indemnité de résidence        \n *Indemnités d'élu*          : toutes rémunérations indemnitaires des élus    \n *Autres rémunérations*      : acomptes, retenues sur brut, rémunérations diverses, rappels   \n    \n**Tests de cohérence**   \n\nSomme des rémunérations brutes versées aux personnels (non élus) :   \n \n \n&nbsp;*Tableau `r incrément()`*    \n   \n\n```{r }\nTableau.vertical2(c(\"Agrégats\",\n                    \"k&euro;\"),\n                  c(\"Bulletins de paie \",\n                    \"Lignes de paie \",\n                    \"Différence \"),\n                  c(masses.personnels[\"Montant.brut.annuel\"],\n                    masses.personnels[\"total.lignes.paie\"],\n                    masses.personnels[\"Montant.brut.annuel\"] -\n                      masses.personnels[\"total.lignes.paie\"]))\n```\n\n   \nà comparer aux soldes des comptes 641 et 648 du compte de gestion.   \n\nSomme des rémunérations brutes versées (élus) :     \n \n \n&nbsp;*Tableau `r incrément()`*   \n   \n\n```{r }\nTableau.vertical2(c(\"Agrégats\",\n                    \"k&euro;\"),\n                  c(\"Bulletins de paie \",\n                    \"Lignes de paie \",\n                    \"Différence \"),\n                  c(masses.élus[\"Montant.brut.annuel\"],\n                    masses.élus[\"total.lignes.paie\"],\n                    masses.élus[\"Montant.brut.annuel\"] -\n                      masses.élus[\"total.lignes.paie\"]))   \n\n```\n\n  \n## `r chapitre`.2 Masse salariale brute des fonctionnaires    \n\n*Cette section concerne les personnels fonctionnaires titulaires et stagiaires*   \n\n\n```{r }\n\nAR <- Analyse.rémunérations.exercice[Statut == \"TITULAIRE\" | Statut == \"STAGIAIRE\", colonnes.sélectionnées, with=FALSE]\nattach(AR)\n\nfiltre.fonctionnaire <- function (X) AR[traitement.indiciaire > minimum.positif & !is.na(X)  & X > minimum.positif, X]\n\nif (longueur.non.na(filtre.fonctionnaire(Montant.brut.annuel.eqtp) > 0)) \n  hist(filtre.fonctionnaire(Montant.brut.annuel.eqtp)/1000,\n       xlab = \"En milliers d'euros  (< 40 k€) EQTP\\n\",\n       ylab = \"Effectif\",\n       xlim = c(0, 40),\n       main = \"Rémunération brute annuelle des fonctionnaires en \" %+% année,\n       col = \"blue\",\n       breaks = 250)  \n\n````  \n```{r }  \n\nif (longueur.non.na(filtre.fonctionnaire(Montant.brut.annuel.eqtp[Montant.brut.annuel.eqtp > 40000]) > 0)) \n  hist(filtre.fonctionnaire(Montant.brut.annuel.eqtp[Montant.brut.annuel.eqtp > 40000])/1000,\n       xlab = \"En milliers d'euros (> 40 k€) EQTP\\n\",\n       ylab = \"Effectif\",\n       xlim = c(40, 120),\n       main = \"Rémunération brute annuelle des fonctionnaires en \" %+% année,\n       col = \"blue\",\n       breaks = 250)\n```\n```{r }  \n\nif (longueur.non.na(filtre.fonctionnaire(rémunération.indemnitaire.imposable.eqtp[rémunération.indemnitaire.imposable.eqtp < 10000]) > 0))\n  hist(filtre.fonctionnaire(rémunération.indemnitaire.imposable.eqtp[rémunération.indemnitaire.imposable.eqtp < 10000])/1000,\n       xlab = \"En milliers d'euros (< 10 k€) EQTP\\n\",\n       ylab = \"Effectif\",\n       xlim = c(0, 10),\n       main = \"Rémunération indemnitaire imposable annuelle des fonctionnaires en \" %+% année,\n       col = \"blue\",\n       breaks = 150)\n\n```  \n```{r }  \n\nif (longueur.non.na(filtre.fonctionnaire(rémunération.indemnitaire.imposable.eqtp[rémunération.indemnitaire.imposable.eqtp > 10000]) > 0))\n  hist(filtre.fonctionnaire(rémunération.indemnitaire.imposable.eqtp[rémunération.indemnitaire.imposable.eqtp > 10000])/1000,\n       xlab = \"En milliers d'euros (> 10 k€) EQTP\\n\",\n       ylab = \"Effectif\",\n       xlim = c(10, 60),\n       main = \"Rémunération indemnitaire imposable annuelle des fonctionnaires en \" %+% année,\n       col = \"blue\",\n       breaks = 150)\n\n```  \n```{r }   \n\nif (longueur.non.na(filtre.fonctionnaire(part.rémunération.indemnitaire[part.rémunération.indemnitaire < 30]) > 0)) \n  hist(filtre.fonctionnaire(part.rémunération.indemnitaire[part.rémunération.indemnitaire < 30]),\n       xlab = \"Part des indemnités imposables (< 30 %) dans la rémunération brute en %\\n\",\n       ylab = \"Effectif\",\n       main = \"Part indemnitaire de la rémunération annuelle des fonctionnaires en \" %+% année,\n       xlim = c(0,30),\n       col = \"blue\",\n       breaks = 250)\n```\n\n```{r }\n\nif (longueur.non.na(filtre.fonctionnaire(part.rémunération.indemnitaire[part.rémunération.indemnitaire > 30]) > 0)) \n  hist(filtre.fonctionnaire(pmin(100, part.rémunération.indemnitaire[part.rémunération.indemnitaire > 30], na.rm=TRUE)),\n       xlab = \"Part des indemnités imposables (> 30 %)  dans la rémunération brute en %\\n\",\n       ylab = \"Effectif\",\n       main = \"Part indemnitaire de la rémunération annuelle des fonctionnaires en \" %+% année,\n       xlim = c(30,100),\n       col = \"blue\",\n       include.lowest=TRUE,\n       breaks = seq.int(20, 100, by=2))\n\n\ndetach(AR)\n```\n\n   \n**Nota :**   \n*EQTP : Equivalent temps plein = 12 . moyenne du ratio ratio rémunération / quotité*   \n   \n**Effectif : `r nrow(AR)`**   \n   \n**Tests de cohérence**   \n\n```{r }\nif (nrow(AR) > 0) {\n  masses.premier <- colSums(AR[ ,.(Montant.brut.annuel, rémunération.indemnitaire.imposable, total.lignes.paie, autres.rémunérations)])\n} else {\n  masses.premier <- c(0,0) \n}\n```\n   \nSomme des rémunérations brutes versées aux personnels titulaires et stagiaires :    \n\n \n&nbsp;*Tableau `r incrément()`*   \n   \n\n```{r }\nTableau.vertical2(c(\"Agrégats\",\n                    \"k&euro;\"),\n                  c(\"Brut annuel (bulletins)\",\n                    \"Brut annuel (lignes), dont :\",\n                    \"\\\\ \\\\ Primes :\",\n                    \"\\\\ \\\\ Autres rémunérations\",\n                    \"Part de primes en %\"),\n                  c(masses.premier[\"Montant.brut.annuel\"],\n                    masses.premier[\"total.lignes.paie\"],\n                    masses.premier[\"rémunération.indemnitaire.imposable\"],\n                    masses.premier[\"autres.rémunérations\"],\n                    masses.premier[\"rémunération.indemnitaire.imposable\"]/masses.premier[\"Montant.brut.annuel\"] * 100))\n```\n\n    \n**Définitions :**     \n   \n *Brut annuel (bulletins)*   : somme du champ *Brut*   \n *Brut annuel (lignes)*      : somme du champ *Montant* des lignes de paye, dont :   \n *Primes*                    : indemnités sauf remboursements, certaines IJSS, indemnités d'élu le cas échéant, Supplément familial de traitement et Indemnité de résidence        \n *Indemnités d'élus*         : toutes rémunérations indemnitaires des élus    \n *Autres rémunérations*      : acomptes, retenues sur brut, rémunérations diverses, rappels   \n   \n**Tests de cohérence**   \n\nSomme des rémunérations brutes versées aux personnels (non élus) :   \n\n \n&nbsp;*Tableau `r incrément()`*      \n   \n\n```{r }\nTableau.vertical2(c(\"Agrégats\",\n                    \"k&euro;\"),\n                  c(\"Bulletins de paie \",\n                    \"Lignes de paie \",\n                    \"Différence \"),\n                  c(masses.premier[\"Montant.brut.annuel\"],\n                    masses.premier[\"total.lignes.paie\"],\n                    masses.premier[\"Montant.brut.annuel\"] -\n                      masses.premier[\"total.lignes.paie\"]))\n```\n\n   \nA comparer aux soldes des comptes 6411, 6419 et 648 du compte de gestion.    \n\n**Formation et distribution du salaire brut moyen par tête (SMPT) en EQTP pour l'année `r année`**      \n \n&nbsp;*Tableau `r incrément()`*   \n   \n\n```{r }\nRésumé(c(\"Traitement indiciaire\",\n         \"Primes\",\n         \"Autres rémunérations\",\n         \"Effectif\"),\n       AR[Grade != \"V\" & Grade != \"A\" & Statut != \"ELU\" & Filtre_actif_non_annexe == TRUE, .(traitement.indiciaire,\n                                                                                             rémunération.indemnitaire.imposable,\n                                                                                             autres.rémunérations)],\n       extra = \"length\")\n```\n   \n \n&nbsp;*Tableau `r incrément()`*   \n   \n\n```{r }\nRésumé(c(\"Total lignes hors rappels\",\n         \"Total brut\",\n         \"SMPT brut en EQTP\",\n         \"Part de la rém. indemnitaire\",\n         \"Effectif\"),\n       AR[Grade != \"V\" & Grade != \"A\" & Statut != \"ELU\" & Filtre_actif_non_annexe == TRUE, .(total.lignes.paie,\n                                                                                             Montant.brut.annuel,\n                                                                                             Montant.brut.annuel.eqtp,\n                                                                                             part.rémunération.indemnitaire)],\n       extra = \"length\")\n```\n\n   \n*Hors vacataires identifiés, assistantes maternelles, élus locaux et pour les postes actifs non annexes*   \n\n**Catégorie A**    \n\n\n```{r }\nARA <- data.table::data.table(NULL)\nARB <- data.table::data.table(NULL)\nARC <- data.table::data.table(NULL)\n\nif (fichier.personnels.existe) {\n  ARA <- AR[Catégorie == 'A'& Grade != \"V\" & Grade != \"A\" & Statut != \"ELU\" & Filtre_actif_non_annexe == TRUE, ]\n\n  #&nbsp;*Tableau `r incrément()`*   \n  #    \n  \n  Résumé(c(\"Traitement indiciaire\",\n           \"Primes\",\n           \"Autres rémunérations\"),\n         ARA[ , .(traitement.indiciaire,\n                  rémunération.indemnitaire.imposable,\n                  autres.rémunérations)])\n} else\n  cat(\"Pas de statistique en l'absence de fichier des catégories.\\n\")\n\nif (fichier.personnels.existe) {\n  #  \n  #&nbsp;*Tableau `r incrément()`*   \n  #    \n  \n  Résumé(c(\"Total rémunérations\", \n           \"Total rémunérations EQTP\", \n           \"Part de la rémunération indemnitaire\"),\n         ARA[ , .(Montant.brut.annuel,\n                  Montant.brut.annuel.eqtp,\n                  part.rémunération.indemnitaire)])\n}\n```\n\n    \n**Effectif : `r nrow(ARA)`**  \n\n**Catégorie B**    \n    \n\n```{r }\nif (fichier.personnels.existe) {\n  ARB <- AR[Catégorie == 'B' & Grade != \"V\" & Grade != \"A\" & Statut != \"ELU\" & Filtre_actif_non_annexe == TRUE, ]\n  #  \n  #&nbsp;*Tableau `r incrément()`*   \n  #    \n  \n  Résumé(c(\"Traitement indiciaire\",\n           \"Primes\",\n           \"Autres rémunérations\"),\n         ARB[, .(traitement.indiciaire,\n                 rémunération.indemnitaire.imposable,\n                 autres.rémunérations)])    \n} else\n  cat(\"Pas de statistique en l'absence de fichier des catégories.\\n\")\n\nif (fichier.personnels.existe) {\n  #  \n  #&nbsp;*Tableau `r incrément()`*   \n  #    \n  \n  Résumé(c(\"Total rémunérations\",\n           \"Total rémunérations EQTP\",\n           \"Part de la rémunération indemnitaire\"),\n         ARB[, .(Montant.brut.annuel,\n                 Montant.brut.annuel.eqtp,\n                 part.rémunération.indemnitaire)])    \n}\n```\n\n\n**Effectif : `r nrow(ARB)`**    \n\n**Catégorie C**    \n\n\n```{r }\nif (fichier.personnels.existe) {\n  ARC <- AR[Catégorie == 'C'& Grade != \"V\" & Grade != \"A\" & Statut != \"ELU\" & Filtre_actif_non_annexe == TRUE, ]\n  #  \n  #&nbsp;*Tableau `r incrément()`*   \n  #    \n  \n  Résumé(c(\"Traitement indiciaire\",\n           \"Primes\",\n           \"Autres rémunérations\"),\n         ARC[ , .(traitement.indiciaire,\n                  rémunération.indemnitaire.imposable,\n                  autres.rémunérations)])    \n} else\n  cat(\"Pas de statistique en l'absence de fichier des catégories.\\n\")\n\nif (fichier.personnels.existe) {\n  #  \n  #&nbsp;*Tableau `r incrément()`*   \n  #    \n  \n  Résumé(c(\"Total rémunérations\",\n           \"Total rémunérations EQTP\",\n           \"Part de la rémunération indemnitaire\"),\n         ARC[ , .(Montant.brut.annuel,\n                  Montant.brut.annuel.eqtp,\n                  part.rémunération.indemnitaire) ])    \n}\n\n\n```\n\n**Effectif : `r nrow(ARC)`**    \n\n## `r chapitre`.3 Contractuels, vacataires et stagiaires inclus     \n  \n*Les assistantes maternelles et les vacataires sont ici inclus, pour les postes non annexes*   \n\n\n```{r }\nattach(Analyse.rémunérations.exercice, warn.conflicts=FALSE)\ntemp <- rémunération.indemnitaire.imposable.eqtp[Statut != \"ELU\"\n                                                 & Statut != \"TITULAIRE\"\n                                                 & Statut != \"STAGIAIRE\"\n                                                 & Filtre_actif_non_annexe == TRUE\n                                                 & rémunération.indemnitaire.imposable.eqtp > 1000] / 1000\n\n\n#knitr::opts_chunk$set(fig.width = 7.5, echo = FALSE, warning = FALSE, message = FALSE, results = 'asis')\n\ncat(\"\\n\\n\")    \n\nif (longueur.non.na(temp) > 0)\n  hist(temp,\n       xlab = \"Rémunération indemnitaire brute imposable en milliers d'euros EQTP\\n\",\n       ylab = \"Effectif\",\n       xlim = c(0, 40),\n       main = \"Rémunération annuelle totale des contractuels en \" %+% année,\n       col = \"red\",\n       nclass = 50)\n    \n```\n\n  \n**Nota :**   \n*Ne sont retenues que les rémunérations supérieures à 1 000 k&euro;.*  \n*Les élus ne sont pas pris en compte.*  \n  \n\n```{r }\ntemp <- positive(autres.rémunérations)\n\nif (longueur.non.na(temp))\n  hist(temp,\n       xlab = \"En euros :\\n divers\",\n       ylab = \"Effectif\",\n       xlim = c(0, 5000),\n       main = \"Autres rémunérations en \" %+% année,\n       nclass = 50,\n       col = \"grey\")\n\nAR <- Analyse.rémunérations.exercice[Statut != \"ELU\"\n                                         &  Statut != \"TITULAIRE\"\n                                         &  Statut != \"STAGIAIRE\"\n                                         & Filtre_actif_non_annexe == TRUE,\n                                         colonnes.sélectionnées, \n                                         with=FALSE]\n```\n\n  \n**Formation et distribution du salaire brut moyen par tête (SMPT) en EQTP pour l'année `r année`**     \n  \n \n&nbsp;*Tableau `r incrément()`*   \n   \n\n```{r }\nRésumé(c(\"Primes\",\n         \"Autres rémunérations\",\n         \"Effectif\"),\n       AR[ , .(rémunération.indemnitaire.imposable,\n               autres.rémunérations)],\n       extra = \"length\")   \n```\n\n   \n&nbsp;*Tableau `r incrément()`*   \n   \n   \n```{r }\nRésumé(c(\"Total rémunérations\",\n         \"Total rémunérations EQTP\",\n         \"Effectif\"),\n       AR[ , .(Montant.brut.annuel, Montant.brut.annuel.eqtp)],\n       extra = \"length\")  \n\n\nrm(Analyse.rémunérations.exercice)\n```\n\n",
    "created" : 1421432723536.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "112318180",
    "id" : "527A2D04",
    "lastKnownWriteTime" : 1421759155,
    "path" : "C:/Dev/altair/Tests/Exemple/analyse.statique.Rmd",
    "project_path" : "Tests/Exemple/analyse.statique.Rmd",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_markdown"
}