{
    "contents" : "library(compiler)\nenableJIT(3)\n\n# chemin.dossier\n# début.période.sous.revue\n# fin.période.sous.revue\n# champ.detection.1\n# champ.detection.2\n# etiquette.matricule\n# etiquette.montant\n# etiquette.totalgeneral\n# seuil.troncature\n# date.format\n# nom.de.fichier.de.paie\n\n##---------------------------------------------------------------------------------------------------------------------\n#  Chemins et variables globales du programme\n##\n\n# Cette section pourra être modifiée en entrée dans d'autres contextes\n# Matricule, Codes, Avantages en nature\n\nchemin.dossier <- \"G:/Equipe NICOL/2014/SERGADI/2-Travail/OBSERVATIONS/ANALYSES/GRH\"\n\n# Lignes de paie\n# On peut lire jusqu'à  10 fichiers csv qui seront générés au format\n#  \"chemin dossier + \"JOURNAL DE PAIE 2008.csv\"\n\ndébut.période.sous.revue <- 2008\nfin.période.sous.revue   <- 2013\n\netiquette.matricule <- \"Matricule\"\netiquette.totalgeneral <- \"TOTAL GENERAL\"\netiquette.montant <- \"Net.a.Payer\"\n\nseuil.troncature <- 99\n\n# Le format est jour/mois/année avec deux chiffres-séparateur-deux chiffres-séparateur-4 chiffres.\n#Le séparateur peut être changé en un autre en modifiant le \"/\" dans fate.format\n\ndate.format <- \"%d/%m/%Y\"\n\nnom.de.fichier.de.paie <- \"JOURNAL DE PAIE \"\n\nldp <- paste0(nom.de.fichier.de.paie,début.période.sous.revue:fin.période.sous.revue,\".csv\")\n\nchamp.detection.1<-etiquette.matricule\nchamp.detection.2<-\"Matricule\"\n\n\n##---------------------------------------------------------------------------------------------------------------------\n#options(width=120, warn=-1)\nsource(file.path(chemin.dossier, \"bibliothèque.fonctions.paie.R\"))\n\njulian.date.début.période <- julian(as.Date(paste0(\"01/01/\", début.période.sous.revue), date.format))\njulian.exercice.suivant.premier <- julian(as.Date(paste0(\"01/01/\",(début.période.sous.revue+1)), date.format))\njulian.date.fin.période   <- julian(as.Date(paste0(\"01/01/\", fin.période.sous.revue+1), date.format))\njulian.exercice.dernier <- julian(as.Date(paste0(\"01/01/\",fin.période.sous.revue), date.format))\n\n# Programme principal\n##\n#  Bases\n##\n\n# Lignes de paie\n\nldp <- ldp[file.exists(chemin(ldp))]\n\nLdp <- Read.csv(ldp)\n\nif (etiquette.totalgeneral == \"\")\n      {\n        Total <- sum(Ldp[, etiquette.totalgeneral])/1000\n      }else\n      {\n        Total <- Ldp[Ldp$Matricule == etiquette.totalgeneral, etiquette.montant]/1000\n        Ldp   <- Ldp[Ldp$Matricule != etiquette.totalgeneral,]\n      }\n    \nnames(Total) <- c(début.période.sous.revue:fin.période.sous.revue)\n\nplot(names(Total),Total,\n     ylab=\"k€\",\n     las=1,\n     xlab=\"Année\",\n     main=\"Rémunération annuelle nette des agents\",\n     col=\"red\",\n     type=\"b\",  \n     xlim=c(début.période.sous.revue,fin.période.sous.revue)\n     )\n\nLdp$Matricule<-as.numeric(Ldp$Matricule)\n\nLdp<-Ldp[order(Ldp$Matricule),]\n\nlibrary(plyr)\n\ncalcul.nb.jours <- function(entrée, sortie) \n  {\n  \n    julian.entrée <- \n      ifelse(entrée == \"\", \n             julian.date.début.période,\n             max(julian.date.début.période, julian(as.Date(entrée, date.format))))\n    \n    julian.sortie <- \n      ifelse(sortie == \"\", \n             julian.date.fin.période, \n             min(julian.date.fin.période, julian(as.Date(sortie, date.format))))\n    \n    return (julian.sortie - julian.entrée)\n  }\n  \ncalcul.nb.jours.dans.exercice.in <- function(entrée) \n{\n  date.entrée <- as.Date(entrée, date.format)\n    \n  if (entrée == \"\")\n  {\n    julian.entrée <-  julian.date.début.période\n    julian.fin.exercice <- julian.exercice.suivant.premier\n  }\n  else\n  {\n    julian.entrée <- julian(date.entrée)\n    if (julian.date.début.période < julian.entrée)\n       julian.fin.exercice <- julian(as.Date(paste0(\"01/01/\",as.integer(substr(entrée, 7, 10))+1), date.format))\n    else\n    {\n      julian.fin.exercice <- julian.exercice.suivant.premier\n      julian.entrée <- julian.date.début.période\n    }\n  }\n      \n  return (julian.fin.exercice - julian.entrée)\n  \n}\n\ncalcul.nb.jours.dans.exercice.out <- function(sortie) \n{\n  date.sortie <- as.Date(sortie, date.format)\n  \n  if (sortie == \"\")\n  {\n    julian.sortie <-  julian.date.fin.période\n    julian.début.exercice <- julian.exercice.dernier\n  }\n  else\n  {\n    julian.sortie <- julian(date.sortie)\n    if (julian.date.début.période < julian.sortie)\n      julian.début.exercice <- julian(as.Date(paste0(\"01/01/\",as.integer(substr(sortie, 7, 10))), date.format))\n    else\n    {\n      julian.début.exercice <- julian.date.début.période\n      julian.sortie <- julian.exercice.suivant.premier\n    }\n  }\n  \n  return (julian.sortie - julian.début.exercice)\n  \n}\n\ncalcul.variation <- function(rémunération.début, rémunération.sortie, nb.jours.exercice.début, nb.jours.exercice.sortie, nb.exercices)\n{\n  if (nb.exercices > 1)  \n    \n  return(( rémunération.sortie / rémunération.début   - 1  ) * 100)\n  \n  else\n    \n  return (0)\n  \n}\n\nAnalyse.rémunérations <- ddply(Ldp,\n                           .(Matricule),\n                           summarize,\n                           nb.exercices = length(Net.a.Payer),\n                           entrée = Date.d.entrée[1],\n                           sortie = Date.de.Sortie[nb.exercices],\n                           nb.jours = calcul.nb.jours(entrée, sortie),\n                           nb.jours.exercice.début = calcul.nb.jours.dans.exercice.in(entrée),\n                           nb.jours.exercice.sortie = calcul.nb.jours.dans.exercice.out(sortie),\n                           rémunération.début = Net.a.Payer[1]/nb.jours.exercice.début*365,\n                           rémunération.sortie = Net.a.Payer[nb.exercices]/nb.jours.exercice.sortie*365,\n                           moyenne.rémunération.annuelle.sur.période = sum(Net.a.Payer)*365/nb.jours,\n                           variation.rémunération.jour = calcul.variation(rémunération.début, rémunération.sortie, nb.jours.exercice.début, nb.jours.exercice.sortie, nb.exercices),\n                           variation.moyenne.rémunération.jour = \n                             ( ( 1 + variation.rémunération.jour / 100 ) ^ (365 / nb.jours) - 1) * 100\n                           )\n\nAnalyse.rémunérations <- mutate(Analyse.rémunérations,\n                                plus.de.2.ans = (nb.jours >= 2*365),\n                                moins.de.2.ans = (nb.jours < 2*365),\n                                moins.de.1.an  = (nb.jours < 365),\n                                moins.de.six.mois = (nb.jours < 365/2))\n\nattach(Analyse.rémunérations, warn.conflicts=FALSE)\n\nnlevels(as.factor(Matricule))\n\nsummary(Analyse.rémunérations[ c(\"plus.de.2.ans\",\n                                 \"moins.de.2.ans\",\n                                 \"moins.de.1.an\", \n                                 \"moins.de.six.mois\")])\n\n\n\nhist(moyenne.rémunération.annuelle.sur.période/1000,\n     xlab=paste0(\"Distribution de la rémunération nette moyenne sur la période \",début.période.sous.revue,\"-\",fin.période.sous.revue,\" en k€\"),\n     ylab=\"Effectif\",\n     xlim=c(0, 80),\n     main=\"Rémunération nette moyenne\",\n     col=\"blue\",\n     nclass=100)\n\n\ntable(moins.de.2.ans, cut(variation.moyenne.rémunération.jour, breaks=seq(-5,5,by=0.5)))\n\nAnalyse.rémunérations.filtrée<-Analyse.rémunérations[ nb.jours.exercice.début > seuil.troncature & nb.jours.exercice.sortie > seuil.troncature & nb.exercices > 1, ]\n\nStats.Analyse.rémunérations.filtrée<-summary(Analyse.rémunérations.filtrée[-c(1:4)])\n\nprint(Stats.Analyse.rémunérations.filtrée)\n\nAnalyse.rémunérations.personnels.plus.de.2.ans <- Analyse.rémunérations.filtrée[Analyse.rémunérations.filtrée$plus.de.2.ans,]\n\nStats.Analyse.rémunérations.personnels.plus.de.2.ans<-summary(Analyse.rémunérations.personnels.plus.de.2.ans[-c(1:4)])\n\nprint(Stats.Analyse.rémunérations.personnels.plus.de.2.ans)\n\n\nAnalyse.rémunérations.personnels.moins.de.2.ans <- Analyse.rémunérations[moins.de.2.ans,]\n\nStats.Analyse.rémunérations.personnels.moins.de.2.ans<-summary(Analyse.rémunérations.personnels.moins.de.2.ans)\n\nprint(Stats.Analyse.rémunérations.personnels.moins.de.2.ans)\n\ntable(Analyse.rémunérations.filtrée$plus.de.2.ans, cut(Analyse.rémunérations.filtrée$variation.moyenne.rémunération.jour, breaks=seq(-10,35,by=0.5)))\n\nhist(Analyse.rémunérations.personnels.plus.de.2.ans$variation.moyenne.rémunération.jour,\n     xlab =\"Variation annuelle moyenne de la rémunération en %\",\n     las=1,\n     sub  = \"pour 41 agents restés plus de deux ans\",\n     ylab =\"Effectifs\",\n     main =\"Distribution de la variation annuelle\\nmoyenne de la rémunération des agents en place\",\n     col =\"red\",\n     nclass=100\n)\n\n\nhist(Analyse.rémunérations.personnels.moins.de.2.ans$variation.moyenne.rémunération.jour,\n     xlab =\"Variation annuelle moyenne de la rémunération en %\",\n     xlim=c(-10,30),\n     las=1,\n     sub  = \"pour 30 agents restés moins de deux ans\",\n     ylab =\"Effectifs\",\n     main =\"Distribution de la variation annuelle\\nmoyenne de la rémunération des agents restés moins de deux ans\",\n     col =\"red\",\n     nclass=100\n)\n\ndetach(Analyse.rémunérations)\n\nLdp <- mutate(Ldp,\n              plus.de.2.ans = Matricule\n                               %in%\n                             Analyse.rémunérations[Analyse.rémunérations$plus.de.2.ans, etiquette.matricule])\nattach(Ldp, warn=-1)\n\nLdp.plus.de.2.ans<-Ldp[plus.de.2.ans, ]\n\nplot(levels(as.factor(Ldp.plus.de.2.ans$Année)),\n     tapply(Ldp.plus.de.2.ans$Net.a.Payer, Ldp.plus.de.2.ans$Année, sum)/1000,\n     ylab=\"k€\",\n     las=1,\n     xlab=\"Année\",\n     main=\"Rémunération annuelle nette des agents\\nrestés plus de deux ans\",\n     col=\"red\",\n     type=\"b\",  \n     xlim=c(début.période.sous.revue,fin.période.sous.revue)\n)\n\n\nLdp.moins.de.2.ans<-Ldp[!plus.de.2.ans, ]\n\nplot(levels(as.factor(Ldp.moins.de.2.ans$Année)),\n     tapply(Ldp.moins.de.2.ans$Net.a.Payer, Ldp.moins.de.2.ans$Année, sum)/1000,\n     ylab=\"k€\",\n     las=1,\n     xlab=\"Année\",\n     main=\"Rémunération annuelle nette des agents\\n restés moins de deux ans\",\n     col=\"blue\",\n     type=\"b\",  \n     xlim=c(début.période.sous.revue,fin.période.sous.revue)\n)\n\nplot(levels(as.factor(Ldp.moins.de.2.ans$Année)),\n     sapply(levels(as.factor(Ldp.moins.de.2.ans$Année)) ,function(x) nlevels(as.factor(Ldp.moins.de.2.ans[Ldp.moins.de.2.ans$Année == x, ]$Matricule))),\n     ylab=\"Effectif\",\n     las=1,\n     xlab=\"Année\",\n     main=\"Nombre d'agents\\n restés moins de deux ans\",\n     col=\"blue\",\n     type=\"b\",  \n     xlim=c(début.période.sous.revue,fin.période.sous.revue)\n)\n\nplot(levels(as.factor(Ldp.plus.de.2.ans$Année)),\n     sapply(levels(as.factor(Ldp.plus.de.2.ans$Année)) ,function(x) nlevels(as.factor(Ldp.plus.de.2.ans[Ldp.plus.de.2.ans$Année == x, ]$Matricule))),\n     ylab=\"Effectif\",\n     las=1,\n     xlab=\"Année\",\n     main=\"Nombre d'agents\\n restés plus de deux ans\",\n     col=\"blue\",\n     type=\"b\",  \n     xlim=c(début.période.sous.revue,fin.période.sous.revue)\n)\n\nplot(levels(as.factor(Année)),\n     sapply(levels(as.factor(Année)), function(x) nlevels(as.factor(Ldp[Année == x, ]$Matricule))),\n     ylab=\"Effectif\",\n     las=1,\n     xlab=\"Année\",\n     main=\"Nombre d'agents rémunérés par exercice\",\n     col=\"green\",\n     type=\"b\",  \n     xlim=c(début.période.sous.revue,fin.période.sous.revue)\n)\n\ntable(plus.de.2.ans, Année)\n\ndetach(Ldp)\n\n## ------------------------------------------------------------------------------------------------------------------\n#  Sauvegardes : enlever les commentaires en mode opérationnel\n##\n\n sauv.base(Total, \"Total.csv\")\n write.csv2(Ldp, chemin(\"ligne.de.paie.csv\"))\n\n sauv.base(Stats.Analyse.rémunérations.personnels.plus.de.2.ans, \"Stats.Analyse.rémunérations.personnels.plus.de.2.ans.csv\")\n sauv.base(Stats.Analyse.rémunérations.personnels.moins.de.2.ans, \"Stats.Analyse.rémunérations.personnels.moins.de.2.ans.csv\")\n\n sauv.base(Analyse.rémunérations, \"Stats.Analyse.rémunérations.personnels.csv\")\n sauv.base(Analyse.rémunérations.filtrée, \"Stats.Analyse.rémunération.filtrée.csv\")\n\n",
    "created" : 1395660188915.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "182693215",
    "id" : "25820C7B",
    "lastKnownWriteTime" : 1395071714,
    "path" : "G:/Equipe NICOL/2014/SERGADI/2-Travail/OBSERVATIONS/ANALYSES/GRH/sergadi.R",
    "project_path" : "sergadi.R",
    "properties" : {
        "notebook_author" : "fnicol",
        "notebook_title" : "sergadi.R",
        "notebook_type" : "default"
    },
    "source_on_save" : false,
    "type" : "r_source"
}