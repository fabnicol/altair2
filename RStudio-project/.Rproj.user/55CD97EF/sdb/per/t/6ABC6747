{
    "collab_server" : "",
    "contents" : "# prologue\n# doit être dans le même répertoire que le programme principal et sa bibliothèque\n\n# dans le cas où l'on ne lance le programme que pour certaines années, il préciser début.période sous revue et fin.période .sous.revue\n# Dans ce cas fixer extraire.années en valeur TRUE.\n# Sinon le programme travaille sur l'ensemble des années disponibles dans la base : elles sont détectées automatiquement.\n\n# PARAMETRES GLOBAUX BOOLEENS ET ENTIERS\n\n\nracine                         <- ifelse(setOSWindows, \"R-Altaïr/\", \"R-Altair/\")\n\n# Toujours utiliser FALSE ou TRUE en plein lettres en raison de l'éloignement avec <- (bug de l'interpréteur pour T et F)\n\nextraire.années                <- FALSE\n  début.période.sous.revue     <- 2013\n  fin.période.sous.revue       <- 2014\n\nexec.root                      <- if (setOSWindows) \".exe\" else \"\"\n\néliminer.duplications          <- FALSE\nredresser.heures               <- TRUE\nenlever.quotités.nulles        <- FALSE\nenlever.quotités.na            <- FALSE\nécreter.quotités               <- TRUE\ngénérer.codes                  <- FALSE\ncharger.catégories.personnel   <- TRUE\nextraire.population            <- FALSE\ncharger.bases                  <- TRUE\nsauvegarder.bases.analyse      <- TRUE\nsauvegarder.bases.origine      <- FALSE\nafficher.table.effectifs       <- FALSE\ngénérer.table.élus             <- FALSE\ntester.matricules              <- TRUE\nanalyse.statique.totale        <- FALSE\ncorriger.environnement.système <- (setOSWindows == TRUE)\nintégrer.localisation          <- FALSE   # Veut on gardet Budget Employeur Siret Etablissement ?\nafficher.cumuls.détaillés.lignes.paie <- FALSE\nafficher.table.écarts.sft      <- FALSE\nanalyse.par.catégorie          <- TRUE\ntest.delta                     <- TRUE\nif (! exists(\"PDF\"))       PDF <- FALSE\nkeep_md                        <- FALSE\n\nseuil.troncature               <- 1 # jours\ntaux.tolérance.homonymie       <- 2  # en %\nquantile.cut                   <- 1  # en %\nminimum.positif                <- 0.5\nminimum.quotité                <- 0.1\ntolérance.variation.quotité    <- 0.05\nminimum.actif                  <- 100\nminimum.delta                  <- 5\n\n# définitions INSEE pour le poste non annexe\n# poste non annexe = minimum d'un mois et de 120h à raison d'au moins 1,5 h/jour.\n\nminimum.Nheures.jour.non.annexe <- 1.5\nminimum.Nheures.non.annexe      <- 120\nminimum.Nmois.non.annexe        <- 1\n\npopulation_minimale_calcul_médiane  <- 3\ntolérance.sft                       <- 1\n\nséparateur.liste.entrée     <- \";\"\nséparateur.décimal.entrée   <- \",\"\nséparateur.liste.sortie     <- \";\"\nséparateur.décimal.sortie   <- \",\"\n\n# FICHIERS EN INPUT\n# conventions de nommage : les noms et chemins sont en minuscules ;\n# les bases commencent par une majuscule. Un nom de fichier est souvent associé\n# à une variable commençant par une majuscule et représentant la base (data.frame ou matrice)\n\nliste.exclusions <- NULL\n\ntry ({\n  chemin.liste.exclusions <- chemin(\"liste.exclusions.txt\")\n  if (file.exists(chemin.liste.exclusions))\n    liste.exclusions <- read.delim(chemin.liste.exclusions, encoding=encodage.code.source, stringsAsFactors = FALSE)[[1]]\n}, silent=TRUE)\n\n\nnom.fichier.codes.paiement  <- paste0(racine, \"codes.csv\")\nnom.fichier.paie            <- paste0(racine, \"Lignes de paye\")\nnom.bulletin.paie           <- paste0(racine, \"Bulletins de paye\")\nnom.table                   <- paste0(racine, \"Table.csv\")\nnom.bulletins               <- paste0(racine, \"Bulletins.csv\")\n\n# DOSSIERS\n# Attention, si l'on lance la génération de document pour la première fois sans répertoire Bases existant, on aura un write error.\n# pour les applications à ergonomie facilitée, prévoir de distribuer le logiciel avec un dossier Bases déjà généré.\n\nchemin.dossier              <- getwd()\nchemin.dossier.bases        <- file.path(chemin.dossier, \"Bases\")\nchemin.dossier.outils       <- file.path(chemin.dossier, \"..\", \"..\", \"Outils\")\nchemin.dossier.lib          <- file.path(chemin.dossier, \"..\", \"..\", \"lib\")\nchemin.dossier.données      <- file.path(chemin.dossier, \"Donnees\")\n\n# Outils\n\nif (setOSWindows) {\n  iconv <- file.path(chemin.dossier.outils, paste0(\"iconv\", exec.root))\n  sed   <- file.path(chemin.dossier.outils, paste0(\"sed\", exec.root))\n} else {\n  iconv <- \"iconv\"\n  sed   <- \"sed\"\n}\n\n\n# ETIQUETTES ET FORMATS\n\nétiquette.matricule         <- \"Matricule\"\nétiquette.Type.rémunération <- \"Type rémunération\"\nétiquette.année             <- \"Année\"\nétiquette.libellé           <- \"Libellé\"\nétiquette.montant           <- \"Montant\"\nétiquette.code              <- \"Code\"\nétiquette.rém.indemn        <- \"Rémunération contractuelle ou indemnitaire\"\nchamp.détection.1           <- étiquette.matricule\nchamp.détection.2           <- \"Code\"\n\nclé.fusion <- étiquette.matricule\n\ncolonnes.requises           <- c(union(clé.fusion, étiquette.matricule),\n                                 étiquette.année,\n                                 \"Mois\",\n                                 \"Statut\",\n                                 \"Brut\",\n                                 \"Net.à.Payer\",\n                                 \"Heures.Sup.\",\n                                 \"Heures\",\n                                 \"Emploi\",\n                                 \"Nir\",\n                                 \"Temps.de.travail\")\n\nlocalisation <- if (intégrer.localisation) c(\"Budget\", \"Employeur\", \"Siret\", \"Etablissement\") else NULL\nlocalisation.classes <- if (intégrer.localisation) c(\"character\", \"character\", \"character\", \"character\") else NULL\n\ncolonnes.input <- c(\"Année\", \"Mois\", \n                    localisation,\n                    \"Nom\", \"Prénom\", \"Matricule\",\n                    \"Service\", \"NbEnfants\", \"Statut\", \"Temps.de.travail\", \"Heures.Sup.\", \"Heures\",\n                    \"Indice\", \"Brut\", \"Net\", \"Net.à.Payer\", \"NBI\",\n                    \"Libellé\", \"Code\", \"Base\", \"Taux\", \"Nb.Unité\",\n                    \"Montant\", \"Type\", \"Emploi\", \"Grade\", \"Catégorie\", \"Nir\")\n\ncolonnes.classes.input    <- c(\"integer\", \"integer\",  \n                               localisation.classes,\n                               \"character\", \"character\", \"character\",\n                               \"character\", \"numeric\", \"character\", \"numeric\", \"numeric\", \"numeric\",\n                               \"character\",  \"numeric\", \"numeric\", \"numeric\", \"numeric\",\n                               \"character\",  \"character\", \"numeric\", \"numeric\", \"numeric\",\n                               \"numeric\", \"character\", \"character\", \"character\", \"character\", \"character\")\n\ncolonnes.bulletins.input <- c(\"Année\", \"Mois\", \n                              localisation,\n                              \"Nom\", \"Prénom\", \"Matricule\",\n                              \"Service\", \"NbEnfants\", \"Statut\", \"Temps.de.travail\", \"Heures.Sup.\", \"Heures\",\n                              \"Indice\", \"Brut\", \"Net\", \"Net.à.Payer\", \"NBI\",\n                              \"Emploi\", \"Grade\", \"Catégorie\", \"Nir\")\n\ncolonnes.bulletins.classes.input <- c(\"integer\", \"integer\",\n                                      localisation.classes,\n                                      \"character\", \"character\", \"character\",\n                                      \"character\", \"numeric\", \"character\", \"numeric\", \"numeric\", \"numeric\",\n                                      \"character\",  \"numeric\", \"numeric\", \"numeric\", \"numeric\",\n                                      \"character\", \"character\", \"character\", \"character\")\n\ndate.format                      <- \"%d/%m/%Y\"\n\n# ESPACES DE VALEURS LICITES POUR CERTAINS CHAMPS (modalités)\n\n#libellés.élus               <- c(\"Elu\", \"Elus\", \"élu\", \"élus\", \"maire\", \"président\", \"adjoint au maire\", \"vice-président\", \"vice président\")\n\n########## Problématique ##############\n#codes.NBI <- c(\"1012\", \"101B\", \"101M\", \"4652\", \"4672\")\n\n\n# A priori les deux modes de lectures de tables (rapide et standard) lisent aussi bien le Windows ANSI/ISO-8859-1 que\n# l'UTF-8 à condition que le Windows ANSI soit encodé par Excel ou l'éditeur de RStudio.\n\nencodage.entrée <-  \"ISO-8859-1\"\n  # \"WINDOWS-1252\"\n  # \"UTF-8\"\n  \nencodage.entrée.xhl2csv <-  \"ISO-8859-1\"\n\nencodage.sortie <- \"ISO-8859-15\"\n\nmodalité.traitement            <- \"TRAITEMENT\"     # s'applique aussi aux NBI\nmodalité.indemnitaire          <- \"INDEMNITAIRE\"   # hors vacations\n\n\nmodalité.principal.contractuel <- \"PRINCIPAL.CONTRACTUEL\" # contractuels qui ne sont pas payés par référénece à un traitement indiciaire.\nmodalité.élu                   <- \"ELU\"\nmodalité.vacations             <- \"VACATIONS\"\nmodalité.autres                <- \"AUTRES\"         # notamment les remboursements de frais professionnels, de transport et les restitutions/régularisations\n\n\n# expressions régulières\n\n#\\\\bxyz veut aussi dire cde.xyz(...), à éviter\n\nexpression.rég.heures.sup <- \"(?:^|\\\\s)iht?[sc]|i(?:(?=n)n\\\\w*|)\\\\.?\\\\s*\\\\bh(?:(?=o)o\\\\w*|)\\\\.?.*\\\\bs(?:(?=u)u\\\\w*|)\\\\.?\\\\b|h(?:(?=e)e\\\\w*|)\\\\.?\\\\s*\\\\b(?:(?=s)s\\\\w*|(?:(?=c)c\\\\w*|))\\\\.?\\\\b\"\nexpression.rég.iat        <- \"(?:^|\\\\s)iat|i(?:(?=n)n\\\\w*|)\\\\.?\\\\s*\\\\ba(?:(?=d)d\\\\w*|)\\\\.?\\\\s*\\\\b(?:et\\\\s*\\\\b)?t(?:(?=e)e\\\\w*|)\\\\.?\\\\b\"\nexpression.rég.ifts       <- \"(?:^|\\\\s)ifts|i(?:(?=n)n\\\\w*|)\\\\.?\\\\s*\\\\bf\\\\w*\\\\.?\\\\s*\\\\bt(?:(?=r)r\\\\w*|)\\\\.?\\\\s*\\\\bs(?:(?=u)u\\\\w*|)\\\\.?\\\\b\"\nexpression.rég.pfr        <- \"(?:^|\\\\s)pfr|p(?:(?=r)r\\\\w*|)\\\\.?\\\\s*\\\\bf(?:(?=o)o\\\\w*|)\\\\.?\\\\s*(?:et|)\\\\s*\\\\br(?:.?.?su\\\\w*|)\\\\.?\\\\s*\\\\b\"\nexpression.rég.pfi        <- \"(?:^|\\\\s)pfi|p(?:(?=r)r\\\\w*|)\\\\.?\\\\s*\\\\bf(?:(?=o)o\\\\w*|)\\\\.?\\\\s*\\\\bi(?:(?=n)n\\\\w*|)\\\\.?\\\\b\"\nexpression.rég.population <- \"\\\\bASS(\\\\b|A).*\"\nexpression.rég.élus       <- \"maire|pr[eé]sident|.*([eé]lu[s]?|adj.*maire|v\\\\w*.*\\\\s+pr[eé]sident|cons\\\\w*.*\\\\s+muni|cons\\\\w*.*\\\\s+commun)\"\nexpression.rég.nbi        <- \"(?:\\\\s|^)nbi|(?:n(?:(?=o)o\\\\w*|)\\\\.?\\\\s*\\\\b)?b(?:(?=o)o\\\\w*|)\\\\.?\\\\s*\\\\bi(?:(?=n)n\\\\w*|)\\\\.?\\\\b\"\nexpression.rég.attaché    <- \"(?:^|\\\\s)att\\\\w*\\\\.?\\\\b|se\\\\w*\\\\.?\\\\bma\\\\w*\\\\.?\\\\b\"\nexpression.rég.attaché.p  <- \"(?:^|\\\\s)att\\\\w*\\\\.?\\\\bpr\\\\w*\\\\.?\\\\b|dir\\\\w*\\\\.?\\\\b\"\nexpression.rég.admin      <- \"(?:^|\\\\s)adm\\\\w*\\\\.?\\\\b\"\nexpression.rég.admin.hc   <- \"(?:^|\\\\s)adm\\\\w*\\\\.?\\\\bh\\\\w*\\\\.?\\\\s?c\\\\w*\\\\.?\\\\b\"\nexpression.rég.admin.g    <- \"(?:^|\\\\s)adm\\\\w*\\\\.?\\\\b\\\\s?g\\\\w*\\\\.?\\\\b\"\n\n# point d'indice majoré\nsource(\"point.im.R\")\n",
    "created" : 1455496318878.000,
    "dirty" : false,
    "encoding" : "ISO8859-1",
    "folds" : "",
    "hash" : "1177763171",
    "id" : "6ABC6747",
    "lastKnownWriteTime" : 1455496412,
    "last_content_update" : 1455496412464,
    "path" : "C:/Users/Public/Dev/altair/Tests/Exemple/prologue.R",
    "project_path" : "Tests/Exemple/prologue.R",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}