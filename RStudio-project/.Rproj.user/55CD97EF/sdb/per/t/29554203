{
    "collab_server" : "",
    "contents" : "#'---    \n#'title: false    \n#'author: false    \n#'date: false    \n#'output:   \n#'html_document:    \n#'css: style.css\n#'---     \n#'   \n#'![Image_Altair](altair.png)\n#'   \n#'   \n#'# DÃ©monstrateur AltaÃ¯r version 16.07 \n\n#+ echo = FALSE, warning = TRUE, message = FALSE\n\n# comportement global du programme\n\n# Lorsque l'on n'a que une ou deux annÃ©es, mettre Ã©tudier.variations Ã  FALSE\n# Lorsque l'on n'Ã©tudie pas une base XÃ©mÃ©lios, mettre Ã©tudier.tests.statutaires Ã  FALSE\n\n# Encodage obligatoire en UTF-8\n\n#+ dÃ©but\n\nlibrary(compiler)\ninvisible(setCompilerOptions(suppressAll = TRUE, optimize = 3))\ninvisible(enableJIT(3))\n\noptions(warn = -1, verbose = FALSE, OutDec = \",\", datatable.verbose = FALSE, datatable.integer64 = \"numeric\")\n\nencodage.code.source <- \"ISO-8859-1\"\n\ncurrentDir              <- getwd()\ngÃ©nÃ©rer.rapport         <<- ! grepl(\"altair\", basename(currentDir), ignore.case = TRUE) \n\n\n# dans cet ordre\n\ntry(setwd(\"Tests/Exemple\"), silent = TRUE)\n\nsource(\"syspaths.R\", encoding = encodage.code.source)\nsource(\"prologue.R\", encoding = encodage.code.source)\n\nif (corriger.environnement.systÃ¨me) {\n  \n  invisible(Sys.setenv(PATH = paste0(Sys.getenv(\"PATH\"), \"c:\\\\Users\\\\Public\\\\Dev\\\\altair\\\\texlive\\\\miktex\\\\bin;\")))\n  \n}\n\n\nsource(\"bibliotheque.fonctions.paie.R\", encoding = encodage.code.source)\nsource(\"import.R\", encoding = encodage.code.source)\n\n#'\n#'<p class = \"centered\"><b>Exercices `r paste(dÃ©but.pÃ©riode.sous.revue, \"Ã \", fin.pÃ©riode.sous.revue)` </b></p>\n#'<p class = \"author\">Fabrice Nicol</h1>\n#'\n#+ echo = FALSE\n#'`r format(Sys.Date(), \"%a %d %b %Y\")`      \n#'      \n#'PÃ©riode sous revue : `r dÃ©but.pÃ©riode.sous.revue` - `r fin.pÃ©riode.sous.revue`    \n#'Nombre d'exercices : `r durÃ©e.sous.revue`        \n#'   \n\n# Pour sauter une page en html (ou pdf converti de html, faire un h6 soit six diÃ¨ses dans les Rmd seulement)  \n\n#+ analyse-rÃ©munÃ©rations\n\nnewpage()\n\nsource(\"analyse.rÃ©munÃ©rations.R\", encoding = encodage.code.source)\n\n########### 1.1 Effectifs ########################\n\nincrÃ©menter.chapitre()\n\n#'# `r chapitre`. Statistiques de population\n#'\n#'### `r chapitre`.1 Effectifs\n\n#+ effectifs\n\nmessage(\"DÃ©mographie...\")\n\n# Rappel Analyse.variations.par.exercice comprend uniquement les actifs non annexes non assist. mat., non vacataires, non Ã©lus.\n\nlibrary(altair)\ntableau.effectifs <- effectifs(pÃ©riode, Bulletins.paie, Analyse.remunerations, Analyse.variations)\n\n#'  \n#  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#            \nkable(tableau.effectifs, row.names = TRUE, align='c')\n\n#'    \n#'**Nota:**   \n#'*(a) Nombre de matricules distincts ayant eu au moins un bulletin de paie dans l'annÃ©e, en fonction ou non. Tous ces personnels ne sont pas en fonction : sont inclus des rÃ©gularisations, des personnels hors position d'activitÃ© ou des ayants droit (reversion, etc.)*   \n#'*(b) Titulaires ou stagiaires*   \n#'*(c) Sur la base des libellÃ©s d'emploi et des libellÃ©s de lignes de paie. La dÃ©tection peut Ãªtre lacunaire*   \n#'*(d) ETP  : Equivalent temps plein = rÃ©munÃ©ration . quotitÃ©*  \n#'*(e) ETPT : Equivalent temps plein travaillÃ© = ETP . 12/nombre de mois travaillÃ©s dans l'annÃ©e*  \n#'*(f) Personnes en place : prÃ©sentes en N et N-1 avec la mÃªme quotitÃ©, postes actifs et non annexes uniquement.*     \n#'*(g) Postes actifs et non annexes :* voir [ComplÃ©ments mÃ©thodologiques](Docs/mÃ©thodologie.pdf)    \n#'*&nbsp;&nbsp;&nbsp;Un poste actif est dÃ©fini par au moins un bulletin de paie comportant un traitement positif pour un volume d'heures de travail mensuel non nul.*             \n#'*&nbsp;&nbsp;&nbsp;Un poste non annexe est dÃ©fini comme la conjonction de critÃ¨res horaires et de revenu sur une annÃ©e. La pÃ©riode minimale de rÃ©fÃ©rence est le mois.*   \n#'*Les dix derniÃ¨res lignes du tableau sont calculÃ©es en ne tenant pas compte des Ã©lus.*    \n\n#+ durÃ©e-du-travail\n\ncat(\"\\nLa durÃ©e du travail prise en compte dans la base de donnÃ©es est de \", nb.heures.temps.complet, \" h par mois.\\n\")  \nif (nb.heures.temps.complet > 1.1 * 151.67 || nb.heures.temps.complet < 0.9 * 151.67)  {\n  semaine.de.travail <<- nb.heures.temps.complet * 12 / 52\n  \n  cat(\"\\nAttention !\\nLe temps de travail hebdomadaire s'Ã©carte significativement de la durÃ©e lÃ©gale : \", \n      round(semaine.de.travail,1), \" h par semaine.\\n\")\n}\n\n#'      \n#'   \n#'[Lien vers la base des effectifs](Bases/Effectifs/tableau.effectifs.csv)\n#'\n#'\n\n#+ pyramides-des-Ã¢ges\n\nmessage(\"Statistiques de dÃ©mographie rÃ©alisÃ©es.\")\n\nsource(\"analyse.bulletins.R\", encoding = encodage.code.source)\n\nnewpage()\n\n########### 1.2 Pyramides ########################\n\n\n#'### `r chapitre`.2 Pyramide des Ã¢ges, ensemble des personnels\n\n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n\nessayer(produire_pyramides(function() TRUE, \"Pyramide des Ã¢ges des personnels\", versant = VERSANT_FP),\n        \"La pyramide des Ã¢ges de l'ensemble des personnels n'a pas pu Ãªtre gÃ©nÃ©rÃ©e.\")\n#'  \n#'[Lien vers la base des Ã¢ges - dÃ©but de pÃ©riode](Bases/Effectifs/`r nom.fichier.avant`.csv)  \n#'  \n#'[Lien vers la base des Ã¢ges - fin de pÃ©riode](Bases/Effectifs/`r nom.fichier.aprÃ¨s`.csv)  \n#' \n\n\nnewpage()\n   \n########### 1.3 Pyramides fonctionnaires ########################\n\n#'\n#'### `r chapitre`.3 Pyramide des Ã¢ges des fonctionnaires  \n\n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n\nFiltre_bulletins <- function() Bulletins.paie$Statut == \"TITULAIRE\" |  Bulletins.paie$Statut == \"STAGIAIRE\"\n\nessayer(produire_pyramides(Filtre_bulletins, \"Pyramide des Ã¢ges des fonctionnaires\", versant = \"TIT_\" %+% VERSANT_FP),\n      \"La pyramide des Ã¢ges des fonctionnaires n'a pas pu Ãªtre gÃ©nÃ©rÃ©e.\")\n\n\n#'  \n#'[Lien vers la base des Ã¢ges - dÃ©but de pÃ©riode](Bases/Effectifs/`r nom.fichier.avant`.csv)  \n#'  \n#'[Lien vers la base des Ã¢ges - fin de pÃ©riode](Bases/Effectifs/`r nom.fichier.aprÃ¨s`.csv)  \n#'   \n\nnewpage()\n\n########### 1.4 Pyramides non Tit ########################\n\n#'### `r chapitre`.4 Pyramide des Ã¢ges, personnels non titulaires   \n\n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n\nFiltre_bulletins <- function() Bulletins.paie$Statut == \"NON_TITULAIRE\"\n\nessayer(produire_pyramides(Filtre_bulletins, \"Pyramide des Ã¢ges des non titulaires\", versant = \"NONTIT_\" %+% VERSANT_FP), \"La pyramide des Ã¢ges des non titulaires n'a pas pu Ãªtre gÃ©nÃ©rÃ©e.\" )\n\n#'  \n#'[Lien vers la base des Ã¢ges - dÃ©but de pÃ©riode](Bases/Effectifs/`r nom.fichier.avant`.csv)  \n#'  \n#'[Lien vers la base des Ã¢ges - fin de pÃ©riode](Bases/Effectifs/`r nom.fichier.aprÃ¨s`.csv)  \n#'   \n\nnewpage()\n\n########### 1.6 Pyramides Autres statut ########################\n\n#'### `r chapitre`.5 Pyramide des Ã¢ges, autres statuts\n\n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n\n\nFiltre_bulletins <- function() { return(Bulletins.paie$Statut != \"TITULAIRE\" \n                                 & Bulletins.paie$Statut != \"NON_TITULAIRE\" \n                                 & Bulletins.paie$Statut != \"STAGIAIRE\") }\n\nessayer(produire_pyramides(Filtre_bulletins, \"Pyramide des Ã¢ges des autres personnels\"),  \"La pyramide des Ã¢ges des autres personnels n'a pas pu Ãªtre gÃ©nÃ©rÃ©e.\")\n\n\n#'  \n#'[Lien vers la base des Ã¢ges - dÃ©but de pÃ©riode](Bases/Effectifs/`r nom.fichier.avant`.csv)  \n#'  \n#'[Lien vers la base des Ã¢ges - fin de pÃ©riode](Bases/Effectifs/`r nom.fichier.aprÃ¨s`.csv)  \n#' \n\n#'*Toutes les pyramides des Ã¢ges sont Ã©tablies au 31 dÃ©cembre de l'annÃ©e considÃ©rÃ©e.*   \n#'*Les Ã©lus ne sont pas compris dans le pÃ©rimÃ¨tre statistique.*     \n\t   \nnewpage()\n\n########### 1.6 Effectifs par durÃ©e ########################\n\n#'### `r chapitre`.6 Effectifs des personnels par durÃ©e de service\n#'\n#'**Personnels en fonction (hors Ã©lus) des exercices `r dÃ©but.pÃ©riode.sous.revue` Ã  `r fin.pÃ©riode.sous.revue` inclus :**\n#'\n\n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n\n#+ effectifs-par-durÃ©e\n\nTableau(c(\"Plus de 2 ans\",\n          \"Moins de 2 ans\",\n          \"Moins d'un an\",\n          \"Moins de six mois\"),\n        sum(Analyse.variations$plus.2.ans, na.rm=TRUE),\n        sum(Analyse.variations$moins.2.ans, na.rm=TRUE),\n        sum(Analyse.variations$moins.1.an, na.rm=TRUE),\n        sum(Analyse.variations$moins.six.mois, na.rm=TRUE))\n\n\n#'\n\nif (nrow(Analyse.variations) > 0)\n  qplot(factor(AnnÃ©e),\n        data = Analyse.variations,\n        geom = \"bar\",\n        fill = factor(!Analyse.variations$plus.2.ans),\n        main = \"Evolutions entre \" %+% dÃ©but.pÃ©riode.sous.revue %+% \" et \" %+% fin.pÃ©riode.sous.revue,\n        xlab = Ã©tiquette.annÃ©e,\n        ylab = \"Effectif\",\n        asp = 1.4)        +\n  scale_fill_discrete(name = \"Personnels (non Ã©lus) en fonction\",\n                      breaks = c(TRUE, FALSE),\n                      labels = c(\"Moins de deux ans\", \"Plus de deux ans\"))\n\n\n\n#'\n#'**Effectifs (hors Ã©lus)**   \n#+ tableau-effectifs\n\neffectifs.var <- lapply(pÃ©riode,\n                        function(x) {\n\n                          E <- unique(Analyse.variations[AnnÃ©e == x , .(Matricule, plus.2.ans)], by=NULL)\n                          F <- E[plus.2.ans == TRUE]\n                          tot <- nrow(E)\n                          plus.2.ans <- nrow(F)\n                          rÃ©sultat <- c(plus.2.ans, tot - plus.2.ans, tot)\n                          rm(E, F, tot, plus.2.ans)\n                          rÃ©sultat\n                        })\n\neffectifs.var.locale <- lapply(effectifs.var, function(x) formatC(x, big.mark = \" \", format=\"f\", digits=0, decimal.mark=\",\"))\n\ntableau.effectifs.var <- as.data.frame(effectifs.var.locale, row.names = c(\"Plus de deux ans\", \"Moins de deux ans\", \"Total\"))\n\nnames(tableau.effectifs.var) <- as.character(pÃ©riode)\n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n\nkable(tableau.effectifs.var, row.names = TRUE, align='c')\n#'\n#'\n#'**Nota :**\n#'*Personnels en place : ayant servi au moins deux annÃ©es consÃ©cutives pendant la pÃ©riode.*     \n#'*Plus/moins de deux ans : plus/mois de 730 jours sur la pÃ©riode sous revue.*   \n#'\n\ncolonnes.sÃ©lectionnÃ©es <- c(\"traitement.indiciaire\",\n                            \"autres.rÃ©munÃ©rations\",\n                            \"rÃ©munÃ©ration.indemnitaire.imposable\",\n                            \"rÃ©munÃ©ration.indemnitaire.imposable.eqtp\",\n                            \"total.lignes.paie\",\n                            \"Montant.brut.annuel\",\n                            \"Montant.brut.annuel.eqtp\",\n                            \"part.rÃ©munÃ©ration.indemnitaire\",\n                            \"quotitÃ©.moyenne\",\n                            \"Statut\",\n                            \"Grade\",\n                            \"CatÃ©gorie\",\n                            \"Filtre_actif\",\n                            \"Filtre_annexe\",\n                            clÃ©.fusion)\n\n\n########### Analyse statique des rÃ©munÃ©rations (fichier Rmd) ########################\nnewpage()\n\n#+ lancement-analyse-statique\n\ninvisible(lapply(annÃ©es.analyse.statique, function(x) {\n                 annÃ©e <<- x\n                 incrÃ©menter.chapitre()\n                 if (! gÃ©nÃ©rer.rapport) {\n                   \n                   source('analyse.statique.R', encoding = encodage.code.source) \n                   \n                 } else {\n                   if (setOSWindows)  {                 \n                      cat(knit_child(text = readLines(file.path(chemin.dossier,'analyse.statique.Rmd'), encoding = encodage.code.source), quiet=TRUE), sep = '\\n')\n                   } else {\n                     cat(knit_child(text = readLines(file.path(chemin.dossier,'analyse.statique.utf8.Rmd'), encoding = \"UTF-8\"), quiet=TRUE), sep = '\\n')\n                   }\n                 }\n               }))\n\n#'  \n#'[Lien vers la base des rÃ©munÃ©rations](Bases/Remunerations/Analyse.remunerations.csv)  \n#'   \n\nnewpage()\n\n\n########### Comparatif INSEE DGCL ###############################\n#'   \n#'## `r chapitre`.4 Comparaisons source INSEE/DGCL   \n#'   \n#'*Salaires annnuels moyens 2011 en EQTP (hors assistantes maternelles)*   \n\n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n\n#+ comparaison-insee1\n\nTableau.vertical2(c(\"AgrÃ©gat (euros)\", \"Salaires bruts 2011\", \"Salaires bruts 2012\", \"Salaires bruts 2013\"),\n                  c(\"Ensemble\", \"Titulaires\", \"Autres salariÃ©s\"),\n                  12 * c(2159, 2223, 1903),\n                  12 * c(2195, 2259, NA),\n                  12 * c(2218, 2287, 2030))\n\n\n#'**ElÃ©ments de la rÃ©munÃ©ration brute pour les titulaires de la fonction publique territoriale**      \n#'   \n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n\nTableau.vertical2(\n  c(\"RÃ©m. annuelles\", \"2010\", \"Primes\", \"2011\", \"Primes\", \"2012\", \"Primes\", \"2013\", \"Primes\"),\n  c(\"Salaire brut\",\n    \"Traitement brut\",\n    \"Primes et rÃ©munÃ©rations annexes\",\n    \"y compris IR et SFT\"),\n  c(26305, 20350,\t\"\", 5955),\n  c(\"\", \"22,6 %\", \"\", \"\" ),\n  c(26660, 20562, \"\", 6098),\n  c(\"\", \"22,9 %\", \"\", \"\" ),\n  c(12*2259, 12*1727, \"\", 12*532),\n  c(\"\", \"23,6 %\", \"\", \"\" ),\n  c(12*2287, 12*1755, \"\", 12*532),\n  c(\"\", \"23,6 %\", \"\", \"\" ))\n#'   \n#'*Champ : France. SalariÃ©s en Ã©quivalent-temps plein (EQTP) des collectivitÃ©s territoriales (y compris bÃ©nÃ©ficiaires de contrats aidÃ©s, hors assistantes maternelles).*   \t\t\t\t\t\t\t\t\t\t\t\t\n#'*Les primes sont cumulÃ©es au supplÃ©ment familial de traitement (SFT) et Ã  l'indemnitÃ© de rÃ©sidence (IR). Le cumul est rapportÃ© Ã  la rÃ©munÃ©ration brute totale.*    \n#'[Source INSEE](http://www.insee.fr/fr/ffc/ipweb/ip1486/ip1486.xls)    \n#'[Source DGCL](http://www.fonction-publique.gouv.fr/files/files/statistiques/rapports_annuels/2012-2013/xls/Vue3_1_Remunerations.xls)    \n#'[Source DGFIP PLF 2015](http://www.performance-publique.budget.gouv.fr/sites/performance_publique/files/farandole/ressources/2015/pap/pdf/jaunes/jaune2015_fonction_publique.pdf)   \n#'   \n\nincrÃ©menter.chapitre()\n\nnewpage()\n\n########### 4. Analyse dynamique des rÃ©munÃ©rations ########################\n#'\n#'# `r chapitre`. RÃ©munÃ©rations nettes : Ã©volutions sur la pÃ©riode `r dÃ©but.pÃ©riode.sous.revue` - `r fin.pÃ©riode.sous.revue`    \n#'\n#'Nombre d'exercices: `r durÃ©e.sous.revue`   \n#'  \n#'**Les donnÃ©es prÃ©sentÃ©es dans cette section sont toutes relatives Ã  des rÃ©munÃ©rations nettes en Ã©quivalent temps plein (EQTP)**   \n#'Les Ã©lus, les vacataires et les assistantes maternelles ont Ã©tÃ© retirÃ©s de la population Ã©tudiÃ©e       \n#'Seuls sont considÃ©rÃ©s les postes actifs et non annexes   \n#'    \n#'*Nota :*   \n#'*EQTP = Equivalent temps plein  = 12 . moyenne du ratio rÃ©munÃ©ration / quotitÃ©*    \n\n########### 4.1 Distribution de la rÃ©munÃ©ration nette moyenne ###########\n\n#'    \n#'## `r chapitre`.1 Distribution de la rÃ©munÃ©ration nette moyenne sur la pÃ©riode    \n#+ remuneration-nette\n\nAnalyse.variations <- Analyse.variations[nb.jours > seuil.troncature\n                                               & ! is.na(Montant.net.annuel.eqtp)\n                                               & Montant.net.annuel.eqtp  > minimum.positif \n                                               & ! is.na(Statut)] \n\nattach(Analyse.variations)\n\ntemp <- positive(moyenne.rÃ©munÃ©ration.annuelle.sur.pÃ©riode) / 1000\n\nif (longueur.non.na(temp) > 0)\n  hist(temp,\n       xlab = \"Sur la pÃ©riode \" %+% dÃ©but.pÃ©riode.sous.revue %+% \"-\" %+% fin.pÃ©riode.sous.revue %+% \" en milliers d'euros\",\n       ylab = \"Effectif\",\n       main = \"RÃ©munÃ©ration nette moyenne\",\n       col = \"blue\",\n       nclass = 200)\n\n#'    \n#+ fig.height=4.5   \n\ntemp <- na.omit(moyenne.rÃ©munÃ©ration.annuelle.sur.pÃ©riode[moyenne.rÃ©munÃ©ration.annuelle.sur.pÃ©riode > minimum.positif\n                                                          & (statut == \"TITULAIRE\"  | statut == \"STAGIAIRE\")] / 1000)\n\nif (longueur.non.na(temp) > 0)\n  hist(temp,\n       xlab = \"Sur la pÃ©riode \"%+% dÃ©but.pÃ©riode.sous.revue %+% \"-\" %+% fin.pÃ©riode.sous.revue %+% \" en milliers d'euros\",\n       ylab = \"Effectif\",\n       main = \"RÃ©munÃ©ration nette moyenne des fonctionnaires\",\n       col = \"blue\",\n       nclass = 200)\n\n\n\n#'   \n#'[Lien vers la base de donnÃ©es synthÃ©tique](Bases/Remunerations/Analyse.variations.par.exercice.csv)\n#'[Lien vers la base de donnÃ©es dÃ©taillÃ©e par annÃ©e](Bases/Remunerations/Analyse.variations.par.exercice.csv)  \n\n########### 4.2  Evolutions des rÃ©munÃ©rations nettes ###########\n\n#'## `r chapitre`.2 Evolutions des rÃ©munÃ©rations nettes sur la pÃ©riode `r dÃ©but.pÃ©riode.sous.revue` - `r fin.pÃ©riode.sous.revue`   \n#'\n#'### `r chapitre`.2.1 Ensemble des personnels fonctionnaires et non titulaires (hors Ã©lus)\n#'\n#+ remuneration-nette-evolution\n\nmasse.salariale.nette <- rep(0, durÃ©e.sous.revue)\n\n# sommation sur les matricules Ã  annÃ©e fixe \n\n#'    \n#'**Salaire net moyen par tÃªte (SMPT net) en EQTP, hors Ã©lus**         \n#'       \n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n\n#+ Salaire-moyen-par-tete    \n\n\nsmpt <- function(Filtre, type =  \"smpt net\") {\n  \n  S_net.eqtp <- Analyse.variations[Filtre() == TRUE,\n                                   .(moy = weighted.mean(Montant.net.annuel.eqtp, quotitÃ©.moyenne, na.rm = TRUE)),\n                                   by = \"AnnÃ©e\"]\n  \n  S_net.eqtp.100 <- Analyse.variations[Filtre() == TRUE & temps.complet == TRUE & permanent == TRUE,\n                                       .(moy = weighted.mean(Montant.net.annuel.eqtp, quotitÃ©.moyenne, na.rm = TRUE)),\n                                       by = \"AnnÃ©e\"]\n  \n \n  f <- function(x) prettyNum(S_net.eqtp[AnnÃ©e == x, moy],\n                               big.mark = \" \",\n                               digits = 1,\n                               format = \"fg\")\n  \n  g <- function(x) prettyNum(S_net.eqtp.100[AnnÃ©e == x, moy],\n                             big.mark = \" \",\n                             digits = 1,\n                             format = \"fg\")\n  \n  T <- Tableau.vertical(c(Ã©tiquette.annÃ©e, type %+% \" (euros)\", type %+% \" temps complet (euros)\"),\n                         if (type == \"smpt net\") pÃ©riode else pÃ©riode[2:durÃ©e.sous.revue],           # if...else pas ifelse (dim vecteur)\n                         extra = \"variation\",\n                         f,\n                         g)\n  \n  if (T != \"\")  print(T)\n  \n  cat(\"\\n\\n\")  \n}\n\ndistribution_smpt <- function(Filtre) {\n  \n  print(RÃ©sumÃ©(c(dÃ©but.pÃ©riode.sous.revue, \"Effectif\",\n                 dÃ©but.pÃ©riode.sous.revue %+% \" TC\", \"Effectif\",\n                 fin.pÃ©riode.sous.revue, \"Effectif\",\n                 fin.pÃ©riode.sous.revue %+% \" TC\",  \"Effectif\"),\n         list(\n           Analyse.variations[AnnÃ©e == dÃ©but.pÃ©riode.sous.revue\n                              & Filtre() == TRUE,\n                              .(Montant.net.annuel.eqtp, quotitÃ©.moyenne)],   \n           Analyse.variations[AnnÃ©e == dÃ©but.pÃ©riode.sous.revue\n                              & Filtre() == TRUE\n                              & permanent == TRUE\n                              & temps.complet == TRUE,\n                              .(Montant.net.annuel.eqtp, quotitÃ©.moyenne)],\n           Analyse.variations[AnnÃ©e == fin.pÃ©riode.sous.revue \n                              & Filtre() == TRUE,\n                              .(Montant.net.annuel.eqtp, quotitÃ©.moyenne)],\n           Analyse.variations[AnnÃ©e == fin.pÃ©riode.sous.revue \n                              & Filtre() == TRUE\n                              & permanent == TRUE\n                              & temps.complet == TRUE,\n                              .(Montant.net.annuel.eqtp, quotitÃ©.moyenne)]),\n         extra = \"length\"))\n\n# Pour des raisons trÃ¨s mal comprises, print est ici nÃ©cessaire alors qu'il ne l'est pas dans smpt() pour Tableau_vertical ;\n# pourtant les deux fonctions sont basÃ©es sur kable()\n\n}\n\nFiltre_neutre <- function() TRUE\n\nessayer(smpt(Filtre_neutre),     \"Le salaire moyen par tÃªte n'a pas pu Ãªtre calculÃ©.\")\n\n#'   \n#+ Effet-de-noria-ensemble\nsource(\"noria.R\", encoding = encodage.code.source)\nnoria()\n\n#'   \n#'**Effet de noria sur salaires nets et taux de remplacements**       \n#'   \n#'**Effet de noria** : *diffÃ©rence entre la rÃ©munÃ©ration annuelle des entrants Ã  l'annÃ©e N et des sortants Ã  l'annÃ©e N-1*.  \n#'*Usuellement calculÃ©e sur les rÃ©munÃ©rations brutes, ici sur les rÃ©munÃ©rations nettes EQTP*  \n#'*afin d'apprÃ©cier l'impact de cet effet sur l'Ã©volution des rÃ©munÃ©rations nette moyennes calculÃ©e au tableau prÃ©cÃ©dent.*               \n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n#+ noria-tableau\n\n# B\n\n#'\n#'*MS N-1 : masse salariale nette de l'annÃ©e n-1.*   \n\n#'**Distribution et variation sur la pÃ©riode du salaire moyen net par tÃªte (SMPT net) en EQTP**         \n#'**pour les salariÃ©s Ã  temps complet**           \n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n\n#+ premiere-derniere-annee\n\nessayer(distribution_smpt(Filtre_neutre),        \"La distribution du salaire moyen par tÃªte n'a pas pu Ãªtre calculÃ©e.\")\n\n#'  \n#'*Nota :*  La population retenue est constituÃ©e des agents qui ne font pas partie des `r 2*quantile.cut` centiles extrÃªmaux   \n#'Les Ã©lus, vacataires et assistantes maternelles sont retirÃ©s du pÃ©rimÃ¨tre.   \n#'TC :  personnels Ã  temps complet sur toute l'annÃ©e            \n#'Seuls sont pris en compte les agents ayant connu au moins un mois actif et ayant eu, sur l'annÃ©e, des rÃ©munÃ©rations non annexes.  \n#'[ComplÃ©ments mÃ©thodologiques](Docs/mÃ©thodologie.pdf)     \n#'      \n\n\n#'**Comparaisons source INSEE/DGCL**   \n#'\n#'**Salaires annuels moyens 2011 Ã  2013 en EQTP (hors assistantes maternelles)**   \n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`*       \n\n#### INSEE/DGCL VARIATIONS  ####\n#'  \n#'  |  AgrÃ©gat (euros)| Salaires nets 2011 | Salaires nets 2012 | Salaires nets 2013 |      \n#'  |-----------------|----------:|---------:|----------:|   \n#'  |    Ensemble     |  21 876,0 | 22 176,0 |  22 224,0 |   \n#'  |   Titulaires    |  22 632,0 | 22 920,0 |  22 920,0 |   \n#'  | Autres salariÃ©s |  18 864,0 |  NA      |     NA    |   \n#' \n#'*Champ : France. SalariÃ©s en Ã©quivalent-temps plein (EQTP) des collectivitÃ©s territoriales (y compris bÃ©nÃ©ficiaires de contrats aidÃ©s, hors assistantes maternelles).*     \t\t\t\n\n#'   \n#'**Distribution des salaires nets annuels en EQTP dans la fonction publique territoriale (2011-2013)**   \n#' \n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n# Remarque sur le formatage markdown: en raison d'un bug de knitr, utiliser un diÃ¨se + apostrophe\n# suivi d'un seul blanc juste aprÃ¨s la table.\n\n#'  \n#' | DÃ©cile \\ euros   | 2011     | 2013   |   \n#' |------------------|----------|--------|   \n#' |    D1            | 15 288   | 15 600 |  \n#' |    D2            | 16 512   | 16 860 |    \n#' |    D3            | 17 508   | 17 844 |  \n#' |    D4            | 18 480   | 18 816 |  \n#' |    D5 (mÃ©diane)  | 19 632   | 19 908 |    \n#' |    D6            | 21 012   | 21 300 |    \n#' |    D7            | 22 860   | 23 160 |    \n#' |    D8            | 25 596   | 25 956 |    \n#' |    D9            | 30 876   | 31 272 |    \n#' |    Moyenne       | 21 876   | 22 212 |    \n#' \n \n#'**Distribution des salaires nets annuels en EQTP dans la fonction publique d'Etat (2011-2013)**   \n#' \n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n \n#'    \n#' | DÃ©cile \\ euros   | 2011     | 2013   |   \n#' |------------------|----------|--------|\n#' |    D1            | 17 496   | 18 012 |  \n#' |    D2            | 20 916   | 21 348 |    \n#' |    D3            | 23 052   | 23 376 |  \n#' |    D4            | 24 912   | 25 248 |  \n#' |    D5 (mÃ©diane)  | 26 832   | 27 120 |    \n#' |    D6            | 28 944   | 29 220 |    \n#' |    D7            | 31 632   | 31 968 |    \n#' |    D8            | 35 592   | 35 964 |    \n#' |    D9            | 42 456   | 42 780 |\n#' | Moyenne          | 29 208   | 29 628 |  \n#' \n\n            \n#'**Distribution des salaires nets annuels en EQTP dans la fonction publique hospitaliÃ¨re (hÃ´pitaux) (2011-2013)**   \n \n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n\n#'    \n#' | DÃ©cile \\ euros   | 2011     | 2013   |   \n#' |------------------|----------|--------|\n#' |    D1            | 16 584   | 17 016 |  \n#' |    D2            | 18 168   | 18 492 |    \n#' |    D3            | 19 620   | 19 872 |  \n#' |    D4            | 21 048   | 21 192 |  \n#' |    D5 (mÃ©diane)  | 22 596   | 22 656 |    \n#' |    D6            | 24 504   | 24 516 |    \n#' |    D7            | 27 216   | 27 252 |    \n#' |    D8            | 30 996   | 31 176 |    \n#' |    D9            | 37 812   | 38 100 |    \n#' |  Moyenne         | 26 496   | 26 916 |  \n#' \n\n#'[Source INSEE, onglets Figure3, F1web et F3web - 2011](Docs/ip1486.xls)   \n#'[Source INSEE, onglets F V3.1-2, F V3.1-5 - 2013](Docs/vue3_remunerations.xls)   \n\n#'   \n#'### `r chapitre`.2.2 Fonctionnaires      \n#'   \n#'**Titulaires et stagiaires**      \n\n#'**Salaire net moyen par tÃªte (SMPT net) en EQTP**       \n#'**Ensemble**  \n#'    \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n\nFiltre_fonctionnaire <- function() Statut == \"TITULAIRE\" | Statut == \"STAGIAIRE\"\n\nessayer(smpt(Filtre_fonctionnaire), \"Le salaire moyen par tÃªte des fonctionnaires n'a pas pu Ãªtre calculÃ©.\")\n\nFiltre_cat_A <- function()   (Statut == \"TITULAIRE\"  | Statut == \"STAGIAIRE\")  & (CatÃ©gorie == \"A\")\nFiltre_cat_B <- function()   (Statut == \"TITULAIRE\"  | Statut == \"STAGIAIRE\")  & (CatÃ©gorie == \"B\") \nFiltre_cat_C <- function()   (Statut == \"TITULAIRE\"  | Statut == \"STAGIAIRE\")  & (CatÃ©gorie == \"C\") \n\n#'   \n#'**CatÃ©gorie A**  \n#'\n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n#'  \n\n\nessayer(smpt(Filtre_cat_A), \"Le salaire moyen par tÃªte des fonctionnaires de catÃ©gorie A n'a pas pu Ãªtre calculÃ©.\")  \n\n#'**Distribution des salaires nets annuels en EQTP dans la fonction publique territoriale par catÃ©gorie (2011-2013)**   \n#'  \n#'*Comparaisons nationales*    \n#'    \n#' | DÃ©cile \\ euros   | 2011     | 2013   |   \n#' |------------------|----------|--------|\n#' |    D1            | 26 040   | 26 340 |  \n#' |    D2            | 28 992   |        |    \n#' |    D3            | 31 272   |        |  \n#' |    D4            | 33 468   |        |  \n#' |    D5 (mÃ©diane)  | 35 820   | 36 312 |    \n#' |    D6            | 38 664   |        |    \n#' |    D7            | 42 276   |        |    \n#' |    D8            | 47 124   |        |    \n#' |    D9            | 54 840   | 55 032 |    \n#' |  Moyenne         | 38 700   | 39 120 |       \n#' \n\n#'   \n#'**CatÃ©gorie B**  \n#'\n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n#'  \n\nessayer(smpt(Filtre_cat_B),          \"Le salaire moyen par tÃªte des fonctionnaires de catÃ©gorie B n'a pas pu Ãªtre calculÃ©.\")  \n\n\n#'*Comparaisons nationales*    \n#'    \n#' | DÃ©cile \\ euros   | 2011     | 2013   |  \n#' |------------------|----------|--------|\n#' |    D1            | 20 580   | 20 964 |  \n#' |    D2            | 22 272   |        |    \n#' |    D3            | 23 652   |        |  \n#' |    D4            | 24 960   |        |  \n#' |    D5 (mÃ©diane)  | 26 244   | 26 820 |    \n#' |    D6            | 27 636   |        |    \n#' |    D7            | 29 160   |        |    \n#' |    D8            | 30 984   |        |    \n#' |    D9            | 33 804   | 34 224 |    \n#' |  Moyenne         | 26 940   | 27 408 |   \n#' \n\n#'   \n#'**CatÃ©gorie C**  \n#'\n#'&nbsp;*Tableau `r incrÃ©ment()`*    \n#'    \n#'  \n\nessayer(smpt(Filtre_cat_C),       \"Le salaire moyen par tÃªte des fonctionnaires de catÃ©gorie C n'a pas pu Ãªtre calculÃ©.\")    \n\n#'     \n#'*Comparaisons nationales*    \n#'    \n#' | DÃ©cile \\ euros   | 2011     | 2013   |    \n#' |------------------|----------|--------|\n#' |    D1            | 15 972   |  16 296|  \n#' |    D2            | 16 896   |        |    \n#' |    D3            | 17 652   |        |  \n#' |    D4            | 18 360   |        |  \n#' |    D5 (mÃ©diane)  | 19 164   |  19 464|    \n#' |    D6            | 20 100   |        |    \n#' |    D7            | 21 216   |        |    \n#' |    D8            | 22 680   |        |    \n#' |    D9            | 24 996   |  25 176|    \n#' |    Moyenne       | 20 016   |  20 268|  \n#' \n\n# C \n\n#'   \n#'**Effet de noria sur salaires nets et taux de remplacements**       \n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n\n# D\n\n\n#'     \n#'*MS N-1 : masse salariale nette de l'annÃ©e n-1.*   \n#'       \n#'**Distribution et variation sur la pÃ©riode du salaire moyen net par tÃªte (SMPT net) en EQTP**         \n\n\n#'**Fonctionnaires**    \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n\nessayer(distribution_smpt(Filtre_fonctionnaire), \"La distribution du salaire moyen par tÃªte des fonctionnaires n'a pas pu Ãªtre calculÃ©e.\")\n\n#'**CatÃ©gorie A**    \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n\nessayer(distribution_smpt(Filtre_cat_A), \"La distribution du salaire moyen par tÃªte des fonctionnaires de catÃ©gorie A n'a pas pu Ãªtre calculÃ©e.\")\n\n#'**CatÃ©gorie B**  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n\nessayer(distribution_smpt(Filtre_cat_B), \"La distribution du salaire moyen par tÃªte des fonctionnaires de catÃ©gorie B n'a pas pu Ãªtre calculÃ©e.\")\n\n#'**CatÃ©gorie C**  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n\nessayer(distribution_smpt(Filtre_cat_C), \"La distribution du salaire moyen par tÃªte des fonctionnaires de catÃ©gorie C n'a pas pu Ãªtre calculÃ©e.\")\n\n#'[Lien vers la base de donnÃ©es](Bases/Remunerations/Analyse.variations.par.exercice.csv)     \n\n########### 4.3  GVT ###########  \n\n#'## `r chapitre`.3 Glissement vieillesse-technicitÃ© (GVT)   \n#'\n#'### `r chapitre`.3.1 Ensemble des personnels   \n#'   \n#'*Cette section est consacrÃ©e Ã  la rÃ©munÃ©ration moyenne des personnes en place (RMPP), dÃ©finies comme prÃ©sentes deux annÃ©es entiÃ¨res consÃ©cutives avec la mÃªme quotitÃ©*   \n#'*L'Ã©volution de la RMPP permet d'Ã©tudier le glissement vieillesse-technicitÃ© \"positif\", Ã  effectifs constants sur deux annÃ©es*      \n#'*Le GVT positif est dÃ» aux mesures statutaires et individuelles, Ã  l'avancement et aux changements d'activitÃ©*  \n\n\n# Appliquer les filtres maintenant\n\nq3 <- quantile(Analyse.variations$variation.rÃ©munÃ©ration, c(quantile.cut/100, 1 - quantile.cut/100), na.rm=TRUE)\n\n# Filtrage : on enlÃ¨ve les personnels prÃ©sents depuis moins d'un seuil de troncature (ex. 120 jours) dans l'annÃ©e et les Ã©lus\n# (paramÃ¨tre seuil.troncature) \n\n# Filtrage pour l'Ã©tude des variations : on enlÃ¨ve les valeurs manquantes des variations, les centiles extrÃªmaux,\n# les rÃ©munÃ©rations nettes nÃ©gatives ou proche de zÃ©ro. On exige un statut explicite en fin de pÃ©riode.\n# ParamÃ©trable par :\n# minimum.positif, quantile.cut \n\n# ici il faut rÃ©duire la matrice pour Ã©viter les rÃ©duplications pour les RÃ©sumÃ©s. TODO\n\nAnavar.synthese <- Analyse.variations[total.jours > 2 * seuil.troncature\n                                                           & pris.en.compte == TRUE\n                                                           & ! is.na(statut)   \n                                                           & ! is.na(variation.rÃ©munÃ©ration) \n                                                           & variation.rÃ©munÃ©ration > q3[[1]]\n                                                           & variation.rÃ©munÃ©ration < q3[[2]]]\n\nAnavar.synthese.plus.2.ans  <- Anavar.synthese[! is.na(plus.2.ans) & plus.2.ans == TRUE]\nAnavar.synthese.moins.2.ans <- Anavar.synthese[! is.na(plus.2.ans) & plus.2.ans == FALSE]\n\n#Analyse.variations.par.exercice <- Analyse.variations.par.exercice[Nexercices > 1]\n\nif (nrow(Anavar.synthese.plus.2.ans) > 0 && durÃ©e.sous.revue > 1 ) {\n  hist(Anavar.synthese.plus.2.ans$variation.moyenne.rÃ©munÃ©ration,\n       xlab =\"Variation annuelle moyenne en %\",\n       las = 1,\n       xlim = c(-5,30),\n       ylab =\"Effectifs\",\n       main =\"RÃ©munÃ©ration nette des personnes en place\",\n       col =\"blue\",\n       nclass=1000,\n       xaxt = 'n')\n\ntry(axis(side=1, at=seq(-5,30, 1), labels=seq(-5,30,1), lwd=2))\n\nFiltre_rmpp <- function() (est.rmpp == TRUE)\n}\n\n#'   \n#'**Evolution de la RMPP nette en EQTP**     \n#'   \n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n\nif (durÃ©e.sous.revue > 1) {\n   essayer(smpt(Filtre_rmpp, type = \"RMPP nette\"), \"La rÃ©munÃ©ration moyenne des personnels en place n'a pas pu Ãªtre calculÃ©e.\") \n  } else  {\n   cat(\"RMPP calculable uniquement si la pÃ©riode sous revue est au moins Ã©gale Ã  2 ans.\")\n  }\n\n#'    \n#'**Distribution et variation sur la pÃ©riode de la rÃ©munÃ©ration nette des personnes en place**                \n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n\n# La lÃ©gÃ¨re diffÃ©rence de pÃ©rmÃ¨tre entre Anavar.synthese et Analyse.variations.par.exercice tient au filtrage des quantiles\n# extrÃªmaux et des valeurs manquantes des variations\n\n\nmasque.rmpp.fin.pÃ©riode    <- bitwShiftL(3, durÃ©e.sous.revue - 2)      #  11{0,1}...{0,1}\nmasque.rmpp.dÃ©but.pÃ©riode  <- 3                                        #  {0,1}...{0,1}11\nmasque.prÃ©sent.dÃ©but.fin   <- bitwShiftL(1, durÃ©e.sous.revue - 1) + 1  #  10000..1\nmasque.prÃ©sent.sur.pÃ©riode <- bitwShiftL(1, durÃ©e.sous.revue) - 1       #  11111..1\n\nif (durÃ©e.sous.revue > 1) {\n\n  RÃ©sumÃ©(c(paste(dÃ©but.pÃ©riode.sous.revue, dÃ©but.pÃ©riode.sous.revue + 1, sep = \"-\"),\n           \"Effectif\",\n           paste(fin.pÃ©riode.sous.revue - 1, fin.pÃ©riode.sous.revue, sep = \"-\"),\n           \"Effectif\"),\n         list(Anavar.synthese[bitwAnd(indicatrice.pÃ©riode, masque.rmpp.dÃ©but.pÃ©riode) == masque.rmpp.dÃ©but.pÃ©riode \n                                          & AnnÃ©e == dÃ©but.pÃ©riode.sous.revue + 1, \n                                             .(Montant.net.annuel.eqtp.dÃ©but, quotitÃ©.moyenne)],\n              Anavar.synthese[indicatrice.pÃ©riode >= masque.rmpp.fin.pÃ©riode\n                                          & AnnÃ©e == fin.pÃ©riode.sous.revue, \n                                          .(Montant.net.annuel.eqtp.sortie, quotitÃ©.moyenne)]),\n          extra = \"length\")\n  \n} else  {\n  cat(\"Distribution de la RMPP calculable uniquement si la pÃ©riode sous revue est au moins Ã©gale Ã  2 ans.\")\n}\n\n#'*RMPP en `r dÃ©but.pÃ©riode.sous.revue + 1` des personnes en place en `r dÃ©but.pÃ©riode.sous.revue`-`r dÃ©but.pÃ©riode.sous.revue + 1`*     \n#'*RMPP en `r fin.pÃ©riode.sous.revue` des personnes en place en `r fin.pÃ©riode.sous.revue - 1`-`r fin.pÃ©riode.sous.revue `*         \n#'\n#'*Variation individuelle de rÃ©munÃ©ration nette en EQTP pour les personnels prÃ©sents la premiÃ¨re et la derniÃ¨re annÃ©e*   \n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n\nif (durÃ©e.sous.revue > 1) {\n  RÃ©sumÃ©(c(\"Variation normalisÃ©e (%)\",\n           \"Variation annuelle moyenne normalisÃ©e (%)\",\n           \"QuotitÃ©\",\n           \"Effectif\"),\n           Anavar.synthese[bitwAnd(indicatrice.pÃ©riode, masque.prÃ©sent.dÃ©but.fin) \n                                          == \n                                       masque.prÃ©sent.dÃ©but.fin\n                                       & AnnÃ©e == dÃ©but.pÃ©riode.sous.revue,\n                                         .(variation.rÃ©munÃ©ration.normalisÃ©e,\n                                           variation.moyenne.rÃ©munÃ©ration.normalisÃ©e,\n                                           quotitÃ©.moyenne)],\n         extra = \"length\")\n}\n\n\n# #'\n# #'*Variation individuelle de rÃ©munÃ©ration nette en EQTP pour les personnels prÃ©sents sur toute la pÃ©riode*   \n# #'  \n# #'&nbsp;*Tableau `r incrÃ©ment()`*   \n# #'  \n# \n# RÃ©sumÃ©(\"Variation normalisÃ©e (%)\",\n#         # \"Variation annuelle moyenne normalisÃ©e (%)\",\n#          \"Effectif\"),\n#        Anavar.synthese[indicatrice.pÃ©riode == masque.prÃ©sent.sur.pÃ©riode, variation.rÃ©munÃ©ration.normalisÃ©e],\n#        extra = \"length\")\n\n#'    \n#'### `r chapitre`.3.2 Titulaires et stagiaires     \n#'   \n\nFiltre_rmpp_fonctionnaire <- function () Filtre_fonctionnaire() & (est.rmpp == TRUE)\n\n#'   \n#'**Evolution de la RMPP nette en EQTP**     \n#'   \n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \nif (durÃ©e.sous.revue > 1)\n    essayer(smpt(Filtre_rmpp_fonctionnaire, type = \"RMPP nette\"), \"La RMPP nette des fonctionnaires n'a pas pu Ãªtre calculÃ©e\")\n\n#'    \n#'**Distribution et variation sur la pÃ©riode de la rÃ©munÃ©ration nette des fonctionnaires en place**                \n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n\n#'  \nif (durÃ©e.sous.revue > 1) {\n  \n  RÃ©sumÃ©(c(paste(dÃ©but.pÃ©riode.sous.revue, dÃ©but.pÃ©riode.sous.revue + 1, sep=\"-\"),\n           \"Effectif\",\n           paste(fin.pÃ©riode.sous.revue - 1, fin.pÃ©riode.sous.revue, sep=\"-\"),\n           \"Effectif\"),\n         list(Anavar.synthese[(statut == \"TITULAIRE\" | statut == \"STAGIAIRE\")\n                                           & bitwAnd(indicatrice.pÃ©riode, masque.rmpp.dÃ©but.pÃ©riode) == masque.rmpp.dÃ©but.pÃ©riode\n                                           & AnnÃ©e == dÃ©but.pÃ©riode.sous.revue + 1,  \n                                          .(Montant.net.annuel.eqtp.dÃ©but, quotitÃ©.moyenne)],\n              Anavar.synthese[(statut == \"TITULAIRE\" | statut == \"STAGIAIRE\")\n                                          & indicatrice.pÃ©riode >= masque.rmpp.fin.pÃ©riode\n                                          & AnnÃ©e == fin.pÃ©riode.sous.revue, \n                                          .(Montant.net.annuel.eqtp.sortie, quotitÃ©.moyenne)]),\n         extra = \"length\")\n  \n}\n\n#'*RMPP en `r dÃ©but.pÃ©riode.sous.revue + 1` des personnes en place en `r dÃ©but.pÃ©riode.sous.revue`-`r dÃ©but.pÃ©riode.sous.revue + 1`*     \n#'*RMPP en `r fin.pÃ©riode.sous.revue` des personnes en place en `r fin.pÃ©riode.sous.revue - 1`-`r fin.pÃ©riode.sous.revue `*         \n#'\n\n#'\n#'*Variation individuelle de rÃ©munÃ©ration nette en EQTP pour les personnels prÃ©sents la premiÃ¨re et la derniÃ¨re annÃ©e*   \n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n\nif (durÃ©e.sous.revue > 1) {\n  RÃ©sumÃ©(c(\"Variation normalisÃ©e (%)\",\n           \"Variation annuelle moyenne normalisÃ©e (%)\",\n           \"QuotitÃ©\",\n           \"Effectif\"),\n         Anavar.synthese[(statut == \"TITULAIRE\" | statut == \"STAGIAIRE\")\n                                     & bitwAnd(indicatrice.pÃ©riode, masque.prÃ©sent.dÃ©but.fin)\n                                        ==\n                                       masque.prÃ©sent.dÃ©but.fin\n                                     & AnnÃ©e == dÃ©but.pÃ©riode.sous.revue,\n                                       .(variation.rÃ©munÃ©ration.normalisÃ©e, \n                                         variation.moyenne.rÃ©munÃ©ration.normalisÃ©e,\n                                         quotitÃ©.moyenne)],\n         extra = \"length\")\n}\n\n\n#'\n#'\n#'[Lien vers la base de donnÃ©es](Bases/Remunerations/Anavar.synthese.csv)\n#'\n#'**Nota**   \n#'*Personnes en place :* en fonction au moins deux annÃ©es consÃ©cutives sur la pÃ©riode `r dÃ©but.pÃ©riode.sous.revue` Ã  `r fin.pÃ©riode.sous.revue`    \n#'*Variation sur la pÃ©riode d'activitÃ© :* entre l'arrivÃ©e et le dÃ©part de la personne      \n#'*Variation normalisÃ©e :* conforme Ã  la dÃ©finition INSEE (prÃ©sente en dÃ©but et en fin de pÃ©riode avec la mÃªme quotitÃ©)  \n#'  \n#'**Commentaire**       \n#'Les diffÃ©rences Ã©ventuelles constatÃ©es entre l'Ã©volution de la RMPP au tableau `r numÃ©ro.tableau-2` sont dues soit Ã  l'effet de noria soit Ã  l'effet pÃ©rimÃ¨tre.    \n#'      \n\n####### 4.4 Comparaisons nationales ####  \n\n#'[Lien vers la base de donnÃ©es](Bases/Remunerations/Anavar.synthese.csv)\n#'\n#'\n#'### `r chapitre`.4 Comparaisons avec la situation nationale des rÃ©munÃ©rations   \n#'  \n#'**Ãvolution en euros courants du SMPT et de la RMPP dans la FPT (en % et euros courants)**    \n\n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n\n#' \n#'| AnnÃ©e  |2008-09|2009-10|2010-11|2011-12|2012-13|2008-12|Moy. 2008-12|MÃ©d. 2007-11|  \n#'|:-------:|-----:|------:|-----:|----:|------:|------:|-----:|-----:|  \n#'| SMPT brut  | 2,5 | 1,3 | 1,5 | 1,7 | 1,1 | 7,2 | 1,8 |  |  \n#'|  SMPT net  | 3,0 | 1,4 | 1,3 | 1,4 | 0,8 | 7,3 | 1,8 | 13,4 |  \n#'| RMPP brute | 3,3 | 2,5 | 2,5 | 2,7 | 1,9 | 11,5 | 2,8 |     |  \n#'| RMPP nette | 3,3 | 2,5 | 2,3 | 2,4 | 1,6 | 10,9 | 2,6 |    |   \n#' \n\n#'*Source : fichier gÃ©nÃ©ral de l'Ãtat (FGE), DADS, SIASP, Insee, Drees. Traitement Insee, Drees, DGCL*    \n#'Hors assistants maternels et familiaux, y compris bÃ©nÃ©ficiaires de contrats aidÃ©s.   \n#'SMPT : Salaire moyen par tÃªte en EQTP.   \n#'RMPP : Agents prÃ©sents 24 mois consÃ©cutifs chez le mÃªme employeur avec la mÃªme quotitÃ© de travail.  \n#'Moyenne des variations gÃ©omÃ©triques annuelles pour les agents du champ.  \n#'La derniÃ¨re colonne prÃ©sente la mÃ©diane des augmentations du SMPT net pour les agents prÃ©sents en 2007 et 2011.   \n#'  \n#'**Salaires nets annuels et Ã©volution moyenne type de collectivitÃ© en euros courants  EQTP**    \n#'   \n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n\n\n#' \n#'|  CollectivitÃ©  | SMPT net 2011 | SMPT net 2012 | SMPT net 2013 | Moy. 2007-2011 (%) |   \n#'|:------------:|-----------:|-----------:|-----------:|---------:|       \n#'|Communes                   |   20 784,0    |   21 120,0    |   21 096,0    | 2,5 |  \n#'|CCAS et caisses des Ã©coles |   19 415,0    |   19 716,0    |   19 788,0    | 2,4 |  \n#'| EPCI Ã  fiscalitÃ© propre   |   22 882,0    |   23 088,0    |   23 184,0    | 3,1 |  \n#'| Autres structures intercommunales |   21 299,0    |   21 684,0    |   21 828,0    | 3,0 |  \n#'|   DÃ©partements            |   24 487,0    |   24 744,0    |   24 852,0    | 3,9 |  \n#'|   SDIS                    |   29 811,0    |   29 940,0    |   30 180,0    | 3,4 |  \n#'|  RÃ©gions                  |   22 432,0    |   22 836,0    |   23 004,0    | 3,8 |  \n#'| Autres collectivitÃ©s locales  |   24 680,0    |   24 696,0    |   24 828,0    | 3,2 |  \n#'|  Ensemble (moyenne)       |   21 873,0    |   22 176,0    |   22 212,0    | 2,9 |  \n#' \n\n#'*Champ : France. SalariÃ©s en Ã©quivalent-temps plein (EQTP) des collectivitÃ©s territoriales (y compris bÃ©nÃ©ficiaires de contrats aidÃ©s, hors assistantes maternelles).*     \t\t\t\n#'Conversion en euros courants, calcul CRC.  \n#'[Source INSEE donnÃ©es 2011 obsolÃ¨tes](http://www.insee.fr/fr/ffc/ipweb/ip1486/ip1486.xls)   \n#'[Source DGAFP](http://infos.emploipublic.fr/dossiers/la-fonction-publique-en-chiffres/la-fonction-publique-en-chiffre-2013/non-defini-08/apm-71444/)  \n#'[Source PLF 2014 donnÃ©es 2011 rÃ©visÃ©es p.151](http://www.fonction-publique.gouv.fr/files/files/statistiques/jaunes/jaune2014_FP.pdf)   \n#'[Source PLF 2015 donnÃ©es 2012 p.130](http://www.performance-publique.budget.gouv.fr/sites/performance_publique/files/farandole/ressources/2015/pap/pdf/jaunes/jaune2015_fonction_publique.pdf)   \n#'    \n\nincrÃ©menter.chapitre()\n\nnewpage()\n\n#'\n########### 5. TESTS STATUTAIRES ########################\n#'\n\n#### 5.1 NBI ####\n\n#'# `r chapitre`. Tests rÃ©glementaires   \n#'## `r chapitre`.1 ContrÃ´le des NBI et primes informatiques   \n#'   \n#'**Dans cette partie, l'ensemble de la base de paie est Ã©tudiÃ©.**  \n#'Les agents non actifs ou dont le poste est annexe sont rÃ©introduits dans le pÃ©rimÃ¨tre.   \n\n#+ tests-statutaires-nbi\n\nif (N <- uniqueN(Paie[Statut != \"TITULAIRE\"\n                            & Statut != \"STAGIAIRE\"\n                            & NBI != 0, \n                              Matricule]))\n  cat(\"Il existe \", FR(N), \"non titulaire\", ifelse(N>1, \"s\", \"\"), \" percevant une NBI.\")\n\nsetkey(Paie, Statut)\nPaie[c(\"NON_TITULAIRE\", \"EMPLOI_AIDE\"),\n           indic2 := NBI != 0 & grepl(expression.rÃ©g.nbi, LibellÃ©, ignore.case=TRUE, perl=TRUE)]\n \nNBI.aux.non.titulaires <- Paie[indic2 == TRUE, c(Ã©tiquette.matricule,\n                                                  \"Statut\",\n                                                  Ã©tiquette.code,\n                                                  Ã©tiquette.libellÃ©,\n                                                  Ã©tiquette.annÃ©e,\n                                                  \"Mois\",\n                                                  \"NBI\",\n                                                  Ã©tiquette.montant),\n                                                   with=FALSE] \n\nPaie[,indic2 := NULL]\n\nnombre.Lignes.paie.NBI.nontit <- nrow(NBI.aux.non.titulaires)\n\n# Prime de fonctions informatiques : pas dans la base de VLB\n# on cherche la chaine de char. \"INFO\" dans les libellÃ©s de primes\n\n# variante : filtre <- regexpr(\".*(INFO|PFI|P.F.I).*\", toupper(Paie$LibellÃ©)) et regmatches(Paie$LibellÃ©, filtre)\n\npersonnels.prime.informatique <- Paie[grepl(expression.rÃ©g.pfi, LibellÃ©, ignore.case=TRUE, perl=TRUE) == TRUE,\n                                         .(Matricule,\n                                           AnnÃ©e,\n                                           Mois,\n                                           Statut,\n                                           Code,\n                                           LibellÃ©,\n                                           Montant)]\n\nnombre.personnels.pfi <- nrow(personnels.prime.informatique)\n\nprimes.informatiques.potentielles <- if (nombre.personnels.pfi == 0) \"aucune\" else unique(personnels.prime.informatique$LibellÃ©)\n\n#'Primes informatiques : `r primes.informatiques.potentielles`\n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n\nTableau(\n  c(\"Nombre de lignes NBI pour non titulaires\",\n    \"Nombre de bÃ©nÃ©ficiaires de PFI\"),\n  nombre.Lignes.paie.NBI.nontit,\n  nombre.personnels.pfi)\n\n#'   \n#'[Lien vers la base de donnÃ©es NBI aux non titulaires](Bases/Reglementation/NBI.aux.non.titulaires.csv)   \n#'[Lien vers la base de donnÃ©es Primes informatiques](Bases/Reglementation/personnels.prime.informatique.csv)   \n#'   \n#'**Nota :**   \n#'NBI: nouvelle bonification indiciaire   \n#'PFI: prime de fonctions informatiques   \n#'\n\nT1 <- Bulletins.paie[ , .(nbi.cumul.indiciaire=sum(NBI, na.rm = TRUE)), by=\"Matricule,AnnÃ©e\"] \nT1 <- T1[nbi.cumul.indiciaire > 0] \n\nT2 <- Paie[grepl(expression.rÃ©g.nbi, LibellÃ©, perl=TRUE, ignore.case=TRUE) == TRUE \n           & Type %chin% c(\"T\", \"I\")\n           & NBI != 0,\n           .(nbi.cumul.montants = sum(Montant, na.rm=TRUE)), keyby=\"Matricule,AnnÃ©e\"]\n\nT2 <- T2[nbi.cumul.montants != 0]\n\nT <- merge(T1, T2, by=c(\"Matricule\", \"AnnÃ©e\"))\n\ncumuls.nbi <- T[, .(cumul.annuel.indiciaire = sum(nbi.cumul.indiciaire, na.rm = TRUE),\n      cumul.annuel.montants = sum(nbi.cumul.montants, na.rm = TRUE)), keyby=\"AnnÃ©e\"]\n\nT <- T[, ratio := nbi.cumul.montants/nbi.cumul.indiciaire]\n\nT <- T[, nbi.anormale := (abs(ratio) < 4 | abs(ratio) > 6)]\n\nlignes.nbi.anormales <- T[nbi.anormale == TRUE, .(Matricule, AnnÃ©e, nbi.cumul.indiciaire, nbi.cumul.montants)]\n\nmontants.nbi.anormales <- sum(lignes.nbi.anormales$nbi.cumul.montants, na.rm = TRUE)\n\n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n\nTableau(\n  c(\"RÃ©munÃ©rations de NBI anormales, par agent et par exercice\",\n    \"Montants correspondants\"),\n  nrow(lignes.nbi.anormales),\n  formatC(montants.nbi.anormales, big.mark = \" \", format=\"f\", digits=0))\n\nrm(T, T1, T2)\n#'   \n#'[Lien vers la base de donnÃ©es NBI anormales](Bases/Fiabilite/lignes.nbi.anormales.csv)   \n#'   \n#'**Nota :**   \n#'*Est considÃ©rÃ© comme manifestement anormal un total annuel de rÃ©munÃ©rations NBI correspondant Ã  un point d'indice net mensuel infÃ©rieur Ã  4 euros ou supÃ©rieur Ã  6 euros.*    \n#'*Les rappels ne sont pas pris en compte dans les montants versÃ©s. Certains Ã©carts peuvent Ãªtre rÃ©gularisÃ©s en les prenant en compte*     \n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \nattach(cumuls.nbi)\n\nTableau.vertical2(c(\"AnnÃ©e\", \"Cumuls des NBI\", \"Montants versÃ©s (a)\", \"Point d'INM apparent\", \"Point d'INM moyen\", \"ContrÃ´le\"), \n                  AnnÃ©e, \n                  cumul.annuel.indiciaire,\n                  cumul.annuel.montants,\n                  a <- cumul.annuel.montants/cumul.annuel.indiciaire,\n                  b <- PointMensuelIMMoyen[AnnÃ©e - 2007],\n                  ifelse(abs(b - a) > 0.3, \"Rouge\", ifelse(abs(b - a) > 0.15, \"Orange\", \"Vert\")))\n#'\n#'*(a) Hors rappels sur rÃ©munÃ©rations*   \n#'\n\ndetach(cumuls.nbi)\n\n#### 5.2 VACATIONS ####\n#'   \n#'[Lien vers la base de donnÃ©es des cumuls annuels de NBI](Bases/Fiabilite/cumuls.nbi.csv)   \n#'   \n\n#'  \n#'## `r chapitre`.2 ContrÃ´le des vacations horaires pour les fonctionnaires      \n\n# Vacations et statut de fonctionnaire\n\n#'Les fonctionnaires peuvent effectuer des vacations horaires pour leur propre employeur Ã  condition de bÃ©nÃ©ficier d'une autorisation\n#'de cumul d'activitÃ© accessoire et que les activitÃ©s concernÃ©es ne fassent pas partie du service normal. Les cumuls dÃ©tectÃ©s ci-dessous\n#'se limitent aux cas de vacations horaires dÃ©tectÃ©es. L'existence des piÃ¨ces justificatives pourra Ãªtre recherchÃ©e.\n\n# ----- Trouver, pour toutes les lignes de paie non-charges, une indication de proportionnalitÃ© horaire explicite\n#       et retenir les variables de calcul du montant et du statut pour les mois concernÃ©s par l'existence d'au moins\n#       une de ces lignes horaires, assimilÃ©e Ã  un paiement de vacation.\n\n\nPaie_vac <- Paie[Type %chin% c(\"T\", \"I\", \"R\", \"IR\", \"S\"),\n                   .(indic_hor = any(grepl(\"HOR\", LibellÃ©, ignore.case = TRUE)), Nom, Statut, Code, LibellÃ©, Type, Taux, Nb.UnitÃ©, Montant),\n                   by=.(Matricule, AnnÃ©e, Mois)\n                 ][indic_hor == TRUE,\n                 ][ , indic_hor := NULL]\n\n\n# ----- Produire la liste de ces libellÃ©s horaires\n\nlibellÃ©s.horaires <- unique(Paie_vac[grepl(\"HOR\", LibellÃ©, ignore.case = TRUE) == TRUE, LibellÃ©])\n\n# ----- VÃ©rifier si des fonctionnaires titulaires ou stagiaires bÃ©nÃ©ficient de vacations horaires et donner les caractÃ©ristiques\n\nPaie_vac_fonct <- Paie_vac[Statut %chin% c(\"TITULAIRE\", \"STAGIAIRE\"), \n                                               .(Nom, Statut, Code, LibellÃ©, Type, Taux, Nb.UnitÃ©, Montant, Total.mensuel = sum(Montant, na.rm = TRUE)), by = .(Matricule, AnnÃ©e, Mois)]\n\nlignes.fonctionnaires.et.vacations <- Paie_vac_fonct[LibellÃ© %chin% libellÃ©s.horaires]\n\nmatricules.fonctionnaires.et.vacations <- unique(lignes.fonctionnaires.et.vacations[ , .(Matricule, Nom, Statut)], by = NULL)\nnombre.fonctionnaires.et.vacations <- length(matricules.fonctionnaires.et.vacations[[1]])\n\nif (nombre.fonctionnaires.et.vacations > 0) {\n  cat(\"Il y a \",\n      FR(nombre.fonctionnaires.et.vacations),\n      \"fonctionnaire(s) effectuant des vacations pour son propre Ã©tablissement. Les bulletins concernÃ©s sont donnÃ©s en lien.\" )\n}  else  {\n  cat(\"Pas de vacation dÃ©tectÃ©e.\")\n}\n\n#'[Matricules des fonctionnaires concernÃ©s](Bases/Reglementation/matricules.fonctionnaires.et.vacations.csv)       \n#'[Lien vers les vacations payÃ©es Ã  des fonctionnaires](Bases/Reglementation/lignes.fonctionnaires.et.vacations.csv)       \n#'[Lien vers les bulletins de paie correspondants](Bases/Reglementation/Paie_vac_fonct.csv)            \n\n####  5.3 CEV ####  \n  \n#'\n#'## `r chapitre`.3 ContrÃ´les sur les contractuels effectuant des vacations horaires    \n\n#+ tests-statutaires-vacations-ri\n\n#'Les vacataires rÃ©munÃ©rÃ©s Ã  la vacation horaire n'ont, en principe, pas accÃ¨s au rÃ©gime indemnitaire dont bÃ©nÃ©ficient les titulaires et non-titulaires \n#'sauf si l'assemblÃ©e dÃ©libÃ©rante a explicitement prÃ©vu de dÃ©terminer le taux des vacations horaires par rÃ©fÃ©rence Ã  ces rÃ©gimes.\n#'Les vacataires bÃ©nÃ©ficiant d'un rÃ©gime indemnitaire de ce type perÃ§oivent des lignes de rÃ©munÃ©ration indemnitaires \n#'identifiÃ©es en base de paye (*catÃ©gorie \"Indemnite\" des bases XML et type \"I\" des bases CSV*).      \n#'L'existence et l'applicabilitÃ© de la dÃ©libÃ©ration correspondante pourra Ãªtre recherchÃ©e.     \n#'Les vacations effectuÃ©es par des contractuels de l'Ã©tablissement sur autorisation de cumul d'activitÃ© accessoire doivent\n#'avoir obtenu cette autorisation. Le rÃ©gime indemnitaire dont ils bÃ©nÃ©ficient pour leur activitÃ© principale ne s'Ã©tend pas de plein droit\n#'Ã  l'activitÃ© accessoire, en l'absence de dÃ©libÃ©ration le prÃ©voyant au titre de rÃ©fÃ©rence de calcul.\n\n  Paie_vac_contr <- Paie_vac[Statut %chin% c(\"NON_TITULAIRE\",  \"AUTRE_STATUT\")]\n                                           \n  matricules.contractuels.et.vacations <- unique(Paie_vac_contr[ , .(Matricule, Nom, Statut)], by=NULL)\n\n  nombre.contractuels.et.vacations     <- nrow(matricules.contractuels.et.vacations)\n    \n  RI.et.vacations         <- data.frame(NULL)\n\n  if (nombre.contractuels.et.vacations) \n  {\n     RI.et.vacations <- Paie_vac_contr[Type == \"I\"]\n  }\n\n  nombre.Lignes.paie.RI.et.vacations           <- nrow(RI.et.vacations)\n\n#'\n#'**Contractuels effectuant des vacations horaires (CEV)**\n#'\n\n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n  \nif (exists(\"nombre.contractuels.et.vacations\")) {\n  \n  Tableau(c(\"Nombre de CEV\",\n            \"Nombre de lignes indemnitaires payÃ©es\"),\n            nombre.contractuels.et.vacations,\n            nombre.Lignes.paie.RI.et.vacations)\n}\n  \n#'  \n#'[Lien vers les matricules des vacataires](Bases/Reglementation/matricules.contractuels.et.vacations.csv)   \n#'[Lien vers la lignes indemnitaires Ã  vÃ©rifier](Bases/Reglementation/RI.et.vacations.csv)    \n#'[Lien vers les bulletins de paye correspondants](Bases/Reglementation/Paie_vac_contr.csv)   \n#'    \n\n#'Les contractuels vacataires rÃ©munÃ©rÃ©s sur prestation horaire n'ont pas accÃ¨s au SFT ni Ã  l'indemnitÃ© de rÃ©sidence, contrairement aux contractuels\n#'de droit public dont les rÃ©munÃ©rations sont calculÃ©es sur une base indiciaire. \n#'Les non-titulaires sur contrat effectuant des vacations Ã  titre accessoire pour leur propre employeur ne peuvent bÃ©nÃ©ficier de paiements\n#'complÃ©mentaires de SFT ou d'indemnitÃ© de rÃ©sidence au titre de ces activitÃ©s accessoires.     \n  \n  essayer({Paie_vac_sft_ir <- Paie_vac[! Statut %chin% c(\"TITULAIRE\", \"STAGIAIRE\"), \n                                 indic_s := any(Type %chin% c(\"IR\", \"S\")),\n                                 by = .(Matricule, AnnÃ©e, Mois)\n                             ][indic_s == TRUE,\n                             ][ ,indic_s := NULL]\n  \n  SFT_IR.et.vacations <- Paie_vac_sft_ir[Type %chin% c(\"IR\", \"S\")]\n  \n  matricules.SFT_IR.et.vacations <- unique(SFT_IR.et.vacations[ , .(Matricule, Nom, Statut)], by=NULL)\n  \n  nombre.SFT_IR.et.vacations     <- nrow(matricules.SFT_IR.et.vacations)\n  }, \"Les tests sur les CEV et les versements de SFT ou d'IR n'ont pas Ã©tÃ© rÃ©alisÃ©s.\")\n  \n#'\n#'**CEV percevant le supplÃ©ment familial de traitement ou l'indemnitÃ© de rÃ©sidence**      \n#'\n  \n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n  \n  if (exists(\"nombre.SFT_IR.et.vacations\")) {\n    \n    Tableau(c(\"Nombre d'agents concernÃ©s\",\n              \"Nombre de lignes de paye SFT/IR\"),\n            nombre.SFT_IR.et.vacations,\n            nrow(SFT_IR.et.vacations))\n  }\n  \n#'  \n#'[Lien vers les matricules concernÃ©s](Bases/Reglementation/matricules.SFT_IR.et.vacations.csv)     \n#'[Lien vers les lignes SFT/IR Ã  vÃ©rifier](Bases/Reglementation/SFT_IR.et.vacations.csv)   \n#'[Lien vers les bulletins de paye correspondants](Bases/Reglementation/Paie_vac_sft_ir.csv)    \n#'   \n  \n#### 5.4 IAT/IFTS ####  \n  \n#'\n#'## `r chapitre`.4 ContrÃ´le sur les indemnitÃ©s IAT et IFTS      \n\n#+ IAT-et-IFTS\n\nrÃ©sultat.ifts.manquant <- FALSE\nrÃ©sultat.iat.manquant  <- FALSE\n\nPaie_I <- Paie[Type == \"I\", .(Nom, Matricule, AnnÃ©e, Mois, Code, LibellÃ©, Montant, Type, Emploi, Grade, Indice, Statut, CatÃ©gorie)]\n\nPaie_I <- Paie_I[ , `:=`(ifts.logical = grepl(expression.rÃ©g.ifts, LibellÃ©, ignore.case=TRUE, perl=TRUE),\n                         iat.logical  = grepl(expression.rÃ©g.iat, LibellÃ©, ignore.case=TRUE, perl=TRUE))]\n\ncodes.ifts  <- list(\"codes IFTS\" = unique(Paie_I[ifts.logical == TRUE][ , Code]))\n\nif (length(codes.ifts) == 0) {\n  cat(\"Il n'a pas Ã©tÃ© possible d'identifier les IFTS par expression rÃ©guliÃ¨re.\")\n  rÃ©sultat.ifts.manquant <- TRUE\n}\n\nif (! any(Paie_I$iat.logical)) {\n  cat(\"Il n'a pas Ã©tÃ© possible d'identifier les IAT par expression rÃ©guliÃ¨re.\")\n  rÃ©sultat.iat.manquant <- TRUE\n}\n\nnombre.agents.cumulant.iat.ifts <- 0\n\nif (! rÃ©sultat.ifts.manquant && ! rÃ©sultat.iat.manquant) {\n  \n  Paie_I[ , cumul.iat.ifts := any(ifts.logical) & any(iat.logical), by = \"Matricule,AnnÃ©e,Mois\"]\n  \n  # on exclut les rappels !\n  \n  personnels.iat.ifts <- Paie_I[cumul.iat.ifts == TRUE & (ifts.logical == TRUE | iat.logical == TRUE)]\n  \n  nombre.mois.cumuls <- uniqueN(personnels.iat.ifts[ , .(Matricule, AnnÃ©e, Mois)], \n                                    by = NULL)\n  \n  nombre.agents.cumulant.iat.ifts <- uniqueN(personnels.iat.ifts$Matricule)\n  \n  personnels.iat.ifts <- personnels.iat.ifts[order(AnnÃ©e, Mois, Matricule)]\n}\n\n#'\n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'      \nif (nombre.agents.cumulant.iat.ifts) {\n  if (length(codes.ifts) < 10) {\n    Tableau(c(\"Codes IFTS\", \" \"),\n            sep.milliers = \"\",\n            paste(unlist(codes.ifts), collapse=\" \"), \" \")\n  } else {\n    \n    cat (\"Nombre de personnels percevant IAT et IFTS : \", paste(unlist(codes.ifts), collapse=\" \"), \"\\n\")\n  }\n}\n\n# Pour de mystÃ©rieuses raisons liÃ©es Ã  Tableau() il faut rÃ©pÃ©ter la condition.\n\nif (nombre.agents.cumulant.iat.ifts) {\n  \n  Tableau(c(\"Nombre de personnels percevant IAT et IFTS\", \" \"), nombre.agents.cumulant.iat.ifts, \" \")\n       \n} else {\n  cat(\"Tests IAT/IFTS sans rÃ©sultat positif.\")\n}\n\n#'   \n#'[Codes IFTS retenus](Bases/Reglementation/codes.ifts.csv)   \n#'[Lien vers la base de donnÃ©es cumuls iat/ifts](Bases/Reglementation/personnels.iat.ifts.csv)    \n#'\n#'### ContrÃ´le sur les IFTS pour catÃ©gories B et contractuels\n\n#IFTS et IB >= 380 (IM >= 350)\n#'  \nif (! rÃ©sultat.ifts.manquant) {\n    lignes.ifts.anormales <- na.omit(Paie_I[Indice < 350\n                                          & CatÃ©gorie != \"A\"\n                                          & ifts.logical == TRUE,\n                                            c(clÃ©.fusion,\n                                              Ã©tiquette.annÃ©e,\n                                              \"Mois\",\n                                              \"Statut\",\n                                              \"Grade\",\n                                              \"CatÃ©gorie\",\n                                              Ã©tiquette.code,\n                                              Ã©tiquette.libellÃ©,\n                                              \"Indice\",\n                                              Ã©tiquette.montant), \n                                            with=FALSE])\n} else {\n\n    lignes.ifts.anormales <- NULL\n    cat(\"Il n'a pas Ã©tÃ© possible de dÃ©terminer les lignes IFTS anormales faute d'indentification des libellÃ©s IFTS.\")\n}\n#'  \nnombre.lignes.ifts.anormales <- nrow(lignes.ifts.anormales)\n\n#+ IFTS-et-non-tit\n\nifts.et.contractuel <- NULL \n\nif (! rÃ©sultat.ifts.manquant) {\n  \n  ifts.et.contractuel <- Paie_I[ Statut != \"TITULAIRE\"\n                              & Statut != \"STAGIAIRE\"\n                              & ifts.logical == TRUE,\n                               c(Ã©tiquette.matricule,\n                                 Ã©tiquette.annÃ©e,\n                                 \"Mois\",\n                                 \"Statut\",\n                                 \"CatÃ©gorie\",\n                                 Ã©tiquette.code,\n                                 Ã©tiquette.libellÃ©,\n                                 \"Indice\",\n                                 Ã©tiquette.montant),\n                               with=FALSE]\n  }\n\nnombre.lignes.ifts.et.contractuel <- nrow(ifts.et.contractuel)\n\n#'\n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n\nif (! rÃ©sultat.ifts.manquant) {\n   Tableau(c(\"Nombre de lignes de paie de contractuels percevant des IFTS\", \"Nombre de lignes IFTS pour IB < 380\"), nombre.lignes.ifts.et.contractuel, nombre.lignes.ifts.anormales)\n}\n\n#'\n#'[Lien vers la base de donnÃ©es Lignes IFTS pour contractuels](Bases/Reglementation/ifts.et.contractuel.csv)    \n#'[Lien vers la base de donnÃ©es Lignes IFTS pour IB < 380](Bases/Reglementation/lignes.ifts.anormales.csv)     \n#'\n#'**Nota :**\n#'IB < 380 : fonctionnaire percevant un indice brut infÃ©rieur Ã  380\n#'\n\n#### 5.5 PFR ####\n\n#'\n#'## `r chapitre`.5 ContrÃ´le de la prime de fonctions et de rÃ©sultats (PFR)   \n#'   \n\n#+ pfr\n\nrÃ©sultat.pfr.manquant <- FALSE\nnombre.agents.cumulant.pfr.ifts <- 0\n\n# L'expression rÃ©guliÃ¨re capte la PFR et la PR \n# Le cumul de la PR et de l'IFTS est rÃ©gulier, de mÃªme que celui de la PR et de la PFR\n# le cumul de la PFR et de l'IFTS est irrrÃ©gulier\n\nPaie_I[ , pfr.logical := grepl(expression.rÃ©g.pfr, LibellÃ©, ignore.case = TRUE, perl = TRUE)]\n\nPFR.non.catA <- Paie_I[CatÃ©gorie != \"A\", ][pfr.logical == TRUE]\n\nif ((N.PFR.non.catA <<- nrow(PFR.non.catA)) > 0) {\n  cat(N.PFR.non.catA, \"attributaires de la PFR ne sont pas identifiÃ©s en catÃ©gorie A.\")\n  kable(PFR.non.catA, align = 'r', row.names = FALSE)\n  \n} else {\n  cat(\"Tous les attributaires de la PFR sont identifiÃ©s en catÃ©gorie A.\")\n}\n\ncodes.pfr  <- list(\"codes PFR\" = unique(Paie_I[pfr.logical == TRUE, Code]))\n\nif (length(codes.pfr) == 0) {\n  cat(\"Il n'a pas Ã©tÃ© possible d'identifier la PFR par expression rÃ©guliÃ¨re.\")\n  rÃ©sultat.pfr.manquant <- TRUE\n}\n\nif (! rÃ©sultat.ifts.manquant && ! rÃ©sultat.pfr.manquant) {\n  \n  Paie_I[ , cumul.pfr.ifts := any(pfr.logical) & any(ifts.logical), \n            by=\"Matricule,AnnÃ©e,Mois\"]\n\n  # on exclut les rappels !\n  \n  personnels.pfr.ifts <- Paie_I[cumul.pfr.ifts == TRUE\n                               ][pfr.logical == TRUE | ifts.logical == TRUE, \n                                   .(Nom,\tMatricule,\tAnnÃ©e,\tMois,\tCode,\n                                     LibellÃ©,\tMontant,\tType,\tEmploi,\tGrade,\tIndice,\tStatut,\tCatÃ©gorie)]\n\n  nombre.mois.cumuls <- uniqueN(personnels.pfr.ifts[ , .(Matricule, AnnÃ©e, Mois)], by = NULL)\n  \n  nombre.agents.cumulant.pfr.ifts <- uniqueN(personnels.pfr.ifts$Matricule)\n  \n  personnels.pfr.ifts <- personnels.pfr.ifts[order(AnnÃ©e, Mois, Matricule)]\n  \n}\n\n#'\n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'      \nif (length(codes.pfr) < 6) {\n  Tableau(c(\"Codes PFR\", \"Agents cumulant PFR et IFTS\"),\n          sep.milliers = \"\",\n          paste(unlist(codes.pfr), collapse = \" \"),\n          nombre.agents.cumulant.pfr.ifts)\n} else {\n  \n  cat(\"Codes PFR : \", paste(unlist(codes.pfr), collapse = \" \"), \"\\n\")\n  \n}\n\nif (length(codes.pfr) > 5) {\n  Tableau(\"Agents cumulant PFR et IFTS\",\n          nombre.agents.cumulant.pfr.ifts)\n}\n\n#'   \n#'[Lien vers la base de donnÃ©es cumuls pfr/ifts](Bases/Reglementation/personnels.pfr.ifts.csv)    \n#'\n\n# Attention keyby = et pas seulement by = !\n\nbeneficiaires.PFR <- Paie_I[pfr.logical == TRUE \n                            | ifts.logical == TRUE][ , Attrib.PFR := any(pfr.logical),\n                                                      by= .(Matricule)\n                                                  ][Attrib.PFR == TRUE,\n                                                      .(Cumul.PFR.IFTS = sum(Montant, na.rm = TRUE),\n                                                        Nom = Nom[1],\n                                                        nb.mois = length(unique(Mois)),\n                                                        Grade = Grade[1]),\n                                                      keyby= .(Matricule, AnnÃ©e)]\n                        \nrm(Paie_I)\n\n# Plafonds annuels (plafonds mensuels reste Ã  implÃ©menter)\n# AG 58 800\n# ADTHC 55 200\n# ADT   49 800\n# D/ATP 25 800\n# SM/AT 20 100\n\n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()` : rappel des plafonds annuels de la PFR*   \n#'      \n  \nTableau(c(\"Adm. gÃ©nÃ©ral\", \"Adm. HC\", \"Adm.\", \"Direct./AttachÃ© princ.\", \"Secr. mairie/AttachÃ©\"),\n        sapply(PFR.plafonds <<- list( admin.g   = 58800, \n                                      admin.hc  = 55200,\n                                      admin     = 49800,\n                                      attachÃ©.p = 25800,\n                                      attachÃ©   = 20100), \n               function(x) formatC(x, format = \"fg\", big.mark = \" \")))\n   \n  \ne <- c(expression.rÃ©g.admin.g, expression.rÃ©g.admin.hc, expression.rÃ©g.admin, expression.rÃ©g.attachÃ©.p, expression.rÃ©g.attachÃ©)\n  \ntest.PFR <- function(i, grade, cumul) { grepl(e[i], grade, perl = TRUE, ignore.case = TRUE) & (cumul > PFR.plafonds[[i]]) }\n  test.PFR.all <- function(grade, cumul) any(sapply(1:length(e), function(i) test.PFR(i, grade, cumul)))\n  \n  dÃ©passements.PFR.boolean <- mapply(test.PFR.all, beneficiaires.PFR$Grade, beneficiaires.PFR$Cumul.PFR.IFTS, USE.NAMES=FALSE)\n\n  dÃ©passements.PFR.plafonds <- data.frame()\n  \n  if (length(dÃ©passements.PFR.boolean) > 0)\n    dÃ©passements.PFR.plafonds <- beneficiaires.PFR[dÃ©passements.PFR.boolean]\n  \n  if (nrow(dÃ©passements.PFR.plafonds) > 0) {\n    \n    cat(\"\\nLes plafonds annuels de la PFR sont dÃ©passÃ©s pour \", nrow(dÃ©passements.PFR.plafonds), \" cumuls annuels.\\n\")\n    kable(dÃ©passements.PFR.plafonds, align = 'r', row.names = FALSE)\n    \n  } else {\n    \n    cat(\"\\nLes plafonds annuels de la PFR de sont pas dÃ©passÃ©s.\\n\")\n  }\n    \n  beneficiaires.PFR.Variation <- beneficiaires.PFR[ , \n                                    { \n                                       L <- length(AnnÃ©e)\n                                       q <- Cumul.PFR.IFTS[L]/Cumul.PFR.IFTS[1] * nb.mois[1]/nb.mois[L]                   \n                                       .(AnnÃ©es = paste(AnnÃ©e, collapse = \", \"), \n                                         `Variation (%)` = round((q - 1) * 100, 1),\n                                         `Moyenne gÃ©omÃ©trique annuelle(%)` = round((q^(1/(L - 1)) - 1) * 100, 1)) \n                                    }, by=\"Nom,Matricule\"]\n  \n  beneficiaires.PFR.Variation <- beneficiaires.PFR.Variation[`Variation (%)` != 0.00]\n\n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`* : Valeurs de l'agrÃ©gat (PFR ou IFTS) pour les bÃ©nÃ©ficiaires de la PFR   \n#'          \n\n  if (nrow(beneficiaires.PFR)) {\n    beneficiaires.PFR$Cumul.PFR.IFTS <- formatC(beneficiaires.PFR$Cumul.PFR.IFTS, big.mark = \" \", format=\"fg\")\n    setnames(beneficiaires.PFR, \"Cumul.PFR.IFTS\", \"Cumul PFR ou IFTS\")\n    kable(beneficiaires.PFR, align = 'r', row.names = FALSE)\n  } else {\n    cat(\"\\nAucun bÃ©nÃ©ficiaire de la PFR dÃ©tectÃ©.\\n\")\n  }\n  \n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`* : Variations de l'agrÃ©gat (PFR ou IFTS) pour les bÃ©nÃ©ficiaires de la PFR\n#'          \n  if (nrow(beneficiaires.PFR.Variation)) {\n    kable(beneficiaires.PFR.Variation, align = 'r', row.names = FALSE)\n  } else {\n    cat(\"\\nAucun tableau de variation.\\n\")\n  }\n  \n        \n\n#'   \n#'[Lien vers la base de donnÃ©es agrÃ©gat PFR-IFTS](Bases/Remunerations/beneficiaires.PFR.csv)    \n#'\n#'   \n#'[Lien vers la base de donnÃ©es variations agrÃ©gat PFR-IFTS](Bases/Remunerations/beneficiaires.PFR.Variation.csv)    \n#'\n\n  \n#### 5.6 HEURES SUP ####\n#'\n#'## `r chapitre`.6 ContrÃ´le sur les heures supplÃ©mentaires\n\n# Sont repÃ©rÃ©es comme heures supplÃ©mentaires ou complÃ©mentaires les heures dont le libellÃ© obÃ©issent Ã \n# l'expression rÃ©guliÃ¨re expression.rÃ©g.heures.sup donnÃ©e par le fichier prologue.R\n\n# VÃ©rification des seuils annuels :\n\nDepassement.seuil.180h <- unique(Bulletins.paie[cumHSup > 180, \n                                                  .(Matricule, \n                                                    AnnÃ©e,\n                                                    \"Cumul heures sup\" = cumHSup,\n                                                    Emploi,\n                                                    Grade,\n                                                    Service)])\n  \nnb.agents.dÃ©passement  <- uniqueN(Depassement.seuil.180h$Matricule)\n\nif  (nb.agents.dÃ©passement)  {\n  \n  cat(\"Le seuil de 180 heures supplÃ©mentaires maximum est dÃ©passÃ© par \", \n      FR(nb.agents.dÃ©passement), \" agents.\\n\")\n  \n  DÃ©passement.seuil.220h <- Depassement.seuil.180h[\"Cumul heures sup\" > 220]\n  nb.agents.dÃ©passement.220h <- uniqueN(DÃ©passement.seuil.220h$Matricule) \n  \n  if  (nb.agents.dÃ©passement.220h) cat(\" Le seuil de 220 heures supplÃ©mentaires maximum est dÃ©passÃ© par \",\n                                       FR(nb.agents.dÃ©passement.220h), \n                                       \" agents.\\n\") \n}\n\ncolonnes <- c(Ã©tiquette.matricule,\n              Ã©tiquette.annÃ©e,\n              \"Mois\",\n              \"Statut\",\n              \"LibellÃ©\",\n              Ã©tiquette.code,\n              \"Heures\",\n              \"Heures.Sup.\",\n              \"Base\",\n              \"Taux\",\n              \"Montant\",\n              \"Type\",\n              \"Service\",\n              \"Emploi\",\n              \"Grade\")\n\nHS.sup.25 <- Paie[Heures.Sup. > 25, colonnes, with=FALSE]\n\ntraitement.indiciaire.mensuel <- HS.sup.25[Type == \"T\", .(`Traitement indiciaire mensuel` = sum(Montant, na.rm = TRUE)), \n                                                          by=\"Matricule,AnnÃ©e,Mois\"]\n\nHS.sup.25 <-  HS.sup.25[Type %chin% c(\"I\", \"T\", \"R\", \"A\")\n                          & ! grepl(\".*SMIC.*\",\n                                    LibellÃ©, \n                                    ignore.case = TRUE) == TRUE\n                          & grepl(expression.rÃ©g.heures.sup,\n                                  LibellÃ©,\n                                  ignore.case = TRUE,\n                                  perl=TRUE) == TRUE]\n\nHS.sup.25 <- merge(HS.sup.25, traitement.indiciaire.mensuel, by=c(\"Matricule\", \"AnnÃ©e\", \"Mois\"), all = TRUE)\n\nHS.sup.25 <- merge(HS.sup.25, Analyse.remunerations[ , .(Matricule, AnnÃ©e, traitement.indiciaire)], \n                                                       by=c(\"Matricule\", \"AnnÃ©e\"))\n\nHS.sup.25 <- unique(HS.sup.25, by=NULL)\n\nsetnames(HS.sup.25, \"traitement.indiciaire\", \"Traitement indiciaire annuel\")\n\nnombre.Lignes.paie.HS.sup.25 <- nrow(HS.sup.25)\n\nihts.anormales <- Paie[grepl(expression.rÃ©g.heures.sup,\n                                    LibellÃ©,\n                                    ignore.case = TRUE,\n                                    perl=TRUE) == TRUE\n                       & Montant != 0\n                       & CatÃ©gorie == \"A\"\n                       & Type %chin% c(\"R\", \"I\", \"T\", \"A\"),\n                       .(Matricule, AnnÃ©e, Mois, Statut, Grade, Heures.Sup., LibellÃ©, Code, Type, Montant)]\n\nnombre.ihts.anormales <- nrow(ihts.anormales) \n\nif (! is.null(HS.sup.25)) message(\"Heures sup controlÃ©es\")\n#'\n#'  \n#'&nbsp;*Tableau `r incrÃ©ment()`*   \n#'    \n\nTableau(c(\"Nombre de lignes HS en excÃ¨s\", \"Nombre de lignes IHTS anormales\"),\n           nombre.Lignes.paie.HS.sup.25,   nombre.ihts.anormales)\n\n#'\n#'[Lien vers la base de donnÃ©es Heures supplÃ©mentaires en excÃ¨s du seuil de 25h/mois](Bases/Reglementation/HS.sup.25.csv)     \n#'[Lien vers la base de donnÃ©es cumuls en excÃ¨s des seuils annuels](Bases/Reglementation/Depassement.seuil.180h.csv)    \n#'[Lien vers la base de donnÃ©es IHTS anormales](Bases/Reglementation/ihts.anormales.csv)      \n#'\n#'**Nota :**   \n#'HS en excÃ¨s : au-delÃ  de 25 heures par mois     \n#'IHTS anormales : attribuÃ©es Ã  des fonctionnaires ou non-titulaires de catÃ©gorie A ou assimilÃ©s.     \n\n#### 5.7 ELUS ####\n\n#' \n#'## `r chapitre`.7 ContrÃ´le sur les indemnitÃ©s des Ã©lus\n#'   \n\nremunerations.elu <- Analyse.remunerations[ indemnitÃ©s.Ã©lu > minimum.positif,\n                                            c(clÃ©.fusion,\n                                              \"AnnÃ©e\",\n                                              \"Emploi\",\n                                              \"indemnitÃ©s.Ã©lu\",\n                                              \"autres.rÃ©munÃ©rations\",\n                                              \"rÃ©munÃ©ration.indemnitaire.imposable\"),\n                                            with=FALSE ]\n\nremunerations.elu[ , rÃ©munÃ©ration.indemnitaire.imposable := indemnitÃ©s.Ã©lu +  rÃ©munÃ©ration.indemnitaire.imposable]\n\nremunerations.elu <- merge(unique(matricules[ , .(Nom,  Matricule)], by=NULL),\n                             remunerations.elu,\n                             by = Ã©tiquette.matricule,\n                             all.y = TRUE,\n                             all.x = FALSE)\n\nnames(remunerations.elu) <- c(union(clÃ©.fusion, \"Nom\"),\n                              \"AnnÃ©e\",\n                              \"Emploi\",\n                              \"IndemnitÃ©s \",\n                              \"Autres \",\n                              \"Total \")\n\nremunerations.elu <- na.omit(remunerations.elu)\n\n#'   \nif (gÃ©nÃ©rer.table.Ã©lus)   {\n  \n    if (nrow(remunerations.elu) > 0) {\n      \n      kable(remunerations.elu, row.names = FALSE)\n      \n    } else {\n  \n      cat(\"Tableau des indemnitÃ©s d'Ã©lu : pas de donnÃ©es.\")\n    } \n} else {\n\n   cat(\"Tableau des indemnitÃ©s d'Ã©lu : non gÃ©nÃ©rÃ©e.\")\n}\n\n\n#'[Lien vers la base de donnÃ©es RÃ©munÃ©rations des Ã©lus](Bases/Reglementation/remunerations.elu.csv)\n#'\n\n#### 5.8 COMPTE DE GESTION ####\n\n#'## `r chapitre`.8 Lien avec le compte de gestion\n \n\ncumul.lignes.paie <- Paie[Type %chin% c(\"T\", \"I\", \"R\", \"IR\", \"S\", \"A\", \"AC\") , \n                        .(Total = sum(Montant, na.rm = TRUE)), keyby=\"AnnÃ©e,Type,LibellÃ©,Code\"]\n\ncumul.lignes.paie <- cumul.lignes.paie[Total != 0]\n\ncumul.lignes.paie$Type <- remplacer_type(cumul.lignes.paie$Type)\n                   \ncumul.lignes.paie[ , Total2  := formatC(Total, big.mark = \" \", format = \"f\", decimal.mark = \",\", digits = 2)]\n\n\ncumul.total.lignes.paie <- cumul.lignes.paie[ , .(`Cumul annuel`= formatC(sum(Total, na.rm = TRUE), big.mark = \" \", format = \"f\", decimal.mark = \",\", digits = 2)), \n                                                keyby = \"AnnÃ©e,Type\"]\n\nsetnames(cumul.lignes.paie[ , Total := NULL], \"Total2\", \"Total\")\n\nL <- split(cumul.lignes.paie, cumul.lignes.paie$AnnÃ©e)\n\n  \n\nif (afficher.cumuls.dÃ©taillÃ©s.lignes.paie) {\n  for (i in 1:durÃ©e.sous.revue) {\n    cat(\"\\nTableau \", incrÃ©ment(), \" AnnÃ©e \", dÃ©but.pÃ©riode.sous.revue + i - 1)\n    print(kable(L[[i]][, .(CatÃ©gorie = Type, Code, LibellÃ©, Total)], row.names = FALSE, align = 'r'))\n    incrÃ©ment()\n  }\n}\n\nL <- split(cumul.total.lignes.paie, cumul.total.lignes.paie$AnnÃ©e)\n\n#'  \n#'Cumul des lignes de paie par exercice et catÃ©gorie de ligne de paie   \n#'  \n\n\nfor (i in 1:durÃ©e.sous.revue) {\n  cat(\"\\nTableau \", incrÃ©ment(), \" AnnÃ©e \", dÃ©but.pÃ©riode.sous.revue + i - 1)\n  print(kable(L[[i]][, .(CatÃ©gorie = Type, `Cumul annuel`)], row.names = FALSE, align = 'r'))\n\n}\n\nrm(L)\n\n#'  \n#'[Lien vers la base dÃ©taillÃ©e des cumuls des lignes de paie](Bases/Reglementation/cumul.lignes.paie.csv)\n#'  \n#'[Lien vers la base agrÃ©gÃ©e des cumuls des lignes de paie](Bases/Reglementation/cumul.total.lignes.paie.csv)\n#'  \n\n#'  \n#'*Avertissement : les rappels comprennent Ã©galement les rappels de cotisations et dÃ©ductions diverses.*    \n#'   \n\n#### 5.9 SFT ####\n\n#'\n#'## `r chapitre`.9 ContrÃ´le du supplÃ©ment familial de traitement   \n#'  \n\nif (! utiliser.cplusplus.sft)\n{\n   source(\"sft.R\", encoding = encodage.code.source)\n   sft <- sft_R\n   \n} else {\n  \n  library(sft)\n  sft <- function(Nb.Enfants,\n                  Indice,\n                  Echelon,\n                  NBI,\n                  Temps.de.travail,\n                  AnnÃ©e,\n                  Mois) .Call(\"sft_C\",\n                              Nb.Enfants,\n                              Indice,\n                              Echelon,\n                              NBI,\n                              Temps.de.travail,\n                              AnnÃ©e,\n                              Mois,\n                              PACKAGE=\"sft\")\n\n}\n\nPaie.sans.enfant.reduit <- Paie[is.na(Nb.Enfants) | Nb.Enfants == 0 , .(SFT.versÃ© = sum(Montant[Type == \"S\"], na.rm = TRUE)), keyby = \"Matricule,AnnÃ©e,Mois\"] \n\nPaie.sans.enfant.reduit <- Paie.sans.enfant.reduit[SFT.versÃ© > 0, ]\n\nnb.Ã©cart.paiements.sft.sans.enfant <- nrow(Paie.sans.enfant.reduit)\n\nif (nb.Ã©cart.paiements.sft.sans.enfant > 0){\n  \n  cat(\"\\nPour les agents n'ayant pas d'enfant signalÃ© en base, il a Ã©tÃ© dÃ©tectÃ© \",\n      nb.Ã©cart.paiements.sft.sans.enfant,\n      \" bulletin\", ifelse(nb.Ã©cart.paiements.sft.sans.enfant == 1, \"\", \"s\"),\n      \" de paie prÃ©sentant un paiement du SFT apparemment anormal.\\n\", sep=\"\")  \n  \n  if (afficher.table.Ã©carts.sft)\n    kable(Paie.sans.enfant.reduit, row.names = FALSE, align = 'c')\n  \n} else {\n  \n  cat(\"\\nPour les agents n'ayant pas d'enfant signalÃ© en base, il n'a Ã©tÃ© dÃ©tectÃ© aucun paiement de SFT.\\n\")\n  \n}\n\n#'  \n#'[Lien vers la base des paiements de SFT Ã  agents sans enfant signalÃ©](Bases/Reglementation/Paie.sans.enfant.reduit.csv)\n#'  \n\nif (!intÃ©grer.Ã©chelon) {\n  \n  cat(\"Le contrÃ´le du SFT pour les fonctionnaires hors Ã©chelle indiciaire requiert l'exportation de la variable Ã©chelon dans la base. Ce contrÃ´le n'a pas pu Ãªtre effectuÃ©.\")\n}\n\n  if (!intÃ©grer.Ã©chelon) {\n    \n    # pseudo Ã©chelon\n    Paie.enfants.rÃ©duit <- Paie[!is.na(Nb.Enfants) & Nb.Enfants > 0 & !is.na(Indice) & !is.na(Heures),\n                                .(SFT.versÃ© = sum(Montant[Type == \"S\"], na.rm = TRUE), \n                                  #Traitement = sum(Montant[Type == \"T\"], na.rm = TRUE),\n                                  Temps.de.travail = Temps.de.travail[1],\n                                  Indice = Indice[1],\n                                  Echelon = \"\",\n                                  NBI = NBI[1],\n                                  Nb.Enfants = Nb.Enfants[1]),\n                                keyby=\"Matricule,AnnÃ©e,Mois\"]\n    \n    \n  } else {\n    \n    Paie.enfants.rÃ©duit <- Paie[!is.na(Nb.Enfants) & Nb.Enfants > 0 & !is.na(Indice) & !is.na(Heures),\n                                .(SFT.versÃ© = sum(Montant[Type == \"S\"], na.rm = TRUE), \n                                  #Traitement = sum(Montant[Type == \"T\"], na.rm = TRUE),\n                                  Temps.de.travail = Temps.de.travail[1],\n                                  Indice = Indice[1],\n                                  Echelon = Echelon[1],\n                                  NBI = NBI[1],\n                                  Nb.Enfants = Nb.Enfants[1]),\n                                keyby=\"Matricule,AnnÃ©e,Mois\"]\n    \n  }\n  \n  SFT.controle <- with(Paie.enfants.rÃ©duit, \n                         mapply(sft, Nb.Enfants, Indice, Echelon, NBI, Temps.de.travail, AnnÃ©e, Mois, USE.NAMES = FALSE))\n  \n  Paie.enfants.rÃ©duit <- cbind(Paie.enfants.rÃ©duit, SFT.controle)\n  \n  Paie.enfants.rÃ©duit[ , delta.SFT := SFT.versÃ© - SFT.controle]\n\n\n## Attention ne pas intÃ©grer au sein d'un mÃªme `:=`(...) deux dÃ©finitions en corÃ©fÃ©rence avec if ... else \n# ou alors utiliser ifelse()  [bug de data.table]\n\n# Paie.enfants.rÃ©duit[ , ecart := if (SFT.controle > 1) delta / SFT.controle else NA]\n\n# On accepte un tolÃ©rance fixÃ©e dans prologue.R Ã  tolÃ©rance.sft <- 1 euro\n\n  controle.sft <- Paie.enfants.rÃ©duit[delta.SFT > tolÃ©rance.sft, \n                                        .(delta.SFT = round(delta.SFT, 2),\n                                         SFT.versÃ©,\n                                         SFT.controle = round(SFT.controle, 2),\n                                         Matricule, \n                                         AnnÃ©e,\n                                         Mois,\n                                         Indice,\n                                         NBI,\n                                         Temps.de.travail,\n                                         Nb.Enfants)]\n\n  nb.Ã©cart.paiements.sft <- nrow(controle.sft)\n  \n  if (nb.Ã©cart.paiements.sft) setorder(controle.sft, -delta.SFT, Matricule, AnnÃ©e, Mois)\n  \n  if (nb.Ã©cart.paiements.sft > 0){\n      \n    cat(\"\\nPour les agents ayant au moins un enfant, il a Ã©tÃ© dÃ©tectÃ© \",\n        nb.Ã©cart.paiements.sft,\n        \" bulletin\", ifelse(nb.Ã©cart.paiements.sft == 1, \"\", \"s\"),\n        \" de paie prÃ©sentant un Ã©cart de paiement du SFT supÃ©rieur Ã  \", tolÃ©rance.sft, \" euro.\\n\", sep=\"\")  \n  \n    if (afficher.table.Ã©carts.sft)\n       kable(controle.sft, row.names = FALSE, align = 'c')\n      \n  } else {\n    \n    cat(\"\\nPour les agents ayant au moins un enfant, il n'a Ã©tÃ© dÃ©tectÃ© aucun Ã©cart de paiement sur SFT supÃ©rieur Ã  \", tolÃ©rance.sft, \" euro.\\n\")\n        \n  }\n\n#'  \n#'[Lien vers la base des Ã©carts de paiement sur SFT](Bases/Reglementation/controle.sft.csv)\n#'  \n\nmessage(\"Analyse du SFT\")\n\n# data.table here overallocates memory hence inefficient !\n# Bulletins.paie[Nb.Enfants > 0 , SFT.controle := sft(Nb.Enfants, Indice, Heures, AnnÃ©e, Mois)]\n       \n#### ANNEXE ####\n\nnewpage()\n\n#'# Annexe       \n\n#'   \n#'## ContrÃ´le des Ã©vÃ©nements de paye   \n#'      \n\nE <- Bulletins.paie[ , unique(Evenement)]\nEvenements <- unique(trimws(regmatches(E, regexpr(\"[^-]*\", E, perl=TRUE))))\nEvenements2 <- unique(trimws(gsub(\"-\", \"\", \n                                  regmatches(E, regexpr(\"- .*\", E, perl=TRUE)))))\n\nEvenements <- sort(c(Evenements, Evenements2))\nrm(E, Evenements2)\nif (Evenements[1] == \"\") Evenements <- Evenements[-1] \nEvenements <- data.table(EvÃ©nements = Evenements)\n\nif (afficher.table.Ã©vÃ©nements) {\n    kable(Evenements)\n}\n\nEvenements.ind <- setkey(Bulletins.paie[Evenement != \"\", \n                                       .(Evenement,\n                                         Matricule,\n                                         Nom,\n                                         PrÃ©nom,\n                                         AnnÃ©e,\n                                         Mois,\n                                         Grade,\n                                         Emploi,\n                                         Service)],\n                                       Evenement,\n                                       Matricule,\n                                       AnnÃ©e,\n                                       Mois)\n\nEvenements.mat <- setcolorder(setkey(copy(Evenements.ind), \n                                    Matricule,\n                                    AnnÃ©e,\n                                    Mois,\n                                    Evenement),\n                             c(\"Matricule\",\n                               \"Nom\",\n                               \"PrÃ©nom\",\n                               \"AnnÃ©e\",\n                               \"Mois\",\n                               \"Evenement\",\n                               \"Grade\",\n                               \"Emploi\",\n                               \"Service\"))\n\n#'  \n#'[Lien vers la nomenclature des Ã©vÃ©nements de paye](Bases/Fiabilite/Evenements.csv)     \n#'[Tri par type d'Ã©vement, agent, annÃ©e, mois](Bases/Fiabilite/Evenements.ind.csv)     \n#'[Tri par agent, annÃ©e, mois, Ã©venement](Bases/Fiabilite/Evenements.mat.csv)     \n#'  \n\n#'  \n#'## Codes et libellÃ©s de paye   \n#'         \n\ncode.libelle <- unique(Paie[Montant != 0, .(Code, LibellÃ©), by = \"Type\"], by = NULL)\ncode.libelle$Type <- remplacer_type(code.libelle$Type)\n\nsetcolorder(code.libelle, c(\"Code\", \"LibellÃ©\", \"Type\"))\nif (afficher.table.codes) {\n   kable(code.libelle, align=\"c\")\n}\n\n#'Certains libellÃ©s ou codes de paye peuvent Ãªtre Ã©quivoques et entraÃ®ner des erreurs de requÃªte.       \n#'Les liens ci-aprÃ¨s donnent les codes correspondant Ã  au moins deux libellÃ©s distincts, les libellÃ©s correspondant Ã  au moins deux codes et les codes ou libellÃ©s correspondant Ã  au moins deux types de ligne de paye distincts.           \n#'L'Ã©quivocitÃ© des codes est particuliÃ¨rement prÃ©judiciable lorsque les libellÃ©s correspondent Ã  des types de ligne de paye distincts.    \n#'\ncl1 <- code.libelle[ , .(MultiplicitÃ© = .N, LibellÃ©, Type), by = \"Code\"][MultiplicitÃ© > 1]\ncl2 <- code.libelle[ , .(MultiplicitÃ© = .N,  Code, Type), by = \"LibellÃ©\"][MultiplicitÃ© > 1]\n\ncl3 <- unique(code.libelle[, .(Code, Type)], by = NULL)[ , .(MultiplicitÃ© = .N,  Type), by = \"Code\"][MultiplicitÃ© > 1]\ncl4 <- unique(code.libelle[, .(LibellÃ©, Type)], by = NULL)[ , .(MultiplicitÃ© = .N,  Type), by = \"LibellÃ©\"][MultiplicitÃ© > 1]\n\n#'   \n#'[Lien vers la table Codes/LibellÃ©s](Bases/Fiabilite/code.libelle.csv)       \n#'[Plusieurs libellÃ©s par code](Bases/Fiabilite/cl1.csv)   \n#'[Plusieurs codes par libellÃ©](Bases/Fiabilite/cl2.csv)   \n#'[Plusieurs types de ligne par code](Bases/Fiabilite/cl3.csv)   \n#'[Plusieurs types de ligne par libellÃ©](Bases/Fiabilite/cl4.csv)           \n#'   \n\n#'  \n#'## Doublons                \n#'\n\nif (Ã©liminer.duplications) {\n  if (aprÃ¨s.redressement != avant.redressement) {\n        \n    cat(\"Retraitement de la base de lignes de paie : \")\n  \n  } else {\n    cat(\"Aucune duplication de ligne de paie n'a Ã©tÃ© dÃ©tectÃ©e. \")\n  }\n \n} else {\n  \n    if (anyDuplicated(Paie) || anyDuplicated(Bulletins.paie)) {\n      cat(\"Attention : AltaÃ¯r a dÃ©tectÃ© des lignes dupliquÃ©es alors qu'aucun retraitement des lignes dupliquÃ©es n'est prÃ©vu par dÃ©faut.\")\n    } else {\n      cat(\"Aucune duplication de ligne n'a Ã©tÃ© dÃ©tectÃ©e. \")\n    }\n}\n\n#'  \nif (aprÃ¨s.redressement != avant.redressement)\n  cat(\"Elimination de \", FR(avant.redressement - aprÃ¨s.redressement), \" lignes dupliquÃ©es\")\n#'  \n#'## Fiabilite des heures et des quotitÃ©s de travail           \n#'   \n\nnrow.bull <- nrow(Bulletins.paie)\nnrow.bull.heures <- nrow(Bulletins.paie[Heures != 0])\nnrow.bull.quotitÃ©s <- nrow(Bulletins.paie[Temps.de.travail != 0])\n\nif (nrow.bull.heures/nrow.bull  < 0.1) \n  message(\"Attention moins de 10 % des heures sont renseignÃ©es\")\n\nif (nrow.bull.quotitÃ©s/nrow.bull < 0.1)\n  message(\"Attention moins de 10 % des quotitÃ©s sont renseignÃ©es\")\n#'     \ncat(\"Nombre de bulletins : \", FR(nrow.bull))\n#'     \nif (redresser.heures) {\n  if (nredressements > 0) {\n    cat(\"Les heures de travail ont Ã©tÃ© redressÃ©es avec la mÃ©thode \", ifelse(test.temps.complet, \"des quotitÃ©s.\\n\", \"de l'interpolation indiciaire\\n\")) \n  }\n} else {\n   cat(\"Les heures de travail n'ont pas Ã©tÃ© redressÃ©es.\")\n}\n#'    \ncat(\" Nombre de bulletins de paie redressÃ©s :\", FR(nredressements)) \n#'    \ncat(\" Pourcentage de redressements :\", round((nredressements)/nrow.bull*100, 2), \"% des bulletins de paie.\")\n#'  \ncat(\"\\nPourcentage d'heures renseignÃ©es (aprÃ¨s redressement Ã©ventuel):\", round(nrow.bull.heures/nrow.bull*100, 1), \"%\")\n#'   \ncat(\"\\nPourcentage de quotitÃ©s renseignÃ©es :\", round(nrow.bull.quotitÃ©s/nrow.bull*100, 1), \"%\")\n#'   \ncat(\"\\nNombre de bulletins Ã  heures et quotitÃ©s : \", n <- nrow(Bulletins.paie[Heures != 0 & Temps.de.travail != 0]), \"[\", round(n/nrow.bull*100, 1), \"%]\")\n#'   \ncat(\"\\nNombre de bulletins Ã  heures sans quotitÃ©s : \", n <- nrow(Bulletins.paie[Heures != 0 & Temps.de.travail == 0]), \"[\", round(n/nrow.bull*100, 1), \"%]\")\n#'   \ncat(\"\\nNombre de bulletins Ã  quotitÃ©s sans heures : \", n <- nrow(Bulletins.paie[Heures == 0 & Temps.de.travail != 0]), \"[\", round(n/nrow.bull*100, 1), \"%]\")\n#'   \ncat(\"\\nNombre de bulletins apparemment inactifs : \", n <- nrow(Bulletins.paie[(Heures == 0 | is.na(Heures)) & (Temps.de.travail == 0 | is.na(Temps.de.travail))]), \"[\", round(n/nrow.bull*100, 1), \"%]\")  \n#'   \nbase.heures.nulles.salaire.nonnull     <- Bulletins.paie[Heures == 0  & (Net.Ã .Payer != 0 | Brut != 0)]\nbase.quotite.indefinie.salaire.non.nul <- Bulletins.paie[MHeures == 0 & (Net.Ã .Payer != 0 | Brut != 0)]\n\nnligne.base.heures.nulles.salaire.nonnull     <- nrow(base.heures.nulles.salaire.nonnull)\nnligne.base.quotite.indefinie.salaire.non.nul <- nrow(base.quotite.indefinie.salaire.non.nul)\n#'  \nif (nligne.base.heures.nulles.salaire.nonnull)\n   cat(\"Nombre de bulletins de paie de salaires versÃ©s pour un champ Heures = 0 : \", FR(n <<- nligne.base.heures.nulles.salaire.nonnull), \"[\", round(n/nrow.bull * 100, 1), \"%]\")\n#'   \nif (nligne.base.quotite.indefinie.salaire.non.nul)\n   cat(\"\\nNombre de bulletins de paie de salaires versÃ©s pour une quotitÃ© de travail indÃ©finie : \", FR(nligne.base.heures.nulles.salaire.nonnull))\n#'   \n#'[Lien vers la base de donnÃ©es des salaires versÃ©s pour Heures=0](Bases/Fiabilite/base.heures.nulles.salaire.nonnull.csv)   \n#'[Lien vers la base de donnÃ©es des salaires versÃ©s Ã  quotitÃ© indÃ©finie](Bases/Fiabilite/base.quotite.indefinie.salaire.non.nul.csv)   \n#'\n#'## Tableau des personnels  \n#'\n#'\nif (afficher.table.effectifs) {\n  kable(grades.categories, row.names = FALSE) \n} \n\n#'\n#'[Lien vers la base des grades et catÃ©gories](Bases/Effectifs/grades.categories.csv)        \n#'   \n\n#'\n#'[Lien vers la base des personnels](Bases/Effectifs/matricules.csv)        \n#'   \n\n\n#'\n#'## Divergences lignes-bulletins de paie     \n#'   \n#'*Pour exclure certains codes de paie de l'analyse, renseigner le fichier liste.exclusions.txt*  \n#'   \n\nif (test.delta) {\n  if (!is.null(liste.exclusions))\n    message(\"Une liste de codes exclus pour la vÃ©rification de la concordance lignes-bulletins de paie a Ã©tÃ© jointe sous \", getwd())\n    cat(\"   \")\n    source(\"delta.R\", encoding=encodage.code.source)\n} else {\n  cat(\"Base de vÃ©rification des Ã©carts lignes de paie-bulletins de paie non gÃ©nÃ©rÃ©e.\")\n}\n\n  \n#'   \n#'[Divergences lignes-bulletins de paie](Bases/Fiabilite/Delta.csv)     \n#'   \n\n\n######### SAUVEGARDES #######\n\n# La suppression des accents est regrettablement motivÃ©e par les incompatibilitÃ©s de la conversion pdf sous Windows.\n\nenvir <- environment()\n\nif (sauvegarder.bases.analyse) {\n\n  \n  sauv.bases(file.path(chemin.dossier.bases, \"Remunerations\"),\n             env = envir,\n             \"Analyse.remunerations\",\n             \"Anavar.synthese\",\n             \"Analyse.variations.par.exercice\",\n             \"beneficiaires.PFR\",\n             \"beneficiaires.PFR.Variation\")\n\n  sauv.bases(file.path(chemin.dossier.bases, \"Effectifs\"),\n             env = envir,\n             \"matricules\",\n             \"grades.categories\",\n             \"tableau.effectifs\")\n\n  sauv.bases(file.path(chemin.dossier.bases, \"Reglementation\"),\n             env = envir,\n             \"personnels.iat.ifts\",\n             \"codes.ifts\",\n             \"personnels.pfr.ifts\",\n             \"codes.pfr\",\n             \"HS.sup.25\",\n             \"Depassement.seuil.180h\",\n             \"ifts.et.contractuel\",\n             \"ihts.anormales\",\n             \"lignes.contractuels.et.vacations\",\n             \"lignes.fonctionnaires.et.vacations\",\n             \"Paie_vac_contr\",\n             \"Paie_vac_fonct\",\n             \"Paie_vac_sft_ir\",\n             \"lignes.ifts.anormales\",\n             \"matricules.contractuels.et.vacations\",\n             \"matricules.fonctionnaires.et.vacations\",\n             \"SFT_IR.et.vacations\",\n             \"matricules.SFT_IR.et.vacations\",\n             \"NBI.aux.non.titulaires\",\n             \"personnels.prime.informatique\",\n             \"personnels.iat.ifts\",\n             \"remunerations.elu\",\n             \"RI.et.vacations\",\n             \"traitement.et.vacations\",\n             \"cumul.lignes.paie\",\n             \"cumul.total.lignes.paie\",\n             \"controle.sft\",\n             \"Paie.sans.enfant.reduit\")\n  \n  sauv.bases(file.path(chemin.dossier.bases, \"Fiabilite\"),\n             env = envir,\n              \"base.heures.nulles.salaire.nonnull\",\n              \"base.quotite.indefinie.salaire.non.nul\",\n              \"lignes.nbi.anormales\",\n              \"cumuls.nbi\",\n              \"cl1\",\n              \"cl2\",\n              \"cl3\",\n              \"cl4\",\n              \"code.libelle\",\n              \"Evenements\",\n              \"Evenements.ind\",\n              \"Evenements.mat\")\n  \n  if (test.delta) \n    sauv.bases(file.path(chemin.dossier.bases, \"Fiabilite\"), env = envir, \"Delta\")\n  \n}\n\nif (sauvegarder.bases.origine)\n  sauv.bases(file.path(chemin.dossier.bases, \"Paiements\"),\n             env = envir,\n             \"Paie\",\n             \"Bulletins.paie\")\n\n\nif (! gÃ©nÃ©rer.rapport)\n   setwd(currentDir)\n\nmessage(getwd())\n\n",
    "created" : 1471535675963.000,
    "dirty" : false,
    "encoding" : "ISO8859-1",
    "folds" : "",
    "hash" : "2118772259",
    "id" : "29554203",
    "lastKnownWriteTime" : 1470394238,
    "last_content_update" : 1470394238,
    "path" : "C:/Users/Public/Dev/altair/Tests/Exemple/altair.R",
    "project_path" : "Tests/Exemple/altair.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}