{
    "collab_server" : "",
    "contents" : "# encoder ce script en windows-1252\nencodage.code.source <- \"ISO-8859-1\"\ninitwd <- getwd()\nsetOSWindows  <- Sys.info()[\"sysname\"] != \"Linux\"\nPDF <<- FALSE\n\nif (setOSWindows) {\n  \n  invisible(Sys.setenv(PATH = paste0(Sys.getenv(\"PATH\"), \";\", file.path(Sys.getenv(\"R_HOME\"), \"../texlive/miktex/bin;\"))))\n  setwd(file.path(Sys.getenv(\"R_HOME\"), \"../Tests/Exemple\"))\n  source(\"syspaths.R\", encoding=encodage.code.source)\n  \n  source(\"prologue.R\", encoding=encodage.code.source)\n  \n  library(rmarkdown)\n  \n  render(\"altair.R\",\n         output_format = output_format(knitr_options(opts_chunk = list(fig.width = 7.5, \n                                                                       fig.height = 5,\n                                                                       echo = FALSE,\n                                                                       warning = FALSE,\n                                                                       message = FALSE,\n                                                                       results = 'asis')),\n                                       keep_md = keep_md, clean_supporting = !keep_md,\n                                       pandoc = pandoc_options(to = \"docx\",\n                                                               from = \"markdown+autolink_bare_uris+ascii_identifiers+tex_math_single_backslash-implicit_figures\",\n                                                               args=c(\"-V\", \n                                                                      \"papersize=A4\" ))),\n         output_file = \"altaïr.docx\")z\n  \n  #file.rename(\"altair.pdf\", \"altaïr.pdf\")\n  shell(\"start winword altaïr.docx\")\n  \n} else {\n  setwd(\"Tests/Exemple\")\n  source(\"syspaths.R\", encoding = encodage.code.source)\n  knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, results = 'asis')\n  source(\"prologue.R\", encoding = encodage.code.source)\n  writeLines(iconv(readLines(\"altair.R\"), from = encodage.code.source, to = \"UTF-8\"),\n             \"altair.utf8.R\")\n  library(rmarkdown)\n  \n  rmarkdown::render(\"altair.utf8.R\", clean = FALSE,  html_document(fig_retina = 3))\n  # produit altair.utf8.html\n  \n  system(\n    paste(\n      \"/usr/bin/pandoc\",\n      \"altair.utf8.html  +RTS -K512m -RTS --to odt --from  html --output altaïr.odt --highlight-style tango\"\n    )\n  )\n  \n# fallback :  \n#  system(\n#    paste(\n#      \"/usr/bin/pandoc\",\n#      \"altair.utf8.knit.md --to odt --from markdown+autolink_bare_uris+ascii_identifiers+tex_math_single_backslash-implicit_figures --output altaïr.odt --highlight-style tango\"\n#    )\n # )\n  \n  system(\"/usr/bin/lowriter altaïr.odt\")\n  unlink(\"altair.utf8_files\", recursive = TRUE)  \n}\n\n\nsetwd(initwd)\n",
    "created" : 1455391370320.000,
    "dirty" : false,
    "encoding" : "ISO8859-1",
    "folds" : "",
    "hash" : "1029250962",
    "id" : "1E038AC0",
    "lastKnownWriteTime" : 1455496314,
    "last_content_update" : 1455496314902,
    "path" : "C:/Users/Public/Dev/altair/Tests/Exemple/rapport_msword.R",
    "project_path" : "Tests/Exemple/rapport_msword.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}