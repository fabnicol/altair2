{
    "collab_server" : "",
    "contents" : "# encoder ce script en windows-1252\nencodage.code.source <- \"ISO-8859-1\"\ninitwd <- getwd()\nsetOSWindows  <- Sys.info()[\"sysname\"] != \"Linux\"\nPDF <<- TRUE\n\nif (setOSWindows) {\n  \n  invisible(Sys.setenv(PATH = paste0(Sys.getenv(\"PATH\"), \";\", file.path(Sys.getenv(\"R_HOME\"), \"../texlive/miktex/bin;\"))))\n  setwd(file.path(Sys.getenv(\"R_HOME\"), \"../Tests/Exemple\"))\n  source(\"syspaths.R\", encoding=encodage.code.source)\n  \n  source(\"prologue.R\", encoding=encodage.code.source)\n \n  library(rmarkdown)\n  # ne pas écrire altaïr.pdf... \n  render(\"altair.R\",\n         output_format = output_format(knitr_options(opts_chunk = list(fig.width = 7.5, \n                                                                       fig.height = 5,\n                                                                       echo = FALSE,\n                                                                       warning = FALSE,\n                                                                       message = FALSE,\n                                                                       results = 'asis')),\n                                       keep_md = keep_md, clean_supporting = !keep_md,\n                                       pandoc = pandoc_options(to = \"latex\",\n                                                               from = \"markdown+autolink_bare_uris+ascii_identifiers+tex_math_single_backslash-implicit_figures\",\n                                       args=c(\"-V\", \n                                              \"papersize=A4\",\n                                              \"-V\",\n                                              \"geometry:top=2cm,bottom=1.5cm,left=2cm,right=1.5cm\",\n                                              \"--highlight-style\",\n                                              \"tango\",\n                                              \"--template\",\n                                              \"../../R/library/rmarkdown/rmd/latex/default.tex\") )),\n        output_file = \"altair.pdf\")\n  file.rename(\"altair.pdf\", \"altaïr.pdf\")\n  shell(\"start acrord32.exe altaïr.pdf\")\n\n  \n} else {\n  \n  setwd(\"Tests/Exemple\")\n  source(\"syspaths.R\", encoding=encodage.code.source)\n  knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, results = 'asis')\n  source(\"prologue.R\", encoding=encodage.code.source)\n  writeLines(iconv(readLines(\"altair.R\"), from = encodage.code.source, to = \"UTF-8\"), \"altair.utf8.R\")  \n  \n  rmarkdown::render(\"altair.utf8.R\", output_format = \"pdf_document\", output_file = \"altair.pdf\")\n  \n# fallback:\n#  system(paste(\"/usr/bin/pandoc\", \" -V papersize=A4 +RTS -K512m -RTS altair.utf8.md --to latex --from markdown+autolink_bare_uris+ascii_identifiers+tex_math_single_backslash-implicit_figures --output altaïr.pdf --template ../../lib_linux/rmarkdown/rmd/latex/default.tex --highlight-style tango --latex-engine pdflatex --variable geometry:margin=1in\"))\n# \n# des particularités étranges d'encodage font que l'output altaïr.pdf de render n'est pas possible (2016/01)\n  \n  system(\"mv altair.pdf altaïr.pdf && /usr/bin/okular altaïr.pdf\")\n  unlink(\"altair.utf8_files\", recursive = TRUE)\n}\n\n\n\nsetwd(initwd)\n\n",
    "created" : 1455391371786.000,
    "dirty" : false,
    "encoding" : "ISO8859-1",
    "folds" : "",
    "hash" : "20656305",
    "id" : "772C40B5",
    "lastKnownWriteTime" : 1455496266,
    "last_content_update" : 1455496266304,
    "path" : "C:/Users/Public/Dev/altair/Tests/Exemple/rapport_pdf.r",
    "project_path" : "Tests/Exemple/rapport_pdf.r",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}