#!/sbin/openrc-run
# $Id$

depend() {
need  NetworkManager

}

start() {

  rm -f /home/Public/VERSION

  wget   https://gitlabjf.ccomptes.fr/fnicol/master-jf/raw/master-jf/VERSION -O /home/Public/VERSION    --no-check-certificate
  
  date >> /home/Public/version.log

  if  test ! -f /home/Public/VERSION -o ! -s /home/Public/VERSION
  then 
   clear
   echo "*** FICHIER DE VERSION NON TELECHARGE  ***" | tee -a /home/Public/version.log
   echo "***  VERIFIER LA CONNEXION RESEAU      ***" | tee -a /home/Public/version.log
   sleep 5
   return -1
  fi 
  
    version_current=$(cat /home/Public/VERSION)
    version=$(cat /home/fab/Dev/altair/VERSION)
    if test x$version = x$version_current
    then
      clear
      echo "*** Pas de mise à jour ***"  | tee -a /home/Public/version.log
      sleep 3
      return 1
    fi
    
      clear
      echo "**************************************"
      echo "*"                                                               
      echo "*  Actualisation de l'application Altaïr"  | tee -a /home/Public/version.log
      echo "*"
      echo "**************************************"
      echo
      echo "****"  
      echo "* Actualisation du dépôt fab..." | tee -a /home/Public/version.log
      echo "****"


      cd /home/fab/Dev/altair
      git reset --hard HEAD
      git clean -df
	  chown -R fab .
      adresse=$(cat entrepot.txt)
  
      current_origin=$(git remote -v | grep origin | grep fetch | cut -f'2' | cut -f 1 -d' ')

      git config user.name "Fabrice Nicol"
      git config user.email "fabrice.nicol@crtc.ccomptes.fr"
      git config --unset http.proxy 
      git config --global --unset http.proxy
      git config http.sslVerify false
      git config credential.helper store
      
      if ! test x$current_origin = x$adresse
      then
        echo "****"
        echo "* Actualisation du dépôt $adresse (ancien $current_origin). Patientez..." | tee -a /home/Public/version.log
        echo "***"
        git remote remove origin
        git remote add -t master origin $adresse
       fi
  
      git fetch -p -n --depth=1 origin master-jf | tee -a /home/Public/version.log
        
        for i in altair.linux sft Docs Interface lhx Interface_linux linux '*.txt' '*.R' '*.sh' '*.desktop' VERSION LICENCE '*.ico' '*.bmp' '*.png'  postinstall.sh altaïr.Rproj 'Tests/Exemple' 'Tests/Exemple/Docs' sys
        do
            git checkout FETCH_HEAD -- "$i" 
            git add .
        done
        if ! test -d  lhx
        then
            mkdir lhx    
        fi

        if test -f sys/actualiser_sys -a -f sys/sysinstall.sh; then
            sudo --preserve-env /bin/bash sys/sysinstall.sh
            if test $? = 0; then
            echo "***"
                echo "* Actualisation système effectuée"  | tee -a /home/Public/version.log
                echo "***"
                sleep 3
                git rm -f sys/actualiser_sys
                else
                echo "=> Erreur d'actualisation système"
            fi
        fi

        git commit -am "Sauvegarde $(date)" | tee -a /home/Public/version.log
	        
        echo "****"
        echo "* Actualisation de jf..." | tee -a /home/Public/version.log

        echo "****"
        
        for i in altair.linux sft Docs Interface_linux linux '*.txt'  '*.R'  '*.sh'  '*.desktop' VERSION LICENCE '*.ico'  '*.bmp'  '*.png'  postinstall.sh altaïr.Rproj Tests
        do
            sudo cp -rvf "/home/fab/Dev/altair/$i" /home/jf/Dev/altair
            sudo chown -R jf "/home/jf/Dev/altair/$i"
        done
  
        sudo chmod 0770 /home/jf/Dev/altair/Tests/Exemple/*.*
        sudo chmod 0770 -R /home/jf/Dev/altair/Interface_linux/gui/x64
        sudo chmod 0770 /home/jf/Dev/altair/*.*
        sudo chgrp -R users /home/jf/Dev/altair
        rm -f /home/jf/Dev/altair/.directory
        
        if ! test -d  /home/jf/Dev/altair/lhx
        then
            mkdir /home/jf/Dev/altair/lhx    
            sudo chown jf    /home/jf/Dev/altair/lhx
            sudo chmod -R 0777  /home/jf/Dev/altair/lhx
        fi
        
        cd /home/fab/Dev/altair
        git gc --prune=now

		chown -R fab .
				
        echo "Actualisation des documents de référence sur le bureau"

# Liste des utilisateurs

        for i in $(cut -d: -f1 /etc/passwd)
        do 
        if test -d /home/$i; then
            sudo rm -f "/home/$i/Desktop/"'*.pptx'
            sudo rm -f "/home/$i/Desktop/"'*.docx'
            sudo cp -f "/home/fab/Dev/altair/Docs/Guide utilisateurs.pptx" /home/$i/Desktop
            sudo cp -f "/home/fab/Dev/altair/Docs/Documentation du projet.docx" /home/$i/Desktop
            sudo chown -vR $i "/home/$i/Dev/altair/Tests/Exemple/Donnees/xhl/$i"
            sudo cp -rvf /home/Public/.rstudio-desktop /home/$i
            sudo chown -R $i /home/$i/.rstudio-desktop
            sudo chgrp -R users /home/$i/.rstudio-desktop
            sudo chown -R $i /home/$i/.config
            sudo chgrp -R users /home/$i/.config
            sudo chown -R $i /home/$i/.local/share/applications
            sudo chgrp -R users /home/$i/.local/share/applications
        fi
        done

echo "****" 
echo "* Fin de l'opération."  | tee -a /home/Public/version.log
echo "****"
echo  | tee -a /home/Public/version.log

shutdown -Ph now

}




