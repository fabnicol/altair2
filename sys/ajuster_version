#!/sbin/openrc-run
# $Id$

depend() {
need  NetworkManager

}

start() {

  # Un peu de ménage

  if ! test -d /home/fab/Dev/altair/.git; then
    mkdir -p /home/fab/Dev
    cd /home/fab/Dev/
    rm -rf altair
    echo "https://github.com/fabnicol/altair2.git" > entrepot.txt
    git clone --depth=1 -b dev  $(cat entrepot.txt) altair
    cd altair 
    cp -f sys/ajuster_version /etc/init.d/
    cp -rf sys/Public /home
    rm VERSION
    touch VERSION
  else   
    cd /home/fab/Dev/altair
    find .git -name '*.lock' -delete
    git checkout -f dev

    rm -f sys/install.*

    
    for i in $(cut -d: -f1 /etc/passwd)
        do 
            if test -d /home/$i; then

                if test -d "/home/$i/Dev/altair/Tests/Exemple/altair_files"; then
                    rm -rf "/home/$i/Dev/altair/Tests/Exemple/altair_files"
                fi
                if test -d "/home/$i/Dev/altair/Tests/Exemple/Donnees/R-Altair"; then
                    rm -rf "/home/$i/Dev/altair/Tests/Exemple/Donnees/R-Altair/*"
                fi
                chgrp -R users /home/$i/.local/share/applications
            fi
        done
  fi
  
  chown -R fab /home/fab/Dev/altair
  
  # Vérification de la version 
  
  rm -f /home/Public/VERSION

  wget   https://github.com/fabnicol/altair2/raw/dev/VERSION -O /home/Public/VERSION    --no-check-certificate
  
  date >> /home/Public/version.log

  if  test ! -f /home/Public/VERSION -o ! -s /home/Public/VERSION
  then 
   clear
   echo "*** FICHIER DE VERSION NON TELECHARGE  ***" | tee -a /home/Public/version.log
   echo "***  VERIFIER LA CONNEXION RESEAU      ***" | tee -a /home/Public/version.log
   sleep 5
   return -1
  fi 
  
    version_current=$(cat /home/Public/VERSION)
    version=$(cat /home/fab/Dev/altair/VERSION)
    if test x$version = x$version_current
    then
      clear
      echo "*** Pas de mise à jour ***"  | tee -a /home/Public/version.log
      sleep 3
      return 1
    fi
    
      clear
      echo "**************************************"
      echo "*"                                                               
      echo "*  Actualisation de l'application Altaïr"  | tee -a /home/Public/version.log
      echo "*"
      echo "**************************************"
      echo
      echo "****"  
      echo "* Actualisation du dépôt fab..." | tee -a /home/Public/version.log
      echo "****"


      cd /home/fab/Dev/altair
      git reset --hard HEAD
      git clean -df

      chown -R fab .

      adresse=$(cat entrepot.txt)
  
      current_origin=$(git remote -v | grep origin | grep fetch | cut -f'2' | cut -f 1 -d' ')

      git config user.name "Fabrice Nicol"
      git config user.email "fabrice.nicol@crtc.ccomptes.fr"
      
      export http_proxy=$(cat proxy.txt)
      if test "$http_proxy" = ""; then
         git config --global --unset http.proxy
         git config --unset http.proxy 
      else
         git config --global  http.proxy $http_proxy
         git config   http.proxy $http_proxy
      fi
      git config http.sslVerify false
      git config credential.helper store
      
      if ! test x$current_origin = x$adresse
      then
        echo "****"
        echo "* Actualisation du dépôt $adresse (ancien $current_origin). Patientez..." | tee -a /home/Public/version.log
        echo "***"
        git remote remove origin
        git remote add -t dev origin $adresse
       fi
  
      git fetch -p -n --depth=1 origin dev | tee -a /home/Public/version.log
        
        for i in '.Rproj.user'  altair.linux  data Docs Interface Dev fwidgets_lib lhx Interface_linux linux '*.txt' '*.R' '*.sh' '*.desktop' VERSION LICENCE '*.ico' '*.bmp' '*.png'  altaïr.Rproj 'Tests/Exemple' 'Tests/Exemple/Docs' sys
        do
            rm -rf "$i"
            git checkout FETCH_HEAD -- "$i" 
        done
       
	
	   git add -f .
       git commit -am "Sauvegarde dev $(date)" | tee -a /home/Public/version.log
       
      if test -f sys/install.sys -a -f sys/sysinstall.sh; then

            /bin/bash sys/sysinstall.sh

            if test $? = 0; then
            echo "***"
                echo "* Actualisation système effectuée"  | tee -a /home/Public/version.log
                echo "***"
                sleep 3
            else
                echo "=> Erreur d'actualisation système"
            fi
       fi

    
        
       cd /home/fab/Dev/altair
       git gc --prune=now

                    
        echo "Actualisation des documents de référence sur le bureau"

# Liste des utilisateurs

        for i in $(cut -d: -f1 /etc/passwd)
        do 
        if test -d /home/$i; then
             find "/home/$i/Desktop/" -name '*.pptx' -delete
	         find "/home/$i/Desktop/" -name '*.docx' -delete
             cp -f "/home/fab/Dev/altair/Docs/Guide utilisateurs.pptx" /home/$i/Desktop
	         cp -f "/home/fab/Dev/altair/Docs/Documentation du projet.docx" /home/$i/Desktop
             chown -R $i "/home/$i/Dev/altair/Tests/Exemple/Donnees/xhl/$i"
             cp -rvf /home/Public/.rstudio-desktop /home/$i
             chown -R $i /home/$i/.rstudio-desktop
             chgrp -R users /home/$i/.rstudio-desktop
             chown -R $i /home/$i/.config
             chgrp -R users /home/$i/.config
             chown -R $i /home/$i/.local/share/applications
             chgrp -R users /home/$i/.local/share/applications
        fi
        done

echo "****" 
echo "* Fin de l'opération."  | tee -a /home/Public/version.log
echo "****"
echo  | tee -a /home/Public/version.log

# Uniquement pour le développement

chown -R fab /opt/altair
chown -R fab /home/fab
chgrp -R users /home/fab
shutdown -h now

}




