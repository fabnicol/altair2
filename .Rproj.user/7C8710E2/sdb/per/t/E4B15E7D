{
    "contents" : "#'---\n#'title: false\n#'author: false\n#'date: false\n#'output:\n#'html_document:\n#'css: style.css\n#'---\n\n#'<p class = \"centered\"><img src = \"altair.png\" /></p>\n#'<p class = \"title\">RH Exemple</p> \n#'\n\n#+ echo = FALSE, warning = FALSE, message = FALSE\n\n# comportement global du programme\n\nsauvegarder.bases <- TRUE\n\n# Lorsque l'on n'a que une ou deux années, mettre étudier.variations à FALSE\n# Lorsque l'on n'étudie pas une base Xémélios, mettre étudier.tests.statutaires à FALSE\n\nlibrary(compiler)\n\noptions(warn = -1, verbose = FALSE, OutDec = \",\")\n\ntry(setwd(\"Tests/Exemple\"))\n\nsource(\"prologue.R\")\n\ncompilerOptions <- setCompilerOptions(suppressAll = TRUE)\nJITlevel <- enableJIT(3)\n\nsource(file.path(chemin.dossier, \"bibliotheque.fonctions.paie.R\"))\n\nbase.personnels.catégorie <- data.frame(NULL)\n\ninstaller.paquets(knitr, plyr, ggplot2, assertthat, yaml)\n\nlibrary(knitr)\nlibrary(plyr)\nlibrary(ggplot2)\nlibrary(assertthat)\n\nknitr::opts_chunk$set(fig.retina = 2, fig.width = 7.5, echo = FALSE, warning = FALSE, message = FALSE, results = 'asis')\n\ndir.create(chemin(\"Bases\"), recursive = TRUE)\n\n#'<p class = \"centered\"><b>Exercices `r paste(début.période.sous.revue, \"à\", fin.période.sous.revue)` </b></p>  \n#'<p class = \"author\">Fabrice Nicol</h1>\n#'\n#+ echo = FALSE\n#'`r format(Sys.Date(), \"%a %d %b %Y\")`  \n#'\n\nnombre.exercices <- fin.période.sous.revue - début.période.sous.revue + 1\n\nétiquette.montant <- \"Montant\"\nseuil.troncature <- 99\n\n# Le format est jour/mois/année avec deux chiffres-séparateur-deux chiffres-séparateur-4 chiffres.\n#Le séparateur peut être changé en un autre en modifiant le \"/\" dans fate.format\n\nnom.fichier.paie  <- \"Lignes de paye\"\nnom.bulletin.paie <- \"Bulletins de paye\"\n\n# Cette section pourra être modifiée en entrée dans d'autres contextes\n# Matricule, Codes, Avantages en nature \n\nchamp.détection.élus <- \"Service\"\nchamp.nir <- \"Nir\"\nlibellé.élus <- \"Elus\"\n   \ncodes.paiement          <- \"LISTE DES RUBRIQUES DE TRAITEMENT UTILISEES EN 2012.csv\"\n#matricule.avantage  <- \"LISTE DES AGENTS AYANT BENEFICIE D'AVANTAGE EN NATURE EN 2012.csv\"\ncode.traitement <- 1010\n\nfichier.personnels <- \"Catégories des personnels\"\nnom.fichier.personnels <- paste0(fichier.personnels, \".csv\")\nfichier.personnels.existe <- file.exists(chemin(nom.fichier.personnels))\nif (fichier.personnels.existe)\n  base.personnels.catégorie = read.csv.skip(nom.fichier.personnels)\n\n#/* Lignes de paie\n# On peut lire jusqu'à 10 fichiers csv qui seront générés au format\n#  \"chemin dossier + paies-Bulletins de paye-j.csv\" */\n\nlignes.paie <- outer(début.période.sous.revue:fin.période.sous.revue, 1:10, paste, nom.fichier.paie, \"csv\", sep=\".\")\n\n#/* Bulletins de paie */\n\nbulletins.paie <- paste(début.période.sous.revue:fin.période.sous.revue, nom.bulletin.paie, \"csv\", sep=\".\")\n\ncodes.NBI <- c(\"1012\", \"101B\", \"101M\", \"4652\", \"4672\")\n\n\n#/* Programme principal\n##\n#  Bases\n##\n# Lignes de paie  */\n\nlignes.paie <- lignes.paie[file.exists(chemin(lignes.paie))]\n\nLignes.paie<-Read.csv(lignes.paie)\n\nBulletins.paie <- Read.csv(bulletins.paie)\n\n# suppression des colonnes Nom Prénom redondantes\n\nBulletins.paie <-  selectionner.cle.matricule.mois(Bulletins.paie, Lignes.paie)\n\ncodes.paiement <- read.csv.skip(codes.paiement)\n\n# Matricule.avantage  <- read.csv.skip(matricule.avantage)\n# Matricule.avantage  <- selectionner.cle.matricule(Matricule.avantage, Matricule.catégorie) \n\nif (!setequal(intersect(names(Lignes.paie), names(Bulletins.paie)), c(\"Mois\", ic(\"Année\"), étiquette.matricule)))\n  stop(\"L'appariement ne peut se faire par les clés Matricule et Mois\")\n\n# Alternative en cas de difficulté :\n#\n# Bulletins.paie.Lignes.paie <- do.call(rbind, lapply(début.période.sous.revue:fin.période.sous.revue,\n#                                                     function(x) \n#                                                        merge(Bulletins.paie[Bulletins.paie$Année == x, ],\n#                                                              Lignes.paie[Lignes.paie$Année == x, ], \n#                                                              by=c(étiquette.matricule, \"Mois\"))))\n\nBulletins.paie.Lignes.paie <- merge(Bulletins.paie, Lignes.paie)\n\nBulletins.paie.dernier.mois <- Bulletins.paie[Bulletins.paie$Année == fin.période.sous.revue & Bulletins.paie$Mois == 12, ]\n\nliste.matricules.fonctionnaires <- unique(Bulletins.paie.dernier.mois[Bulletins.paie.dernier.mois$Statut %in% c(\"TITULAIRE\", \"STAGIAIRE\"), étiquette.matricule])\n\nliste.matricules.élus   <- unique(Bulletins.paie.dernier.mois[Bulletins.paie.dernier.mois[champ.détection.élus] == libellé.élus, étiquette.matricule])\n\nBulletins.paie.nir.total.hors.élus <- Bulletins.paie.dernier.mois[ ! Bulletins.paie.dernier.mois$Matricule %in% liste.matricules.élus, c(étiquette.matricule,champ.nir)]\n\nBulletins.paie.nir.fonctionnaires  <- Bulletins.paie.dernier.mois[Bulletins.paie.dernier.mois$Matricule %in% liste.matricules.fonctionnaires, c(étiquette.matricule, champ.nir)]\n\n# Age au 31 décembre de l'exercice dernier.exerciceal de la période sous revue\n\nannées.fonctionnaires   <-fin.période.sous.revue-(as.numeric(substr(as.character(Bulletins.paie.nir.fonctionnaires[,champ.nir]), 2, 3)) + 1900)\nannées.total.hors.élus  <-fin.période.sous.revue-(as.numeric(substr(as.character(Bulletins.paie.nir.total.hors.élus[,champ.nir]), 2, 3)) + 1900)\n\n########### Démographie ########################\n\n#'# 1. Statistiques de population\n#'\n#'### 1.1 Ensemble des personnels non élus    \n\n\nhist(années.total.hors.élus,\n     xlab = paste(\"Âge au 31 décembre\",fin.période.sous.revue),\n     xlim = c(18, 75),\n     ylab = \"Effectif\",\n     main = \"Pyramide des âges\",\n     col = \"blue\",\n     nclass = 50)\n\n#'\n#'[Lien vers la base des âges](Bases/Bulletins.paie.nir.total.hors.élus.csv)\n#'\n\nRésumé(paste0(\"Âge des personnels <br>au 31/12/\",fin.période.sous.revue), années.total.hors.élus, align = 'c')\n\n#'Effectif total: `r length(années.total.hors.élus)`  \n#'\n#'######      <br>\n#'\n#'\n#'### 1.2 Ensemble des fonctionnaires stagiaires et titulaires    \n\nhist(années.fonctionnaires,\n     xlab = paste(\"Âge au 31 décembre\",fin.période.sous.revue),\n     xlim = c(18,68),\n     ylab = \"Effectif\",\n     main = \"Pyramide des âges des fonctionnaires\",\n     col = \"navy\",\n     nclass = 50)\n\n#'\n#'[Lien vers la base des âges](Bases/Bulletins.paie.nir.fonctionnaires.csv)\n#'\n\nRésumé(paste0(\"Âge des personnels <br>au 31/12/\",fin.période.sous.revue), années.fonctionnaires, align = 'c')\n\n#'   \n#'**Effectif total: `r length(années.fonctionnaires)`**     \n#'\n  \nAnalyse.variations.par.exercice <- ddply(Bulletins.paie, \n             c(étiquette.matricule, étiquette.année),\n             summarise,\n             Montant.net = sum(Net.à.Payer),\n             Statut = Statut[length(Net.à.Payer)],\n             mois.entrée = ifelse((minimum <- min(Mois)) != Inf, minimum, 0),\n             mois.sortie = ifelse((maximum <- max(Mois)) != -Inf, maximum, 0),\n             nb.jours = calcul.nb.jours.mois(mois.entrée[1], mois.sortie[1], Année[1]))\n\n# Analyse.variations.par.exercice2 <- ddply(Analyse.variations.par.exercice, \n#               étiquette.matricule,\n#               summarise,\n#               nb.exercices = length(Année))\n# \n# Analyse.variations.par.exercice <- merge(Analyse.variations.par.exercice, Analyse.variations.par.exercice2)\n\nAnalyse.variations.synthèse <- ddply(Analyse.variations.par.exercice,\n                            .(Matricule),\n                            summarise,\n                            Nexercices = length(Année),\n                            nb.jours.exercice.début = nb.jours[1],\n                            nb.jours.exercice.sortie = nb.jours[Nexercices],\n                            total.jours = sum(nb.jours),\n                            rémunération.début = ifelse(nb.jours.exercice.début == 0,\n                                                        0,\n                                                        Montant.net[1]/nb.jours.exercice.début*365),\n                            rémunération.sortie = ifelse(nb.jours.exercice.sortie == 0,\n                                                         0,\n                                                         Montant.net[Nexercices]/nb.jours.exercice.sortie*365),\n                            moyenne.rémunération.annuelle.sur.période = ifelse(total.jours == 0, 0, sum(Montant.net)*365/total.jours),\n                            variation.rémunération.jour = calcul.variation(rémunération.début, \n                                                                           rémunération.sortie,\n                                                                           nb.jours.exercice.début,\n                                                                           nb.jours.exercice.sortie,\n                                                                           Nexercices),\n                            variation.moyenne.rémunération.jour = ifelse(total.jours == 0, 0,\n                              ( ( 1 + variation.rémunération.jour / 100 ) ^ (365 / total.jours) - 1) * 100),\n                            plus.2.ans = (total.jours >= 2*365),\n                            moins.2.ans = (total.jours < 2*365),\n                            moins.1.an  = (total.jours < 365),\n                            moins.six.mois = (total.jours < 365/2),\n                            statut = Statut[1])\n\n####  On pourrait aussi plus simplement poser  ###\n#  que plus.deux.ans soit défini comme length(Année) >= 2.\n#  On préfère une définition à partir de total.jours pour \n#  avoir une définition cohérente sur toutes les durées, y.c infra-annuelles\n\nattach(Analyse.variations.par.exercice, warn = FALSE)\n\nAnalyse.variations.par.exercice <- na.omit(Analyse.variations.par.exercice[ nb.jours[1] > seuil.troncature\n                                                                 &  nb.jours[length(Année)] > seuil.troncature, ])\n\nAnalyse.variations.par.exercice <- mutate(Analyse.variations.par.exercice,\n                                          plus.2.ans = Matricule\n                                                          %in%\n                                                       Analyse.variations.synthèse[Analyse.variations.synthèse$plus.2.ans, étiquette.matricule])\n\n\ndetach(Analyse.variations.par.exercice)\n\nattach(Analyse.variations.synthèse, warn.conflicts = FALSE)\n\n#'\n#'<!-- BREAK -->\n#'\n#'\n#'### 1.3 Effectifs des personnels par durée de service\n#'\n#'**Personnels en fonction des exercices `r début.période.sous.revue` à `r fin.période.sous.revue` inclus :**  \n#'\n\nTableau(c(\"Plus de 2 ans\",\n          \"Moins de 2 ans\",\n          \"Moins d'un an\", \n          \"Moins de six mois\"), \n        sum(plus.2.ans),\n        sum(moins.2.ans),\n        sum(moins.1.an), \n        sum(moins.six.mois))\n\n#'\n\ndetach(Analyse.variations.synthèse)\n\nqplot(factor(Année), \n      data = Analyse.variations.par.exercice,\n      geom = \"bar\",\n      fill = factor(!plus.2.ans),\n      main = paste(\"Evolutions entre\", début.période.sous.revue,\"et\", fin.période.sous.revue),\n      xlab = étiquette.année,\n      ylab = \"Effectif\",\n      asp = 4) + \n  scale_fill_discrete(name = \"Personnels en fonction\",\n                      breaks = c(TRUE, FALSE),\n                      labels = c(\"Moins de deux ans\", \"Plus de deux ans\"))\n  \n#'\n#'**Nota:**  \n#'Personnels en place : ayant servi au moins 730 jours pendant la période.  \n#'Toutes les durées de service sont calculées en multiples de 365 jours.  \n#'Dans les statistiques de cette section, les élus ne sont pas pris en compte.\n#'\n\n# fusion matricule | avantage | catégorie par Matricule\n# peut aisément être modifié ainsi\n\n\nBulletins.paie.Lignes.paie <- mutate(Bulletins.paie.Lignes.paie,\n                                      montant.traitement.indiciaire \n                                      = Montant*(Code %in% codes.paiement[codes.paiement$Type.rémunération \n                                                                          == \"TRAITEMENT\",\"Code.rubrique\"]),\n                                      montant.primes \n                                      = Montant*(Code %in% codes.paiement[codes.paiement$Type.rémunération \n                                                                          == \"INDEMNITAIRE.OU.CONTRACTUEL\",\"Code.rubrique\"]),\n                                      montant.autres.rémunérations \n                                      = Montant*(Code %in% codes.paiement[codes.paiement$Type.rémunération\n                                                                          == \"AUTRES\",\"Code.rubrique\"]),\n                                      montant.indemnité.élu \n                                      = Montant*(Code %in% codes.paiement[codes.paiement$Type.rémunération\n                                                                          == \"ELU\",\"Code.rubrique\"]))\n\nAnalyse.rémunérations <- ddply(Bulletins.paie.Lignes.paie,\n                              .(Matricule, Année),\n                              summarise,\n                              Statut = Statut[1],\n                              Service = Service[1],\n                              traitement.indiciaire = sum(montant.traitement.indiciaire),\n                              rémunération.contractuelle.ou.indemnitaire = sum(montant.primes),\n                              indemnités.élu                             = sum(montant.indemnité.élu),\n                              autres.rémunérations                       = sum(montant.autres.rémunérations),\n                              total.rémunérations                        = traitement.indiciaire \n                              + rémunération.contractuelle.ou.indemnitaire \n                              + autres.rémunérations\n                              + indemnités.élu,\n                              part.rémunération.contractuelle.ou.indemnitaire = \n                                ifelse(traitement.indiciaire + rémunération.contractuelle.ou.indemnitaire == 0, 0,\n                                       rémunération.contractuelle.ou.indemnitaire /\n                                         (traitement.indiciaire + rémunération.contractuelle.ou.indemnitaire)*100))\n\n\nannée <- début.période.sous.revue\n\ncolonnes.sélectionnées <- c(\"traitement.indiciaire\",\n                            ic(\"rémunération.contractuelle.ou.indemnitaire\"),\n                            ic(\"autres.rémunérations\"), \n                            ic(\"total.rémunérations\"),\n                            ic(\"part.rémunération.contractuelle.ou.indemnitaire\"),\n                            étiquette.matricule)\n\n\n\n# pour année début #\n\n\n###########  Analyse des rémunérations  début de période###################\n#  ATTENTION : les années doivent être SUCCESSIVES                        #\n\n\nAnalyse.rémunérations.premier.exercice <- Analyse.rémunérations[Analyse.rémunérations$Année == année, ]\n  \nif (fichier.personnels.existe)\n{\n  Analyse.rémunérations.premier.exercice <- merge(Analyse.rémunérations.premier.exercice, base.personnels.catégorie, by = étiquette.matricule, all = FALSE)\n  colonnes.sélectionnées <- c(colonnes.sélectionnées, \"Catégorie\") \n}\n\nattach(Analyse.rémunérations.premier.exercice, warn.conflicts = FALSE)\n\n########### Analyse statique premier exercice ########################\n#'# 2. Rémunérations brutes : analyse pour l'exercice `r année` \n#'## 2.1 Fonctionnaires titulaires et stagiaires\n#'\n\n\n\nfiltre.fonctionnaire <- function (X) X[ Statut %in% c(\"TITULAIRE\", \"STAGIAIRE\") & X >0 ]\n\nhist(filtre.fonctionnaire(total.rémunérations)/1000,\n     xlab = \"En milliers d'euros hors politique familiale\\nindemnités journalières et remboursements\",\n     ylab = \"Effectif\",\n     xlim = c(0, 120),\n     main = paste(\"Rémunération annuelle des fonctionnaires en\", année),\n     col = \"blue\",\n     nclass = 50)\n\n#'    \n\nhist(filtre.fonctionnaire(rémunération.contractuelle.ou.indemnitaire)/1000,\n     xlab = \"En milliers d'euros hors politique familiale\\nindemnités journalières et remboursements\",\n     ylab = \"Effectif\",\n     xlim = c(0, 70),\n     main = paste(\"Rémunération indemnitaire annuelle des fonctionnaires en\", année),\n     col = \"blue\",\n     nclass = 50\n)\n\n#'\n#'<!-- BREAK -->\n#'\n       \n\nhist(filtre.fonctionnaire(part.rémunération.contractuelle.ou.indemnitaire),\n     xlab = \"Part des indemnités dans la rémunération en %\\n hors politique familiale, indemnités journalières et remboursements\",\n     ylab = \"Effectif\",\n     main = paste(\"Part indemnitaire de la rémunération annuelle des fonctionnaires en\", année),\n     xlim = c(0,60),     \n     col = \"blue\",\n     nclass = 30)\n\n#/* La moyenne est tirée vers le haut par les outlyers */\n\nmasse.indemnitaire            <- sum(rémunération.contractuelle.ou.indemnitaire[ traitement.indiciaire > 0])\nmasse.indiciaire              <- sum(traitement.indiciaire)\nmasse.rémunérations.brutes    <- sum(total.rémunérations)\nratio.global.masse.indemnitaire  <- masse.indemnitaire/(masse.indiciaire+masse.indemnitaire)*100\n\n#'### Masses indemnitaires pour l'exercice `r année`\n#'\nTableau(c(\"Masse indiciaire\", \"Masse indemnitaire\"),\n        masse.indiciaire, masse.indemnitaire)\n\n#'\n#'<!-- BREAK -->\n#'\n\nTableau(c(\"Masse des rémunérations brutes\", \"Part de la masse indemnitaire\"),\n        masse.rémunérations.brutes, ratio.global.masse.indemnitaire)\n\n#'\n\ndf <- data.frame(masse.indemnitaire, masse.indiciaire, masse.rémunérations.brutes, ratio.global.masse.indemnitaire)\n\nSauv.base(chemin(\"Bases\"), \"df\", paste0(\"Masses.\", année))\n\n#'\n#'[Lien vers la base de données](Bases/`r paste0(\"Masses.\", année, \".csv\")`)    \n#'        \n#'Les résultats sont exprimés en euros.  \n#'  \n#'\n#'\n#'######      <br>\n#'   \n#'### Statistiques de position pour l'exercice `r année`  \n#'\n\nAR <- Analyse.rémunérations.premier.exercice[Statut %in% c(\"TITULAIRE\", \"STAGIAIRE\"), colonnes.sélectionnées]\n\nRésumé(c(\"Traitement indiciaire\",\n         étiquette.rém.indemn,\n         \"Autres rémunérations\"),  AR[1:3])\n\n#'    \n#'\nRésumé(c(\"Total rémunérations\", \"Part de la rémunération contractuelle ou indemnitaire\"), AR[4:5])\n\n#'     \n#'**Effectif : `r nrow(AR)`**     \n#'\n#'<!-- BREAK -->\n#'\n\n#'### Statistiques de position par catégorie pour l'exercice `r année` \n#'\n\nARA <- AR[AR$Catégorie == 'A', ]\nARB <- AR[AR$Catégorie == 'B', ]\nARC <- AR[AR$Catégorie == 'C', ]\n\n#'**Catégorie A**     \n#'\n#'     \n\n\nif (fichier.personnels.existe)\n{  \n  Résumé(c(\"Traitement indiciaire\",\n           étiquette.rém.indemn,\n           \"Autres rémunérations\"), ARA[c(\"traitement.indiciaire\",\n                                          \"rémunération.contractuelle.ou.indemnitaire\",\n                                          \"autres.rémunérations\")])\n} else\n  cat(\"Pas de statistique en l'absence de fichier des catégories.\\n\")\n\n#'\n\nif (fichier.personnels.existe)\n{  \n  Résumé(c(\"Total rémunérations\", \"Part de la rémunération contractuelle ou indemnitaire\"),\n          ARA[c( \"total.rémunérations\", \"part.rémunération.contractuelle.ou.indemnitaire\")])\n}\n#'    \n#'**Effectif : `r nrow(ARA)`**          \n#'\n#'##   \n#'        \n#'**Catégorie B**     \n#'     \n\nif (fichier.personnels.existe)\n{  \n  Résumé(c(\"Traitement indiciaire\",\n           étiquette.rém.indemn,\n           \"Autres rémunérations\"), \n         ARB[ c(\"traitement.indiciaire\",\n                \"rémunération.contractuelle.ou.indemnitaire\",\n                \"autres.rémunérations\")])\n} else\n  cat(\"Pas de statistique en l'absence de fichier des catégories.\\n\")\n\n#'\n\nif (fichier.personnels.existe)\n{  \n  Résumé(c(\"Total rémunérations\", \"Part de la rémunération contractuelle ou indemnitaire\"),\n         ARB[ c( \"total.rémunérations\", \"part.rémunération.contractuelle.ou.indemnitaire\")])\n}\n\n#'     \n#'**Effectif : `r nrow(ARB)`**     \n#'    \n#'**Catégorie C**     \n#'\n#'     \n\nif (fichier.personnels.existe)\n{      \n  Résumé(c(\"Traitement indiciaire\",\n           étiquette.rém.indemn,\n           \"Autres rémunérations\"), \n         ARC[ c(\"traitement.indiciaire\",\n                \"rémunération.contractuelle.ou.indemnitaire\",\n                \"autres.rémunérations\")])\n} else\n  cat(\"Pas de statistique en l'absence de fichier des catégories.\\n\")\n\n#'\n\nif (fichier.personnels.existe)\n{  \n  Résumé(c(\"Total rémunérations\", \"Part de la rémunération contractuelle ou indemnitaire\"),\n         ARC[ c( \"total.rémunérations\", \"part.rémunération.contractuelle.ou.indemnitaire\") ])\n}\n\n#'**Effectif : `r nrow(ARC)`**     \n#'    \n#'    \n#'######      <br>\n#'\n#'## 2.2 Contractuels, vacataires et stagiaires inclus\n#'\n\nhist(total.rémunérations[! Matricule %in% liste.matricules.élus & !Statut %in% c(\"TITULAIRE\", \"STAGIAIRE\") & total.rémunérations > 1000]/1000,\n     xlab = \"Rémunération en milliers d'euros \\n hors politique familiale, indemnités journalières et remboursements\",\n     ylab = \"Effectif\",\n     xlim = c(0, 40),\n     main = paste(\"Rémunération annuelle totale des contractuels en\", année),\n     col = \"red\",\n     nclass = 50)\n#'\n#'**Nota:**   \n#'Ne sont retenues que les rémunérations supérieures à 1 000 euros.  \n#'Les élus ne sont pas pris en compte.   \n#'\n\nhist(positive(autres.rémunérations),\n     xlab = \"En euros :\\n politique familiale, indemnités journalières et remboursements\",\n     ylab = \"Effectif\",\n     xlim = c(0, 5000),\n     main = paste(\"Autres rémunérations en\", année),\n     col = \"grey\")\n\n#'   \n\nRésumé(c(étiquette.rém.indemn, \"Autres rémunérations\"),\n       Analyse.rémunérations.premier.exercice[ ! Matricule %in% liste.matricules.élus & ! Statut %in% c(\"TITULAIRE\", \"STAGIAIRE\"), \n                             c(ic(\"rémunération.contractuelle.ou.indemnitaire\"), ic(\"autres.rémunérations\"))])\n#'\n\nRésumé(\"Total rémunérations\",\n       Analyse.rémunérations.premier.exercice[ ! Matricule %in% liste.matricules.élus & !Statut %in% c(\"TITULAIRE\", \"STAGIAIRE\"), \n                             \"total.rémunérations\"])\n\nnom.base.analyse <- \"Analyse.rémunérations.premier.exercice\"\n\nif (sauvegarder.bases)\n  Sauv.base(chemin(\"Bases\"), ic(\"Analyse.rémunérations.premier.exercice\"), nom.base.analyse)\n\ndetach(Analyse.rémunérations.premier.exercice)\n\n# pour année fin #\n\nannée <- fin.période.sous.revue\n\n#'\n#'\n\nBulletins.paie.Lignes.paie.dernier.exercice <-  Bulletins.paie.Lignes.paie[Bulletins.paie.Lignes.paie$Année == fin.période.sous.revue,]\n\nBulletins.paie.Lignes.paie.dernier.exercice <- mutate(Bulletins.paie.Lignes.paie.dernier.exercice,\n                                     montant.traitement.indiciaire \n                                     = Montant*(Code %in% codes.paiement[codes.paiement$Type.rémunération \n                                                                     == \"TRAITEMENT\",\"Code.rubrique\"]),\n                                     montant.primes \n                                     = Montant*(Code %in% codes.paiement[codes.paiement$Type.rémunération \n                                                                     == \"INDEMNITAIRE.OU.CONTRACTUEL\",\"Code.rubrique\"]),\n                                     montant.autres.rémunérations \n                                     = Montant*(Code %in% codes.paiement[codes.paiement$Type.rémunération\n                                                                     == \"AUTRES\",\"Code.rubrique\"]),\n                                     montant.indemnité.élu \n                                     = Montant*(Code %in% codes.paiement[codes.paiement$Type.rémunération\n                                                                     == \"ELU\",\"Code.rubrique\"]))\n\n###########  Analyse des rémunérations  fin de période###################\n#  ATTENTION : les années doivent être SUCCESSIVES                      #\n\n\nAnalyse.rémunérations.dernier.exercice <- Analyse.rémunérations[Analyse.rémunérations$Année == année, ]\n\nif (fichier.personnels.existe)\n{\n  Analyse.rémunérations.dernier.exercice <- merge(Analyse.rémunérations.dernier.exercice, base.personnels.catégorie, by = étiquette.matricule, all = FALSE)\n}\n\nattach(Analyse.rémunérations.dernier.exercice, warn.conflicts = FALSE)\n\n########### Analyse statique dernier exercice ########################\n\n#'# 3. Rémunérations brutes : analyse pour l'exercice `r année` \n#'## 3.1 Fonctionnaires titulaires et stagiaires\n#'\n\nfiltre.fonctionnaire <- function (X) X[ Statut %in% c(\"TITULAIRE\", \"STAGIAIRE\") & X >0 ]\n\nhist(filtre.fonctionnaire(total.rémunérations)/1000,\n     xlab = \"En milliers d'euros \\n hors politique familiale, indemnités journalières et remboursements\",\n     ylab = \"Effectif\",\n     xlim = c(0, 120),\n     main = paste(\"Rémunération annuelle des fonctionnaires en\", année),\n     col = \"blue\",\n     nclass = 50)\n\n#'  \n#'\n\nhist(filtre.fonctionnaire(rémunération.contractuelle.ou.indemnitaire)/1000,\n     xlab = \"En milliers d'euros\\n hors politique familiale, indemnités journalières et remboursements\",\n     ylab = \"Effectif\",\n     xlim = c(0, 70),\n     main = paste(\"Rémunération indemnitaire annuelle\\ndes fonctionnaires en\", année),\n     col = \"blue\",\n     nclass = 50\n)\n\n#'    \n#'\n\nhist(filtre.fonctionnaire(part.rémunération.contractuelle.ou.indemnitaire),\n     xlab = \"Pourcentage des indemnités dans la rémunération\\n hors politique familiale, indemnités journalières et remboursements\",\n     ylab = \"Effectif\",\n     main = paste(\"Part indemnitaire de la rémunération annuelle des fonctionnaires en\", année),\n     xlim = c(0,60),     \n     col = \"blue\",\n     nclass = 30)\n\n#/* La moyenne est tirée vers le haut par les outlyers */\n\nmasse.indemnitaire            <- sum(rémunération.contractuelle.ou.indemnitaire[ traitement.indiciaire > 0])\nmasse.indiciaire              <- sum(traitement.indiciaire)\nmasse.rémunérations.brutes    <- sum(total.rémunérations)\nratio.global.masse.indemnitaire  <- masse.indemnitaire/(masse.indiciaire+masse.indemnitaire)*100\n\n#'### Masses indemnitaires pour l'exercice `r année`\n#'\nTableau(c(\"Masse indiciaire\", \"Masse indemnitaire\"),\n        masse.indiciaire, masse.indemnitaire)\n\n#'  \n\nTableau(c(\"Masse des rémunérations brutes\", \"Part de la masse indemnitaire\"),\n        masse.rémunérations.brutes, ratio.global.masse.indemnitaire)\n#'\n\ndf <- data.frame(masse.indemnitaire, masse.indiciaire, masse.rémunérations.brutes, ratio.global.masse.indemnitaire)\nSauv.base(chemin(\"Bases\"), \"df\", paste0(\"Masses.\", année))\n\n#'[Lien vers la base de données](Bases/`r paste0(\"Masses.\", année, \".csv\")` )   \n#'\n#'Les résultats sont exprimés en euros.  \n#'\n#'\n#'######      \n#'\n#'### Statistiques de position pour l'exercice `r année`  \n#'\n\nAR <- Analyse.rémunérations.dernier.exercice[Statut %in% c(\"TITULAIRE\", \"STAGIAIRE\"), colonnes.sélectionnées ]\n\nRésumé(c(\"Traitement indiciaire\",\n         étiquette.rém.indemn,\n         \"Autres rémunérations\"),  AR[1:3])\n#'\n\nRésumé(c(\"Total rémunérations\", \"Part de la rémunération contractuelle ou indemnitaire\"), AR[4:5])\n       \n#'**Effectif : `r nrow(AR)`**     \n#'   \n#'######      \n#'\n#'### Statistiques de position par catégorie pour l'exercice `r année` \n#'\n\nARA <- AR[AR$Catégorie == 'A', ]\nARB <- AR[AR$Catégorie == 'B', ]\nARC <- AR[AR$Catégorie == 'C', ]\n\n#'**Catégorie A**     \n#'\n#'     \n\nif (fichier.personnels.existe)\n{  \n  Résumé(c(\"Traitement indiciaire\",\n                étiquette.rém.indemn,\n                 \"Autres rémunérations\"),\n         ARA[c(\"traitement.indiciaire\",\n               \"rémunération.contractuelle.ou.indemnitaire\",\n               \"autres.rémunérations\")])\n} else\n  cat(\"Pas de statistique en l'absence de fichier des catégories.\\n\")\n\n#'\n\nif (fichier.personnels.existe)\n{  \n  Résumé(c(\"Total rémunérations\", \"Part de la rémunération contractuelle ou indemnitaire\"),\n         ARA[ c( \"total.rémunérations\", \"part.rémunération.contractuelle.ou.indemnitaire\")])\n}\n\n#'**Effectif : `r nrow(ARA)`**          \n#'\n#'##   \n#'        \n#'**Catégorie B**     \n#'     \n\nif (fichier.personnels.existe)\n{  \n  Résumé(c(\"Traitement indiciaire\",\n           étiquette.rém.indemn,\n           \"Autres rémunérations\"),\n         ARB[c(\"traitement.indiciaire\",\n               \"rémunération.contractuelle.ou.indemnitaire\",\n               \"autres.rémunérations\")])\n} else\n  cat(\"Pas de statistique en l'absence de fichier des catégories.\\n\")\n\n#'\n\nif (fichier.personnels.existe)\n{  \n  Résumé(c(\"Total rémunérations\", \"Part de la rémunération contractuelle ou indemnitaire\"),\n         ARB[ c( \"total.rémunérations\", \"part.rémunération.contractuelle.ou.indemnitaire\")])\n}\n#'\n#'**Effectif : `r nrow(ARB)`**          \n#'\n#'**Catégorie C**     \n#'\n#'     \n\nif (fichier.personnels.existe)\n{      \n  Résumé(c(\"Traitement indiciaire\",\n           étiquette.rém.indemn,\n           \"Autres rémunérations\"),\n         ARC[ c(\"traitement.indiciaire\",\n                \"rémunération.contractuelle.ou.indemnitaire\",\n               \"autres.rémunérations\")])\n} else\n  cat(\"Pas de statistique en l'absence de fichier des catégories.\\n\")\n\n#'\n\nif (fichier.personnels.existe)\n{  \n  Résumé(c(\"Total rémunérations\", \"Part de la rémunération contractuelle ou indemnitaire\"),\n         ARC[ c( \"total.rémunérations\", \"part.rémunération.contractuelle.ou.indemnitaire\")])\n}\n#'  \n#'**Effectif : `r nrow(ARC)`**     \n#'\n#'######      \n#'\n#'\n#'## 3.2 Contractuels, vacataires et stagiaires inclus\n#'\n\nhist(total.rémunérations[ ! Matricule %in% liste.matricules.élus & ! Statut %in% c(\"TITULAIRE\", \"STAGIAIRE\") & total.rémunérations > 1000]/1000,\n     xlab = \"Rémunération en milliers d'euros\\n hors politique familiale, indemnités journalières et remboursements\",\n     ylab = \"Effectif\",\n     xlim = c(0, 40),\n     main = paste(\"Rémunération annuelle totale des contractuels en\", année),\n     col = \"red\",\n     nclass = 50)\n\n#'\n#'**Nota:**   \n#'Ne sont retenues que les rémunérations supérieures à 1 000 euros.  \n#'Les élus ne sont pas pris en compte.   \n\nhist(positive(autres.rémunérations),\n     xlab = \"En euros :\\n politique familiale, indemnités journalières et remboursements\",\n     ylab = \"Effectif\",\n     xlim = c(0, 5000),\n     main = paste(\"Autres rémunérations en\", année),\n     col = \"grey\")\n#'    \n\nRésumé(c(étiquette.rém.indemn, \"Autres rémunérations\"),\n       Analyse.rémunérations.dernier.exercice[ ! Matricule %in% liste.matricules.élus & ! Statut %in% c(\"TITULAIRE\", \"STAGIAIRE\"), \n                             c(ic(\"rémunération.contractuelle.ou.indemnitaire\"), ic(\"autres.rémunérations\"))])\n\n#'\n\nAR <- Analyse.rémunérations.dernier.exercice[ ! Matricule %in% liste.matricules.élus & ! Statut %in% c(\"TITULAIRE\", \"STAGIAIRE\"), \n                                              \"total.rémunérations\"]\n\nRésumé(\"Total rémunérations\",   AR)\n#'   \n#'**Effectif : `r length(AR)`**     \n#'   \n\ndetach(Analyse.rémunérations.dernier.exercice)\n\n\n#'\n#'[Lien vers la base de données](Bases/Analyse.rémunérations.csv) d'analyse des rémunérations\n#'\n#'# \n#'\n\n########### Analyse dynamique ########################\n#'\n#'# 4. Rémunérations nettes : évolutions sur la période `r début.période.sous.revue` - `r fin.période.sous.revue` \n#'\n#'Nombre d'exercices: `r nombre.exercices`  \n#'    \n#'## 4.1 Rémunération nette moyenne sur la période\n\nattach(Analyse.variations.synthèse)\n\nhist(positive(moyenne.rémunération.annuelle.sur.période)/1000,\n     xlab = paste0(\"Sur la période \",début.période.sous.revue,\"-\",fin.période.sous.revue,\" en milliers d'euros\"),\n     ylab = \"Effectif\",\n     main = \"Rémunération nette moyenne\",\n     col = \"blue\",\n     nclass = 100)\n#'  \n#'##  \n#+ fig.height=4.5  \n\nhist(moyenne.rémunération.annuelle.sur.période[moyenne.rémunération.annuelle.sur.période >0 & (statut == \"TITULAIRE\"  | statut == \"STAGIAIRE\")]/1000,\nxlab = paste0(\"Sur la période \",début.période.sous.revue,\"-\",fin.période.sous.revue,\" en milliers d'euros\"),\nylab = \"Effectif\",\nmain = \"Rémunération nette moyenne des fonctionnaires\",\ncol = \"blue\",\nnclass = 100)\n\n#'\n#'[Lien vers la base de données](Bases/Analyse.variations.synthèse.csv)\n#'\n#'**Nota:** La rémunération nette perçue est rapportée au cumul des jours d'activité.  \n\nAnalyse.variations.synthèse.filtrée <- na.omit(Analyse.variations.synthèse[ nb.jours.exercice.début > seuil.troncature \n                                                                          & nb.jours.exercice.sortie   > seuil.troncature\n                                                                        #  &  statut %in% c(\"TITULAIRE\", \"STAGIAIRE\")\n                                                                          &  statut !=  \"AUTRE_STATUT\"\n                                                                              , c(ic(\"rémunération.début\"),\n                                                                                  ic(\"rémunération.sortie\"),\n                                                                                  ic(\"moyenne.rémunération.annuelle.sur.période\"),\n                                                                                  ic(\"variation.rémunération.jour\"),\n                                                                                  ic(\"variation.moyenne.rémunération.jour\"), \n                                                                                  \"plus.2.ans\",\n                                                                                  étiquette.matricule)])\n\nAnalyse.variations.synthèse.filtrée.plus.2.ans  <- Analyse.variations.synthèse.filtrée[Analyse.variations.synthèse.filtrée$plus.2.ans, ]\nAnalyse.variations.synthèse.filtrée.moins.2.ans <- Analyse.variations.synthèse.filtrée[! Analyse.variations.synthèse.filtrée$plus.2.ans, ]\n\n\ndetach(Analyse.variations.synthèse)\n#'  \n#'## 4.2 Evolutions des rémunérations nettes sur la période `r début.période.sous.revue` - `r fin.période.sous.revue` \n#'\n#'### 4.2.1 Ensemble des personnels fonctionnaires et non titulaires\n#'\n\n#'\nf <- function(x) prettyNum(sum(Analyse.variations.par.exercice[Analyse.variations.par.exercice$Année == x, \"Montant.net\"])/ 1000, big.mark = \" \", digits = 5, format = \"fg\")\n\nTableau.vertical(c(étiquette.année, \"Rémunération nette totale (k&euro;)\"), \n                 début.période.sous.revue:fin.période.sous.revue, \n                 f)\n\n\n#'\n#'[Lien vers la base de données](Bases/Analyse.variations.par.exercice.csv)\n#'\n#'######   \n#'\n\nRésumé(   c(\"Première année\",\n            \"Dernière année\",\n            \"Moyenne sur la période <br>d'activité\"),\n             Analyse.variations.synthèse.filtrée[1:3])\n\n#'\n\nRésumé(   c(\"Variation sur la période <br>d'activité\",\n            \"Variation annuelle moyenne\"),\n          Analyse.variations.synthèse.filtrée[4:5])\n\n#'\n#'**Effectif : `r nrow(Analyse.variations.synthèse.filtrée[étiquette.matricule])`**     \n#'\n#'[Lien vers la base de données](Bases/Analyse.variations.synthèse.filtrée.csv)\n#'\n#'### 4.2.2 Personnels fonctionnaires et non titulaires en place\n#'\n\nhist(Analyse.variations.synthèse.filtrée.plus.2.ans$variation.moyenne.rémunération.jour,\n     xlab =\"Variation annuelle moyenne en %\",\n     las = 1,\n     xlim = c(-5,30),\n     ylab =\"Effectifs\",\n     main =\"Rémunération nette des personnels en place\",\n     col =\"blue\",\n     nclass = 200)\n\n#'\n#'\n\nf <- function(x) prettyNum(sum(Analyse.variations.par.exercice[\n                               Analyse.variations.par.exercice$Année == x & Analyse.variations.par.exercice$plus.2.ans,\n                               \"Montant.net\"])/ 1000, big.mark = \" \", digits = 5, format = \"fg\")\n\nTableau.vertical(c(étiquette.année, \"Rémunération nette totale <br>des agents en place (k&euro;)\"), \n                 début.période.sous.revue:fin.période.sous.revue, \n                 f)\n\n\n#'\n\nRésumé(   c(\"Première année\",\n            \"Dernière année\",\n            \"Moyenne sur la période <br>d'activité\"),\n          Analyse.variations.synthèse.filtrée.plus.2.ans[1:3])\n\n#'\n\nRésumé(   c(\"Variation sur la période <br>d'activité\",\n            \"Variation annuelle moyenne\"),\n          Analyse.variations.synthèse.filtrée.plus.2.ans[4:5])\n#'     \n#'**Effectif :** `r nrow(Analyse.variations.synthèse.filtrée.plus.2.ans[étiquette.matricule])`    \n#'     \n#'[Lien vers la base de données](Bases/Analyse.variations.synthèse.filtrée.plus.2.ans.csv)\n#'     \n#'**Nota**    \n#'Personnels en place : en fonction au moins 730 jours sur la période `r début.période.sous.revue` à `r fin.période.sous.revue`     \n#'\n#'######   \n#'\n#'### 4.2.3 Personnels fonctionnaires et non titulaires en fonction moins de deux ans\n#'\n#'\nhist(Analyse.variations.synthèse.filtrée.moins.2.ans$variation.moyenne.rémunération.jour,\n     xlab =\"Variation annuelle moyenne en %\",\n     xlim = c(-10,30),\n     las = 1,\n     ylab =\"Effectifs\",\n     main =\"Rémunération nette des personnels en fonction moins de deux ans\",\n     col =\"turquoise\",\n     nclass = 100\n)\n\n#'\n#'##            \n#'\n\nf <- function(x) prettyNum(sum(Analyse.variations.par.exercice[\n  Analyse.variations.par.exercice$Année == x & ! Analyse.variations.par.exercice$plus.2.ans,\n  \"Montant.net\"])/ 1000, big.mark = \" \", digits = 5, format = \"fg\")\n\nTableau.vertical(c(étiquette.année, \"Rémunération nette totale <br>des agents en fonction moins de deux ans (k&euro;)\"), \n                 début.période.sous.revue:fin.période.sous.revue, \n                 f)\n\n#'\n#'\n\nRésumé(   c(\"Première année\",\n            \"Dernière année\",\n            \"Moyenne sur la période <br>d'activité\"),\n          Analyse.variations.synthèse.filtrée.moins.2.ans[1:3])\n\n#'\n\nRésumé(   c(\"Variation sur la période <br>d'activité\",\n            \"Variation annuelle moyenne\"),\n          Analyse.variations.synthèse.filtrée.moins.2.ans[4:5])\n#'\n#'     \n#'**Effectif :** `r nrow(Analyse.variations.synthèse.filtrée.moins.2.ans[étiquette.matricule])`    \n#'     \n\n#'\n########### Tests statutaires ########################\n#'\n#'[Lien vers la base de données](Bases/Analyse.variations.synthèse.filtrée.moins.2.ans.csv)\n#'\n#'**Nota:** Au 4.2 seuls sont pris en compte les personnels en fonction au moins 100 jours la première et la dernière année    \n#'Ne sont pas pris en compte les élus, stagiaires et apprentis ou assimilés.    \n#'\n#'Les résultats sont exprimés en euros.\n#'\n#'# 5. Tests réglementaires\n#'## 5.1 Contrôle des heures supplémentaires, des NBI et primes informatiques\n#'\n\nattach(Bulletins.paie.Lignes.paie, warn.conflicts = FALSE)\n\nNBI.aux.non.titulaires <- Bulletins.paie.Lignes.paie[ ! Statut %in% c(\"TITULAIRE\",\"STAGIAIRE\") \n                                                      & as.character(Code) %in% codes.NBI,\n                                                      c(étiquette.matricule,\n                                                        \"Statut\",\n                                                        \"Code\",\n                                                        étiquette.libellé,\n                                                        \"Mois\",\n                                                        étiquette.montant)]\n\nnombre.Lignes.paie.NBI.nontit <- nrow(NBI.aux.non.titulaires)\n\n#/* Prime de fonctions informatiques : pas dans la base de VLB\n# on cherche la chaine de char. \"INFO\" dans les libellés de primes\n\n# variante : filtre <- regexpr(\".*(INFO|PFI|P.F.I).*\", toupper(Bulletins.paie.Lignes.paie$Libellé)) et regmatches(Bulletins.paie.Lignes.paie$Libellé, filtre)*/\n\nfiltre<-grep(\".*(INFO|PFI|P.F.I).*\", Libellé)\n\npersonnels.prime.informatique <- Bulletins.paie.Lignes.paie[ filtre,\n                                                             c(étiquette.matricule,\n                                                               \"Statut\",\n                                                               \"Code\",\n                                                               étiquette.libellé,\n                                                               étiquette.montant)]\n\nprimes.informatiques.potentielles<-unique(Libellé[filtre])\n\nif  (length(primes.informatiques.potentielles) == 0) \n  primes.informatiques.potentielles <- \"aucune\"\n  \nnombre.personnels.pfi <- nrow(personnels.prime.informatique)\n\n#'Primes informatiques potentielles : `r primes.informatiques.potentielles`  \n\nTableau(\n  c(\"Nombre de lignes NBI pour non titulaires\",\n    \"Nombre de bénéficiaires de PFI\"),\n  nombre.Lignes.paie.NBI.nontit, \n  nombre.personnels.pfi)\n\n#'\n#'[Lien vers la base de données NBI aux non titulaires](Bases/NBI.aux.non.titulaires.csv)  \n#'[Lien vers la base de données Primes informatiques](Bases/personnels.prime.informatique.csv)  \n#'   \n#'**Nota :**  \n#'NBI: nouvelle bonification indiciaire  \n#'PFI: prime de fonctions informatiques  \n#'    \n#'## 5.2 Contrôle des vacations pour les fonctionnaires  \n\n# Vacations et statut de fonctionnaire\n\nlignes.fonctionnaires.et.vacations <- Bulletins.paie.Lignes.paie[ Statut %in% c(\"TITULAIRE\", \"STAGIAIRE\")\n                                                                  & Code %in% codes.paiement[codes.paiement[ic(\"Type.rémunération\")] == \"VACATIONS\",\"Code.rubrique\"],\n                                                                                             c(étiquette.matricule,\n                                                                                               \"Statut\",\n                                                                                               \"Code\",\n                                                                                               étiquette.libellé,\n                                                                                               étiquette.montant)]\n                                                                  \nmatricules.fonctionnaires.et.vacations <- unique(lignes.fonctionnaires.et.vacations$Matricule)\nnombre.fonctionnaires.et.vacations <- length(matricules.fonctionnaires.et.vacations)\nnombre.Lignes.paie.fonctionnaires.et.vacations <- nrow(lignes.fonctionnaires.et.vacations)\n\n#'\n\nTableau(\n  c(\"Nombre de FEV\",\n    \"Nombre de lignes de vacations pour FEV\"),\n  nombre.fonctionnaires.et.vacations,\n  nombre.Lignes.paie.fonctionnaires.et.vacations)\n\n#'\n#'[Lien vers la base de données Matricules des FEV](Bases/matricules.fonctionnaires.et.vacations.csv)  \n#'[Lien vers la base de données Lignes de vacations de FEV](Bases/lignes.fonctionnaires.et.vacations.csv)  \n#'   \n#'**Nota:**  \n#'FEV : fonctionnaire effectuant des vacations\n#'\n#'## 5.3 Contrôles sur les cumuls traitement indiciaire, indemnités et vacations des contractuels\n\n# Vacations et régime indemnitaire\n\nlignes.contractuels.et.vacations <- Bulletins.paie.Lignes.paie[ ! Statut %in% c(\"TITULAIRE\", \"STAGIAIRE\")  & Code %in% codes.paiement[codes.paiement$Type.rémunération == \"VACATIONS\",\"Code.rubrique\"], c(étiquette.matricule, \"Code\", étiquette.libellé, étiquette.montant)]\nmatricules.contractuels.et.vacations <- unique(lignes.contractuels.et.vacations$Matricule)\nnombre.contractuels.et.vacations <- length(matricules.contractuels.et.vacations)\n\nRI.et.vacations <- Bulletins.paie.Lignes.paie[ Matricule %in% matricules.contractuels.et.vacations & Code %in% codes.paiement[codes.paiement$Type.rémunération == \"INDEMNITAIRE.OU.CONTRACTUEL\",\"Code.rubrique\"], c(étiquette.matricule, \"Statut\", \"Code\", étiquette.libellé, étiquette.montant)]\n\n\n# Vacations et indiciaire\n\ntraitement.et.vacations <- Bulletins.paie.Lignes.paie[ Matricule %in% matricules.contractuels.et.vacations & Code %in% codes.paiement[codes.paiement$Type.rémunération == \"TRAITEMENT\",\"Code.rubrique\"], c(étiquette.matricule, \"Statut\", \"Code\", étiquette.libellé, étiquette.montant)]\n\nnombre.Lignes.paie.contractuels.et.vacations <- nrow(lignes.contractuels.et.vacations)\nnombre.Lignes.paie.RI.et.vacations <- nrow(RI.et.vacations)\nnombre.Lignes.paie.traitement.et.vacations <- nrow(traitement.et.vacations)\n\n#'\n\n#'**Contractuels effectuant des vacations (CEV)**  \n#'  \nTableau(c(\"Nombre de CEV\",\n          \"Nombre de lignes\",\n          \"Nombre de lignes indemnitaires\",\n          \"Nombre de lignes de traitement\"),\n          nombre.contractuels.et.vacations,\n          nombre.Lignes.paie.contractuels.et.vacations,\n          nombre.Lignes.paie.RI.et.vacations,\n          nombre.Lignes.paie.traitement.et.vacations)\n\n#'\n#'[Lien vers la base de données Matricules des CEV](Bases/matricules.contractuels.et.vacations.csv)  \n#'[Lien vers la base de données Lignes de paie de CEV](Bases/RI.et.vacations.csv)  \n#'[Lien vers la base de données Lignes de traitement indiciaire pour CEV](Bases/traitement.et.vacations.csv)  \n#'    \n#'     \n#'     \n#'## 5.4 Contrôle sur les indemnités IAT et IFTS\n\n#IAT et IFTS\n\nfiltre.iat<-grep(\".*(IAT|I.A.T|.*Adm.*Tech).*\", Libellé, ignore.case = TRUE)\nfiltre.ifts<-grep(\".*(IFTS|I.F.T.S|.*FORF.*TRAV.*SUPP).*\", Libellé, ignore.case = TRUE)\ncodes.ifts <- unique(Bulletins.paie.Lignes.paie[filtre.ifts, \"Code\"])\n\npersonnels.iat.ifts <- intersect(as.character(Bulletins.paie.Lignes.paie[ filtre.iat, c(étiquette.matricule)]),\n                                 as.character(Bulletins.paie.Lignes.paie[ filtre.ifts, c(étiquette.matricule)]))\n\nnombre.personnels.iat.ifts <- length(personnels.iat.ifts)\n\n#'\n\nTableau(c(\"Codes IFTS\", \"Nombre de personnels percevant IAT et IFTS\"), sep.milliers = \"\", paste0(codes.ifts, collapse = \" \"), nombre.personnels.iat.ifts)\n\n#'\n#'[Codes IFTS retenus](Bases/codes.ifts.csv)    \n#'[Lien vers la base de données](Bases/personnels.iat.ifts.csv)    \n#'\n#'### Contrôle sur les IFTS pour catégories B et contractuels\n\n#IFTS et IB >= 380 (IM >= 350)\n\ndf1 <- Bulletins.paie.Lignes.paie[ Indice < 350, c(étiquette.matricule)]\ndf1 <- df1[!duplicated(df1)]\n\ndf2 <- Bulletins.paie.Lignes.paie[ filtre.ifts, c(étiquette.matricule)]\ndf2 <- df2[!duplicated(df2)]\n\ndf3 <- intersect(df1,df2)\n\nlignes.ifts.anormales <- Bulletins.paie.Lignes.paie[Matricule %in% df3 & Code %in% codes.ifts & (Indice < 380 ), c(étiquette.matricule, \"Statut\", \"Code\", étiquette.libellé, \"Indice\", étiquette.montant)]\nnombre.lignes.ifts.anormales <- nrow(lignes.ifts.anormales)\n\nrm(df1, df2, df3)\n# IFTS et non tit\n\nifts.et.contractuel <- Bulletins.paie.Lignes.paie[Code %in% codes.ifts & ! Statut %in% c(\"TITULAIRE\", \"STAGIAIRE\"), c(étiquette.matricule, \"Statut\", \"Code\", étiquette.libellé, \"Indice\", étiquette.montant)]\nnombres.lignes.ifts.et.contractuel <- nrow(ifts.et.contractuel)\n\n#'\n\nTableau(c(\"Nombre de contractuels percevant des IFTS\", \"Nombre de lignes IFTS pour IB < 380\"), nombres.lignes.ifts.et.contractuel, nombre.lignes.ifts.anormales)\n\n#'\n#'[Lien vers la base de données Lignes IFTS pour contractuels](Bases/ifts.et.contractuel.csv)  \n#'[Lien vers la base de données Lignes IFTS pour IB < 380](Bases/lignes.ifts.anormales.csv)  \n#'       \n#'**Nota:**  \n#'IB < 380 : fonctionnaire percevant un indice brut inférieur à 380  \n#'\n#'######  \n#'\n#'## 5.5 Contrôle sur les heures supplémentaires\n\nHS.sup.25 <- Bulletins.paie.Lignes.paie[Heures.Sup. >= 25 , c(étiquette.matricule, étiquette.année, \"Mois\", \"Statut\", \"Heures.Sup.\", \"Brut\")]\nnombre.Lignes.paie.HS.sup.25 <- nrow(HS.sup.25)\n\n# with(Base2,\n#      ihts.anormales <<- Base2[! Code.catégorie %in% c(\"B\", \"C\") & substr(Code,1,2) %in% c(\"19\") & ! grepl(\" ENS\", Libellé), c(étiquette.matricule, \"Code\", étiquette.libellé, étiquette.montant, \"Code.catégorie\")]\n# )\n\nihts.anormales <- data.frame(NULL)\nnombre.ihts.anormales <- nrow(ihts.anormales)\n#'\n \nTableau(c(\"Nombre de lignes HS en excès\", \"Nombre de lignes IHTS anormales\"), nombre.Lignes.paie.HS.sup.25, nombre.ihts.anormales)\n\n#'\n#'[Lien vers la base de données Heures suplémentaires en excès](Bases/HS.sup.25.csv)  \n#'[Lien vers la base de données IHTS anormales](Bases/ihts.anormales.csv)  \n#'       \n#'**Nota:**  \n#'HS en excès : au-delà de 25 heures par mois  \n#'IHTS anormales : non attribuées à des fonctionnaires de catégorie B ou C.  \n#'\n#'#     \n#'   \n#'## 5.6 Contrôle sur les indemnités des élus\n#'     \n\nmatricules.à.identifier <- unique(Bulletins.paie.Lignes.paie[ , c(étiquette.année, \"Service\", \"Grade\", \"Nom\",  étiquette.matricule)])\n\nCatégorie <- character(length = nrow(matricules.à.identifier))\nmatricules.à.identifier <- cbind(matricules.à.identifier, Catégorie)\nmatricules.à.identifier <- matricules.à.identifier[order(matricules.à.identifier$Matricule, matricules.à.identifier$Année),]\n\nrémunérations.élus <- Analyse.rémunérations[ Analyse.rémunérations$indemnités.élu > 0,\n                                             c(étiquette.matricule,\n                                               ic(\"Année\"),\n                                               ic(\"indemnités.élu\"),\n                                               ic(\"autres.rémunérations\"),\n                                               ic(\"total.rémunérations\")) ]\n\nrémunérations.élus <- merge(unique(matricules.à.identifier[c(\"Nom\",  étiquette.matricule)]),\n                            rémunérations.élus,\n                            all.y = TRUE,\n                            all.x = FALSE)\n\nnames(rémunérations.élus) <- c(étiquette.matricule, \"Nom\", \"Année\", \"Indemnités d'élu (euros)\", \"Autres rémunérations (euros)\", \"Total (euros)\")\n#'\nkable(rémunérations.élus, row.names = FALSE)\n#'     \n\nSauv.base(chemin(\"Bases\"), ic(\"matricules.à.identifier\"), fichier.personnels)\n\n#'[Lien vers la base de données Rémunérations des élus](Bases/rémunérations.élus.csv)  \n#'     \n\n#'# Annexe\n\n#'## Liens complémentaires\n#'     \n#'[Lien vers la base de données fusionnées des bulletins et lignes de paie](Bases/Bulletins.paie.Lignes.paie.csv)\n#'      \n#'[Lien vers le tableau des codes de paiement](Bases/codes.paiement.csv)\n#'\n#'[Lien vers le fichier des personnels](Bases/Catégories des personnels.csv)\n#'\n\nwith( Lignes.paie,\n      \n    codes.paiement <<- unique(Lignes.paie[  Montant > 0 \n                                              & nchar(as.character(Code)) == 4 \n                                              & as.numeric(substr(Code, 1,1)) < 5,\n                                              c(\"Code\", étiquette.libellé)]))\n\ncodes.paiement <- cbind(codes.paiement[order(substr(codes.paiement$Code,1,3)), ],\n                        character(nrow(codes.paiement)))\n\nnames(codes.paiement)[3] <- étiquette.Type.rémunération\n\n#'---\n#'   \n#'# Tableau des codes de paiement\n#'\n#'##  Renseigner le type de rémunération\n#'\n#'Utiliser les codes : TRAITEMENT, INDEMNITAIRE.OU.CONTRACTUEL, ELU, AUTRES  \n#'  \n#'  \nkable(codes.paiement, row.names = FALSE)\n#'                             \n#'\n#'<!-- BREAK -->\n#'\n#'                             \n#'# Tableau des personnels : renseigner la catégorie  \n#'\n#'Utiliser les codes : A, B, C, ELU, AUTRES    \n#'\n#'En cas de changement de catégorie en cours de période, utiliser la catégorie AUTRES   \n#'Cela peut conduire à modifier manuellement le fichier Catégories des personnels.csv\n#'\nkable(matricules.à.identifier, row.names = FALSE)\n#'\n\ndetach(Bulletins.paie.Lignes.paie)\n\n#/* ------------------------------------------------------------------------------------------------------------------*/\n#  Sauvegardes : enlever les commentaires en mode opérationnel\n##\n\n\nif (sauvegarder.bases) \n  sauv.bases(\"Bases\",\n    \"Analyse.variations.par.exercice\",\n    \"Analyse.variations.synthèse\",\n    \"Analyse.variations.synthèse.filtrée\",\n    \"Analyse.variations.synthèse.filtrée.plus.2.ans\",\n    \"Analyse.variations.synthèse.filtrée.moins.2.ans\",\n    \"Analyse.rémunérations\",\n    \"Bulletins.paie.nir.total.hors.élus\",\n    \"Bulletins.paie.nir.fonctionnaires\",\n    \"Bulletins.paie.Lignes.paie\", \n    \"NBI.aux.non.titulaires\",\n    \"RI.et.vacations\",\n    \"HS.sup.25\",\n    \"ihts.anormales\",\n    \"personnels.prime.informatique\",\n    \"liste.matricules.fonctionnaires\",\n    \"lignes.contractuels.et.vacations\",\n    \"lignes.fonctionnaires.et.vacations\",\n    \"lignes.ifts.anormales\",\n    \"personnels.iat.ifts\",\n    \"codes.ifts\",\n    \"ifts.et.contractuel\",\n    \"traitement.et.vacations\",\n    \"matricules.contractuels.et.vacations\",\n    \"matricules.fonctionnaires.et.vacations\",\n    \"rémunérations.élus\",\n    \"codes.paiement\")\n\n\n\n\n",
    "created" : 1399717908966.000,
    "dirty" : false,
    "encoding" : "ISO8859-1",
    "folds" : "",
    "hash" : "1882599168",
    "id" : "E4B15E7D",
    "lastKnownWriteTime" : 1399734969,
    "path" : "C:/Users/Public/Dev/altair/Tests/Exemple/exemple.R",
    "project_path" : "Tests/Exemple/exemple.R",
    "properties" : {
        "notebook_format" : "pdf_document"
    },
    "source_on_save" : false,
    "type" : "r_source"
}