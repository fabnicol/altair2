{
    "contents" : "# prologue\n# doit être dans le même répertoire que le programme principal et sa bibliothèque\n\n# dans le cas où l'on ne lance le programme que pour certaines années, il préciser début.période sous revue et fin.période .sous.revue\n# Dans ce cas fixer extraire.années en valeur TRUE.\n# Sinon le programme travaille sur l'ensemble des années disponibles dans la base : elles sont détectées automatiquement.\n\n# PARAMETRES GLOBAUX BOOLEENS ET ENTIERS\n\n\nracine                      <- \"R-Altair/\"\n# \"Ville Annecy Paye BP-\"\n# \"UTF-8.PDC-\"\n# \"RAG_2009_2012-\"\n# \"UTF-8.RAG_2009_2012-\"\n# \"UTF-8.SIERG-\"\n# \"UTF-8.RAG_2009_2012-\"\n# \"RAG_2009_2012-\"\n\nextraire.années      <- F\n    début.période.sous.revue    <- 2011\n    fin.période.sous.revue      <- 2013\n\nsetOSWindows            <- Sys.info()[\"sysname\"] != \"Linux\"\nexec.root               <- ifelse(setOSWindows, \".exe\", \"\")\n\néliminer.duplications   <- T\nenlever.quotités.nulles <- T\nenlever.quotités.na     <- T\nécreter.quotités        <- T\ngénérer.codes           <- FALSE\nparalléliser            <- TRUE\nextraire.population     <- FALSE\nfusionner.nom.prénom    <- FALSE\ncharger.bases           <- T\nsauvegarder.bases.analyse    <- T\nsauvegarder.bases.origine    <- F\ngénérer.table.effectifs      <- F\ngénérer.table.élus           <- F\ntester.matricules            <- TRUE\ntester.lignes.bulletins.mois <- TRUE\ncorriger.quotité         <- FALSE\ncomportement.strict      <- TRUE\netp.égale.effectif       <- FALSE\n\nseuil.troncature         <- 0 # jours\ntaux.tolérance.homonymie <- 2  # en %\nquantile.cut             <- 1  # en %\nminimum.positif          <- 0.5\nminimum.quotité          <- 0.1\npopulation_minimale_calcul_médiane  <- 3\n\nséparateur.liste.entrée     <- \",\"\nséparateur.décimal.entrée   <- \".\"\nséparateur.liste.sortie     <- \";\"\nséparateur.décimal.sortie   <- \",\"\n\n# FICHIERS EN INPUT\n# conventions de nommage : les noms et chemins sont en minuscules ;\n# les bases commencent par une majuscule. Un nom de fichier est souvent associé\n# à une variable commençant par une majuscule et représentant la base (data.frame ou matrice)\n\nnom.fichier.codes.paiement  <- paste0(racine, \"codes.csv\")\nfichier.personnels          <- \"Catégories des personnels\"\nnom.fichier.personnels      <- paste0(fichier.personnels, \".csv\")\nnom.fichier.paie            <- paste0(racine, \"Lignes de paye\")\nnom.bulletin.paie           <- paste0(racine, \"Bulletins de paye\")\nnom.table                   <- paste0(racine, \"Table_1.csv\")\nnom.bulletins                   <- paste0(racine, \"Bulletins_1.csv\")\n\n# DOSSIERS\n# Attention, si l'on lance la génération de document pour la première fois sans répertoire Bases existant, on aura un write error.\n# pour les applications à ergonomie facilitée, prévoir de distribuer le logiciel avec un dossier Bases déjà généré.\n\nchemin.dossier              <- getwd()\nchemin.dossier.bases        <- file.path(chemin.dossier, \"Bases\")\nchemin.dossier.outils       <- file.path(chemin.dossier, \"..\", \"..\", \"Outils\")\nchemin.dossier.données      <- file.path(chemin.dossier, \"Donnees\")\n\n# Outils\n\nif (setOSWindows) {\n  iconv <- file.path(chemin.dossier.outils, paste0(\"iconv\", exec.root))\n  sed   <- file.path(chemin.dossier.outils, paste0(\"sed\", exec.root))\n} else {\n  iconv <- \"iconv\"  \n  sed   <- \"sed\"\n}\n\n\n# ETIQUETTES ET FORMATS\n\nétiquette.matricule         <- \"Matricule\"\nétiquette.Type.rémunération <- \"Type rémunération\"\nétiquette.année             <- \"Année\"\nétiquette.libellé           <- \"Libellé\"\nétiquette.montant           <- \"Montant\"\nétiquette.code              <- \"Code\"\nétiquette.rém.indemn        <- \"Rémunération contractuelle ou indemnitaire\"\nchamp.détection.1           <- étiquette.matricule\nchamp.détection.2           <- \"Code\"\n\n\nifelse(fusionner.nom.prénom,\n       clé.fusion <<- c(\"Nom\", \"Prénom\"),\n       clé.fusion <<- étiquette.matricule)\n\ncolonnes.requises           <- c(union(clé.fusion, étiquette.matricule),\n                                 étiquette.année,\n                                 \"Mois\",\n                                 \"Statut\",\n                                 \"Brut\",\n                                 \"Net.à.Payer\",\n                                 \"Heures.Sup.\",\n                                 \"Heures\",\n                                 \"Emploi\",\n                                 \"Nir\",\n                                 \"Temps.de.travail\")\n\ncolonnes.input <- c(\"Année\", \"Mois\", \"Nom\", \"Prénom\", \"Matricule\",\n                    \"Service\", \"Statut\", \"Temps.de.travail\", \"Heures.Sup.\", \"Heures\",\n                    \"Indice\", \"Brut\", \"Net\", \"Net.à.Payer\", \"NBI\",\n                    \"Libellé\", \"Code\", \"Base\", \"Taux\", \"Nb.Unité\",\n                    \"Montant\", \"Type\", \"Emploi\", \"Grade\", \"Nir\")\n\ncolonnes.classes.input    <- c(\"integer\", \"integer\", \"character\", \"character\", \"character\", \n                               \"character\", \"character\", \"numeric\", \"numeric\", \"numeric\",\n                               \"character\",  \"numeric\", \"numeric\", \"numeric\", \"numeric\",\n                               \"character\",  \"character\", \"numeric\", \"numeric\", \"numeric\",\n                               \"numeric\", \"character\", \"character\", \"character\", \"character\")\n\ncolonnes.bulletins.input <- c(\"Année\", \"Mois\", \"Nom\", \"Prénom\", \"Matricule\",\n                              \"Service\", \"Statut\", \"Temps.de.travail\", \"Heures.Sup.\", \"Heures\",\n                              \"Indice\", \"Brut\", \"Net\", \"Net.à.Payer\", \"NBI\",\n                              \"Emploi\", \"Grade\", \"Nir\")\n\ncolonnes.bulletins.classes.input <- c(\"integer\", \"integer\", \"character\", \"character\", \"character\", \n                                      \"character\", \"character\", \"numeric\", \"numeric\", \"numeric\",\n                                      \"character\",  \"numeric\", \"numeric\", \"numeric\", \"numeric\",\n                                      \"character\", \"character\", \"character\")\n\nlignes.paie.input               <- c(\"Année\", \"Mois\", \"Matricule\", \"Année\", \"Mois\", \"Matricule\", \"Libellé\", \"Code\", \"Base\", \"Taux\", \"Montant\")\n\nlignes.paie.input.fallback      <- c(\"Année\", \"Mois\", \"Matricule\", \"Libellé\", \"Code\", \"Base\", \"Taux\", \"Montant\")\n\nlignes.paie.classes.input       <- c(\"integer\", \"integer\", \"character\", \"integer\", \"integer\", \"character\", \"character\", \"character\", \"numeric\", \"numeric\", \"numeric\")\n\nlignes.paie.classes.input.fallback <- c(\"integer\", \"integer\", \"character\", \"character\", \"character\", \"numeric\", \"numeric\", \"numeric\")\n\ndate.format                      <- \"%d/%m/%Y\"\n\n# ESPACES DE VALEURS LICITES POUR CERTAINS CHAMPS (modalités)\n\n#libellés.élus               <- c(\"Elu\", \"Elus\", \"élu\", \"élus\", \"maire\", \"président\", \"adjoint au maire\", \"vice-président\", \"vice président\")\n\n########## Problématique ##############\ncodes.NBI <- c(\"1012\", \"101B\", \"101M\", \"4652\", \"4672\")\n\n\n# A priori les deux modes de lectures de tables (rapide et standard) lisent aussi bien le Windows ANSI/ISO-8859-1 que \n# l'UTF-8 à condition que le Windows ANSI soit encodé par Excel ou l'éditeur de RStudio.\n\nencodage.entrée <- \"ISO-8859-1\"\n  # \"WINDOWS-1252\"\n  # \"UTF-8\"\n  # \"ISO-8859-1\"\nencodage.entrée.xhl2csv <- \"UTF-8\"\n\nencodage.sortie <- ifelse(setOSWindows, \"ISO-8859-15\", encodage.entrée)\n\nmodalité.traitement            <- \"TRAITEMENT\"     # s'applique aussi aux NBI\nmodalité.indemnitaire          <- \"INDEMNITAIRE\"   # hors vacations\n\n\nmodalité.principal.contractuel <- \"PRINCIPAL.CONTRACTUEL\" # contractuels qui ne sont pas payés par référénece à un traitement indiciaire.\nmodalité.élu                   <- \"ELU\"\nmodalité.vacations             <- \"VACATIONS\"\nmodalité.autres                <- \"AUTRES\"         # notamment les remboursements de frais professionnels, de transport et les restitutions/régularisations\n\n\n# expressions régulières\n\n\nexpression.rég.heures.sup <- \".*(I.?H.?T|H.?[SC]|\\\\bI[[:alpha:]]*.?.*\\\\bH[[:alpha:]]*.?\\\\b.*T[[:alpha:]]*.?.*|\\\\bH[[:alpha:]]*.?\\\\b.*[SC][[:alpha:]]*.?\\\\b).*\"\nexpression.rég.iat        <- \".*(\\\\bi.?a.?t\\\\b|\\\\bi[[:alpha:]]*.?\\\\b.*a[d][[:alpha:]]*.?\\\\b.*tec[[:alpha:]]*.?\\\\b).*\"\nexpression.rég.ifts       <- \".*(\\\\bi.?f.?t.?s\\\\b|\\\\bi[[:alpha:]]*.?\\\\b\\\\s*f[[:alpha:]]*.?\\\\b\\\\s*trav[[:alpha:]]*.?\\\\b\\\\s*s[[:alpha:]]*.?\\\\b).*\"\nexpression.rég.population <- \".*\\\\bASS(\\\\b|A).*\"\nexpression.rég.élus       <- \"maire|pr[eé]sident|.*([eé]lu[s]?|adj.*maire|v[[:alpha:]]*\\\\b\\\\s*pr[eé]sident|cons[[:alpha:]]*\\\\b\\\\s*muni|cons[[:alpha:]]*\\\\b\\\\s*commun).*\"\nexpression.rég.nbi        <- \".*\\\\bN[[:alpha:]]*.?\\\\s*B[[:alpha:]]*.?\\\\s*I.*\"\n\n",
    "created" : 1417026010867.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2505987638",
    "id" : "28871083",
    "lastKnownWriteTime" : 1417020420,
    "path" : "C:/Dev/altair/Tests/Exemple/prologue.R",
    "project_path" : "Tests/Exemple/prologue.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}