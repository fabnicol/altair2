{
    "data" : [
        "\nR version 3.1.2 (2014-10-31) -- \"Pumpkin Helmet\"\nCopyright (C) 2014 The R Foundation for Statistical Computing\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "> ",
        "source.with.encoding('C:/Dev/altair/Tests/Exemple/altair.R', encoding='UTF-8')",
        "knitr est déjà installé.\n",
        "digest est déjà installé.\n",
        "colorspace est déjà installé.\n",
        "ggplot2 est déjà installé.\n",
        "assertthat est déjà installé.\n",
        "yaml est déjà installé.\n",
        "gtools est déjà installé.\n",
        "utils est déjà installé.\n",
        "data.table est déjà installé.\n",
        "parallel est déjà installé.\n",
        "\nAttaching package: ‘ggplot2’\n\n",
        "The following object is masked _by_ ‘.GlobalEnv’:\n\n    %+%\n\n",
        "data.table 1.9.4  For help type: ?data.table\n",
        "*** NB: by=.EACHI is now explicit. See README to restore previous behaviour.\n",
        "Chargement de la table bulletins-lignes de Paie.\n",
        "Chargement direct des bulletins et lignes de paie\n",
        "Chargement de la table bulletins-lignes de Paie.\n",
        "Chargement direct des bulletins et lignes de paie\n",
        "Contrôle des noms de colonne des bulletins de paie : normal.\n",
        "Calcul des quotités\n",
        "Quotités calculées\n",
        "Indicatrice RMPP calculée\n",
        "Bulletins de Paie retraités\n",
        "Analyse des rémunérations réalisée.\n",
        "Analyse des variations réalisée.\n",
        "Analyse démographique réalisée.\n",
        "Statistiques de synthèse réalisées\n",
        "Pas de statistique en l'absence de fichier des catégories.\nPas de statistique en l'absence de fichier des catégories.\nPas de statistique en l'absence de fichier des catégories.\nPas de statistique en l'absence de fichier des catégories.\nPas de statistique en l'absence de fichier des catégories.\nPas de statistique en l'absence de fichier des catégories.\nIl existe  1 non titulaire   percevant une NBI.Il y a  0 fonctionnaire(s) effectuant des vacations pour son propre établissement. Les bulletins concernés sont donnés en lien.",
        "Tableau des indemnités d'élu : non générée.",
        "Sauvegarde de matricules\n",
        "Retraitement de la base : Elimination de  52  lignes dupliquéesNombre de bulletins de paye de salaires (net ou brut) versés pour un champ Heures = 0 :  5057",
        "Dans le dossier C:/Dev/altair/Tests/Exemple/Bases/Rémunérations :\n",
        "Sauvegarde de Analyse.rémunérations\n",
        "Sauvegarde de Analyse.variations.synthèse\n",
        "Sauvegarde de Analyse.variations.par.exercice\n",
        "Sauvegarde de masses.premier.personnels\n",
        "Sauvegarde de masses.premier.élus\n",
        "Sauvegarde de masses.dernier.personnels\n",
        "Sauvegarde de masses.dernier.élus\n",
        "Dans le dossier C:/Dev/altair/Tests/Exemple/Bases/Effectifs :\n",
        "Sauvegarde de Bulletins.paie.nir.total.hors.élus\n",
        "Sauvegarde de Bulletins.paie.nir.fonctionnaires\n",
        "Sauvegarde de Bulletins.paie.nir.nontit\n",
        "Sauvegarde de Bulletins.paie.nir.permanents\n",
        "Sauvegarde de tableau.effectifs\n",
        "Dans le dossier C:/Dev/altair/Tests/Exemple/Bases/Réglementation :\n",
        "Sauvegarde de base.iat.ifts\n",
        "Sauvegarde de codes.ifts\n",
        "Sauvegarde de HS.sup.25\n",
        "Sauvegarde de ifts.et.contractuel\n",
        "Sauvegarde de ihts.anormales\n",
        "Sauvegarde de lignes.contractuels.et.vacations\n",
        "Sauvegarde de lignes.fonctionnaires.et.vacations\n",
        "Sauvegarde de lignes.ifts.anormales\n",
        "Sauvegarde de matricules.contractuels.et.vacations\n",
        "Sauvegarde de matricules.fonctionnaires.et.vacations\n",
        "Sauvegarde de NBI.aux.non.titulaires\n",
        "Sauvegarde de personnels.prime.informatique\n",
        "Sauvegarde de personnels.iat.ifts\n",
        "Sauvegarde de rémunérations.élu\n",
        "Sauvegarde de RI.et.vacations\n",
        "Sauvegarde de traitement.et.vacations\n",
        "Dans le dossier C:/Dev/altair/Tests/Exemple/Bases/Fiabilité :\n",
        "Sauvegarde de base.heures.nulles.salaire.nonnull\n",
        "Sauvegarde de base.quotité.indéfinie.salaire.nonnull\n",
        "> ",
        ".libPath()",
        "Error: could not find function \".libPath\"\n",
        "> ",
        ".libPaths()",
        "[1] \"C:/Dev/altair/lib\"                        \"C:/Users/Fab/Documents/R/win-library/3.1\" \"C:/Program Files/R/R-3.1.2/library\"      \n",
        "> ",
        "source.with.encoding('C:/Dev/altair/Tests/Exemple/altair.R', encoding='UTF-8')",
        "knitr est déjà installé.\n",
        "digest est déjà installé.\n",
        "colorspace est déjà installé.\n",
        "ggplot2 est déjà installé.\n",
        "assertthat est déjà installé.\n",
        "yaml est déjà installé.\n",
        "gtools est déjà installé.\n",
        "utils est déjà installé.\n",
        "data.table est déjà installé.\n",
        "parallel est déjà installé.\n",
        "Chargement de la table bulletins-lignes de Paie.\n",
        "Chargement direct des bulletins et lignes de paie\n",
        "Chargement de la table bulletins-lignes de Paie.\n",
        "Chargement direct des bulletins et lignes de paie\n",
        "Contrôle des noms de colonne des bulletins de paie : normal.\n",
        "Calcul des quotités\n",
        "Quotités calculées\n",
        "Indicatrice RMPP calculée\n",
        "Bulletins de Paie retraités\n",
        "Analyse des rémunérations réalisée.\n",
        "Analyse des variations réalisée.\n",
        "Analyse démographique réalisée.\n",
        "Statistiques de synthèse réalisées\n",
        "Pas de statistique en l'absence de fichier des catégories.\nPas de statistique en l'absence de fichier des catégories.\nPas de statistique en l'absence de fichier des catégories.\nPas de statistique en l'absence de fichier des catégories.\nPas de statistique en l'absence de fichier des catégories.\nPas de statistique en l'absence de fichier des catégories.\nIl existe  1 non titulaire   percevant une NBI.Il y a  0 fonctionnaire(s) effectuant des vacations pour son propre établissement. Les bulletins concernés sont donnés en lien.",
        "Tableau des indemnités d'élu : non générée.",
        "Sauvegarde de matricules\n",
        "Retraitement de la base : Elimination de  52  lignes dupliquéesNombre de bulletins de paye de salaires (net ou brut) versés pour un champ Heures = 0 :  5057",
        "Dans le dossier C:/Dev/altair/Tests/Exemple/Bases/Rémunérations :\n",
        "Sauvegarde de Analyse.rémunérations\n",
        "Sauvegarde de Analyse.variations.synthèse\n",
        "Sauvegarde de Analyse.variations.par.exercice\n",
        "Sauvegarde de masses.premier.personnels\n",
        "Sauvegarde de masses.premier.élus\n",
        "Sauvegarde de masses.dernier.personnels\n",
        "Sauvegarde de masses.dernier.élus\n",
        "Dans le dossier C:/Dev/altair/Tests/Exemple/Bases/Effectifs :\n",
        "Sauvegarde de Bulletins.paie.nir.total.hors.élus\n",
        "Sauvegarde de Bulletins.paie.nir.fonctionnaires\n",
        "Sauvegarde de Bulletins.paie.nir.nontit\n",
        "Sauvegarde de Bulletins.paie.nir.permanents\n",
        "Sauvegarde de tableau.effectifs\n",
        "Dans le dossier C:/Dev/altair/Tests/Exemple/Bases/Réglementation :\n",
        "Sauvegarde de base.iat.ifts\n",
        "Sauvegarde de codes.ifts\n",
        "Sauvegarde de HS.sup.25\n",
        "Sauvegarde de ifts.et.contractuel\n",
        "Sauvegarde de ihts.anormales\n",
        "Sauvegarde de lignes.contractuels.et.vacations\n",
        "Sauvegarde de lignes.fonctionnaires.et.vacations\n",
        "Sauvegarde de lignes.ifts.anormales\n",
        "Sauvegarde de matricules.contractuels.et.vacations\n",
        "Sauvegarde de matricules.fonctionnaires.et.vacations\n",
        "Sauvegarde de NBI.aux.non.titulaires\n",
        "Sauvegarde de personnels.prime.informatique\n",
        "Sauvegarde de personnels.iat.ifts\n",
        "Sauvegarde de rémunérations.élu\n",
        "Sauvegarde de RI.et.vacations\n",
        "Sauvegarde de traitement.et.vacations\n",
        "Dans le dossier C:/Dev/altair/Tests/Exemple/Bases/Fiabilité :\n",
        "Sauvegarde de base.heures.nulles.salaire.nonnull\n",
        "Sauvegarde de base.quotité.indéfinie.salaire.nonnull\n",
        "> ",
        "source.with.encoding('C:/Dev/altair/Tests/Exemple/altair.R', encoding='UTF-8', echo=TRUE)",
        "\n> #'---\n> #'title: false\n> #'author: false\n> #'date: false\n> #'output:\n> #'html_document:\n> #'css: style.css\n> #'---\n> \n> #'<p class = \"centered\"><img .... [TRUNCATED] \n\n> #write.csv(unique(Paie[Paie$delta > 500 & Paie$Montant > 500 & Paie$Type %chin% c(\"A\", \"I\", \"R\", \"AV\", \"A\"), c(\"Type\",  \"Libellé\", \"Code\"), with=F]) .... [TRUNCATED] \n\n> encodage.code.source <- \"UTF-8\" #\"ISO-8859-15\"\n\n> # encodage :sous unix, les fichiers sources devraient être encodés en UTF-8 pour\n> # permettre une génération correcte des documents sous Windows, e",
        " .... [TRUNCATED] \n\n> source(\"prologue.R\", encoding = encodage.code.source)\n\n> compilerOptions <- setCompilerOptions(suppressAll = TRUE)\n\n> JITLevel <- enableJIT(1)\n\n> source(file.path(chemin.dossier, \"bibliotheque.fonctions.paie.R\"), encoding = encodage.code.source)\n\n> dir.create(chemin.dossier.lib, recursive = TRUE)\n\n> .libPaths(union(chemin.dossier.lib, .libPaths()))\n\n> installer.paquets(knitr, digest, colorspace, ggplot2, assertthat, yaml, gtools, utils, data.table)\n",
        "knitr est déjà installé.\n",
        "digest est déjà installé.\n",
        "colorspace est déjà installé.\n",
        "ggplot2 est déjà installé.\n",
        "assertthat est déjà installé.\n",
        "yaml est déjà installé.\n",
        "gtools est déjà installé.\n",
        "utils est déjà installé.\n",
        "data.table est déjà installé.\n",
        "\n> if (paralléliser) installer.paquets(parallel)\n",
        "parallel est déjà installé.\n",
        "\n> # + parallel, soSNOW (windows) ou doMC (unix))\n> \n> # version parallélisée : à ce stade les tests ne sont pas concluant sur les applications de ddpl .... [TRUNCATED] \n\n> library(ggplot2)\n\n> library(assertthat)\n\n> library(gtools)\n\n> library(data.table)\n\n> if (séparateur.décimal.entrée != \".\")\n+   stop(\"Pour les tables importées par data.table::fread, le séparateur décimal doit être '.'\")\n\n> if (séparateur.décimal.entrée == séparateur.liste.entrée)\n+   stop(\"Le séparateur décimal en entrée doit être différent du séparateur de colonnes !\"",
        " .... [TRUNCATED] \n\n> if (séparateur.décimal.sortie == séparateur.liste.sortie)\n+   stop(\"Le séparateur décimal en sortie doit être différent du séparateur de colonnes !\" .... [TRUNCATED] \n\n> if (sauvegarder.bases.analyse) {\n+   for (path in c(\"Rémunérations\", \"Effectifs\", \"Réglementation\", \"Fiabilité\"))\n+     dir.create(file.path(chemin. .... [TRUNCATED] \n\n> if (sauvegarder.bases.origine)\n+   dir.create(file.path(chemin.dossier.bases, \"Paiements\"), recursive = TRUE)\n\n> # problème temporaire avec l'option fig.retina depuis fin mai 2014\n> \n> knitr::opts_chunk$set(fig.width = 7.5, echo = FALSE, warning = FALSE, messag",
        " .... [TRUNCATED] \n\n> # Contrôle de cohérence\n> #  on vérifie que chaque code de paie est associé, dans le fichier des codes de paiement (par défaut, racinecodes.csv),\n>  .... [TRUNCATED] \n\n> if (fichier.personnels.existe) {\n+   base.personnels.catégorie <- read.csv.skip(nom.fichier.personnels, séparateur.liste = séparateur.liste.entrée,  .... [TRUNCATED] \n\n> # Lignes de paie\n> # On peut lire jusqu'à 50 fichiers csv de lignes de paie qui seront générés au format :\n> \n> # \"chemin dossier + racine-Lignes de",
        " ...\" ... [TRUNCATED] \n\n> lignes.paie <- lignes.paie[file.exists(chemin(lignes.paie))]\n\n> # Bulletins de paie\n> # On peut lire jusqu'à 10 fichiers csv de bulletins de paie qui seront générés au format :\n> \n> # \"chemin dossier + racine-Bul ...\" ... [TRUNCATED] \n\n> bulletins.paie <- bulletins.paie[file.exists(chemin(bulletins.paie))]\n\n> nom.table      <- nom.table[file.exists(chemin(nom.table))]\n\n> # Programme principal\n> \n> # Bases\n> \n> # Lignes de paie\n> \n> # On ne retient que les bases ayant pour années au minimum début.période.sous.revue\n> ",
        " .... [TRUNCATED] \n\n> importer.bases.via.xhl2csv <- function(base, table = nom.table, colClasses = colonnes.classes.input, colNames =  colonnes.input) {\n+ \n+   res <- try .... [TRUNCATED] \n\n> importer.bases.via.xhl2csv(\"Paie\")\n",
        "Chargement de la table bulletins-lignes de Paie.\n",
        "Chargement direct des bulletins et lignes de paie\n",
        "\n> importer.bases.via.xhl2csv(\"Bulletins.paie\", nom.bulletins, colClasses =  colonnes.bulletins.classes.input, colNames = colonnes.bulletins.input)\n",
        "Chargement de la table bulletins-lignes de Paie.\n",
        "Chargement direct des bulletins et lignes de paie\n",
        "\n> if (! extraire.années) {\n+   début.période.sous.revue <- min(Paie[[1]])\n+   fin.période.sous.revue   <- max(Paie[[1]])\n+ }\n\n> #'<p class = \"centered\"><b>Exercices `r paste(début.période.sous.revue, \"à\", fin.période.sous.revue)` </b></p>\n> #'<p class = \"author\">Fabrice Nicol .... [TRUNCATED] \n\n> # dans le cas où l'on ne lance le programme que pour certaines années, il préciser début.période sous revue et fin.période .sous.revue\n> # dans le f .... [TRUNCATED] \n\n> période                 <- début.période.sous.revue:fin.période.sous.revue",
        "\n\n> durée.sous.revue        <- fin.période.sous.revue - début.période.sous.revue + 1\n\n> message(\"Contrôle des noms de colonne des bulletins de paie : normal.\")\n",
        "Contrôle des noms de colonne des bulletins de paie : normal.\n",
        "\n> # Lors de la PREMIERE utilisation d'Altair, paramétrer générer.codes <- TRUE dans prologue.R\n> # pour générer les fichier des codes de paiement sous .... [TRUNCATED] \n\n>   # Paie <- en raison du fonctionnement de knitr sinon inutile\n> \n> setkey(Paie, Matricule, Année, Mois)\n\n> setkey(Bulletins.paie, Matricule, Année, Mois)\n\n> Paie <- Paie[ , Filtre_actif := any(Montant[Type == \"T\"] \n+                                             & Heures > minimum.positif, na.rm = TRUE), b .... [TRUNCATED] \n\n> Paie <- Paie[ , `:=`(delta = sum(Montant*(  Type == \"I\"\n+                                         | Type == \"T\"\n+                                   ",
        " .... [TRUNCATED] \n\n> #Bulletins.paie <- unique(Paie[ , .(Matricule, Nom, Année, Mois, Temps.de.travail, Heures,  Statut, Emploi, Grade, Brut, Net.à.Payer, Nir)], by = NU .... [TRUNCATED] \n\n> # Attention, NA, pas FALSE\n> \n> set(Bulletins.paie, 1, \"R\", NA)\n\n> # Médiane des services horaires à temps complet par emploi et par sexe \n> \n> # La variable Heures des élus est non fiable et on peut par convention  .... [TRUNCATED] \n",
        "Calcul des quotités\n",
        "\n> #on va trouver la plupart du temps 151,67...\n> # Tableau de référence des matrices de médianes\n> # A ce niveau de généralité, le filtre actif est in .... [TRUNCATED] \n\n> Bulletins.paie <- merge(Bulletins.paie, Paie[, .(Filtre_actif=Filtre_actif[1]), by=\"Matricule,Année,Mois\"], all.x=TRUE, all.y=FALSE)\n\n> Bulletins.paie <- Bulletins.paie[ , pop_calcul_médiane := length(Heures[Temps.de.travail == 100 \n+                                                   .... [TRUNCATED] \n\n> # Pour les quotités seules les périodes actives sont prises en compte\n> \n> Bulletins.paie <- Bulletins.paie[ , MHeures := ifelse(pop_calcul_médiane ",
        " .... [TRUNCATED] \n\n> # L'écrêtement des quotités est une contrainte statistiquement discutable qui permet de \"stresser\" le modèle\n> # Par défaut les quotités sont écrêté .... [TRUNCATED] \n\n> Bulletins.paie <- Bulletins.paie[Statut == \"ELU\", `:=`(MHeures = 1,\n+                                                        quotité = 1)]\n\n> message(\"Quotités calculées\")\n",
        "Quotités calculées\n",
        "\n> Bulletins.paie <- Bulletins.paie[ ,   `:=`(Montant.net.eqtp  = ifelse(is.finite(a<-Net.à.Payer/quotité), a,  NA),\n+                                  .... [TRUNCATED] \n\n> Bulletins.paie <- Bulletins.paie[ ,   `:=`(Statut.sortie   = Statut[length(Net.à.Payer)],\n+                                            nb.jours      .... [TRUNCATED] \n\n> Bulletins.paie <- Bulletins.paie[ , vind := (Matricule[R] == Matricule & Année[R] == Année - 1 & quotité.moyenne[R] == quotité.moyenne)]\n\n> Bulletins.paie <- Bulletins.paie[ ,   `:=`(Montant.brut.annuel      = sum(Brut, na.rm=TRUE),\n+                                          Montant.brut",
        " .... [TRUNCATED] \n\n> message(\"Indicatrice RMPP calculée\")\n",
        "Indicatrice RMPP calculée\n",
        "\n> # Obsolète\n> \n> # Bulletins.paie.réduit <- unique(Bulletins.paie[ , .(Matricule, Année, quotité.moyenne)], by = NULL)\n> # \n> # Bulletins.paie.réduit .... [TRUNCATED] \n\n> matricules <- unique(Bulletins.paie[ ,\n+                                        c(\"Année\",\n+                                          \"Emploi\",\n+    .... [TRUNCATED] \n\n> if (fichier.personnels.existe) {\n+   matricules <- merge(matricules, base.personnels.catégorie, by = clé.fusion, all=TRUE)\n+ } else {\n+   Catégorie  .... [TRUNCATED] ",
        "\n\n> matricules <- matricules[order(Matricule,  Année), ]\n\n> message(\"Bulletins de Paie retraités\")\n",
        "Bulletins de Paie retraités\n",
        "\n> ###########  Analyse des rémunérations : base globale ###################\n> #                                 c(clé.fusion, étiquette.année),\n> \n> V .... [TRUNCATED] \n\n>   Analyse.rémunérations <- Paie[ , .(Nir          = Nir[1],\n+                                      Montant.net.annuel = Montant.net.annuel[1],\n+     .... [TRUNCATED] \n\n> Analyse.rémunérations <- Analyse.rémunérations[ , `:=`(rémunération.indemnitaire.imposable = indemnités + sft + indemnité.résidence + rémunérations. .... [TRUNCATED] ",
        "\n\n>                                                  #Montant.brut.annuel - sft - indemnité.résidence - traitement.indiciaire\n> \n> Analyse.rémunérations .... [TRUNCATED] \n\n> Analyse.rémunérations <- Analyse.rémunérations[ , indemnités.élu := ifelse(Statut == \"ELU\", total.lignes.paie, 0)]\n\n> Analyse.rémunérations <- Analyse.rémunérations[! is.na(Montant.brut.annuel)]\n\n> # if (longueur.non.na(Bulletins.paie[ , quotité > 1]) > minimum.positif & comportement.strict ) \n> #   stop(\"Détection de quotités > 1\", call. = FAL",
        " .... [TRUNCATED] \n",
        "Analyse des rémunérations réalisée.\n",
        "\n> Analyse.variations.par.exercice <- Analyse.rémunérations[Grade != \"A\"  \n+                                                          & Grade != \"V\" \n+ .... [TRUNCATED] \n\n> Analyse.variations.par.exercice <- Analyse.variations.par.exercice[ , indicatrice.année := bitwShiftL(1, Année - début.période.sous.revue) ]\n\n> Analyse.rémunérations.premier.exercice <- Analyse.rémunérations[Analyse.rémunérations$Année == début.période.sous.revue]\n\n> if (fichier.personnels.existe)\n+ {\n+   Analyse.rémunérations.premier.exercice <- merge(Analyse.rémunérations.premier.exercice,\n+                    ",
        " .... [TRUNCATED] \n\n> Analyse.rémunérations.dernier.exercice <- Analyse.rémunérations[Analyse.rémunérations$Année == fin.période.sous.revue, ]\n\n> if (fichier.personnels.existe)\n+ {\n+   Analyse.rémunérations.dernier.exercice <- merge(Analyse.rémunérations.dernier.exercice, base.personnels.catég .... [TRUNCATED] \n\n> # On ne retire les quotités nulles et NA que pour l'analyse dynamique de la partie 4 \n> # On retire également les Heures nulles na et les Heures < s .... [TRUNCATED] \n\n> if (enlever.quotités.nulles) {\n+   Analyse.variations.par.exercice <- Analyse.variations.par.exercice[quotité.moyenne > minimum.quotité]\n+ }",
        "\n\n> Analyse.variations.synthèse <- Analyse.variations.par.exercice[ ,\n+                                     .(Nexercices = length(Année),\n+              .... [TRUNCATED] \n\n> Analyse.variations.synthèse <- Analyse.variations.synthèse[ ,  pris.en.compte := ! is.na(Montant.net.annuel.eqtp.début)\n+                            .... [TRUNCATED] \n\n> Analyse.variations.synthèse <- Analyse.variations.synthèse[ ,  variation.rémunération := ifelse(pris.en.compte,\n+                                    .... [TRUNCATED] ",
        "\n\n> Analyse.variations.synthèse <- Analyse.variations.synthèse[ ,                                            \n+                                          .... [TRUNCATED] \n\n> Analyse.variations.synthèse <- Analyse.variations.synthèse[ ,                                                                 \n+                     .... [TRUNCATED] \n\n> # Note : sous environnement knitr/spin, data.table parvient mal à identifier les noms locaux,\n> # ce qui ne pose pas de problème en environnement st .... [TRUNCATED] ",
        "\n\n> Analyse.variations.par.exercice <- merge(Analyse.variations.par.exercice, temp2, by=\"Matricule\")\n\n> rm(temp2)\n\n> Analyse.variations.par.exercice <- Analyse.variations.par.exercice[ , est.rmpp :=  Année != début.période.sous.revue  \n+                             .... [TRUNCATED] \n\n> Analyse.variations.synthèse.plus.2.ans  <- data.frame(NULL)\n\n> Analyse.variations.synthèse.moins.2.ans <- data.frame(NULL)\n\n> message(\"Analyse des variations réalisée.\")\n",
        "Analyse des variations réalisée.\n",
        "\n> Bulletins.paie.nir.total.hors.élus <- unique(Bulletins.paie[Année == fin.période.sous.revue\n+                                                        .... [TRUNCATED] \n\n> Bulletins.paie.nir.fonctionnaires  <- unique(Bulletins.paie[Année == fin.période.sous.revue\n+                                                        .... [TRUNCATED] \n\n> Bulletins.paie.nir.nontit  <- unique(Bulletins.paie[Année == fin.période.sous.revue\n+                                                            & M .... [TRUNCATED] ",
        "\n\n> Bulletins.paie.nir.permanents  <- unique(Bulletins.paie[Année == fin.période.sous.revue\n+                                                            .... [TRUNCATED] \n\n> names(Bulletins.paie.nir.total.hors.élus) <- c(clé.fusion, \"Nir\")\n\n> # Age au 31 décembre de l'exercice dernier.exerciceal de la période sous revue\n> # ne pas oublier [ ,...] ici:\n> \n> années.fonctionnaires   <- extra .... [TRUNCATED] \n\n> années.total.hors.élus  <- extraire.nir(Bulletins.paie.nir.total.hors.élus, fin.période.sous.revue)",
        "\n\n> années.total.permanents  <- extraire.nir(Bulletins.paie.nir.permanents, fin.période.sous.revue)\n\n> années.total.nontit     <- extraire.nir(Bulletins.paie.nir.nontit, fin.période.sous.revue)\n\n> Bulletins.paie.nir.total.hors.élus.début <- unique(Bulletins.paie[Année == début.période.sous.revue\n+                                                .... [TRUNCATED] \n\n> Bulletins.paie.nir.fonctionnaires.début  <- unique(Bulletins.paie[Année == début.période.sous.revue\n+                                               ",
        " .... [TRUNCATED] \n\n> Bulletins.paie.nir.nontit.début <- unique(Bulletins.paie[Année == début.période.sous.revue\n+                                                         .... [TRUNCATED] \n\n> Bulletins.paie.nir.permanents.début  <- unique(Bulletins.paie[Année == début.période.sous.revue\n+                                                    .... [TRUNCATED] \n\n> names(Bulletins.paie.nir.total.hors.élus.début) <- c(clé.fusion, \"Nir\")\n\n> # Age au 31 décembre de l'exercice dernier.exerciceal de la période sous revue\n> # ne pas oublier [ ,...] ici:\n> \n> années.fonctionnaires.début   <-",
        " .... [TRUNCATED] \n\n> années.total.hors.élus.début  <- extraire.nir(Bulletins.paie.nir.total.hors.élus.début, début.période.sous.revue)\n\n> années.total.nontit.début <- extraire.nir(Bulletins.paie.nir.nontit.début, début.période.sous.revue)\n\n> années.total.permanents.début <- extraire.nir(Bulletins.paie.nir.permanents.début, début.période.sous.revue)\n\n> message(\"Analyse démographique réalisée.\")\n",
        "Analyse démographique réalisée.\n",
        "\n> if (!is.null(Paie) & !is.null(Analyse.rémunérations)\n+     & !is.null(Analyse.variations.synthèse) & !is.null(Analyse.variations.par.exercice))\n+    .... [TRUNCATED] \n",
        "Statistiques de synthèse réalisées\n",
        "\n> ########### Démographie ########################\n> \n> #'# 1. Statistiques de population\n> #'\n> #'### 1.1 Effectifs\n> \n> liste.années <- as.character .... [TRUNCATED] \n\n> effectifs <- lapply(période,\n+                     function(x) {\n+                       A <- Bulletins.paie[Année == x, .(Matricule, Statut, perman .... [TRUNCATED] \n\n> for (i in 1:length(effectifs)) names(effectifs[[i]]) <- c(\"Effectifs\", \"Effectifs_12\", \"Effectifs_12_fonct\",\n+                                       .... [TRUNCATED] ",
        "\n\n> effectifs.locale <- lapply(effectifs, function(x) formatC(x, big.mark = \" \", format=\"f\", digits=1, decimal.mark=\",\"))\n\n> tableau.effectifs <- as.data.frame(effectifs.locale,\n+                                    row.names = c(\"Total effectifs\", \"  dont présents 12 mois\" .... [TRUNCATED] \n\n> names(tableau.effectifs) <- liste.années\n\n> names(effectifs) <- liste.années\n\n> #'  \n> #  \n> #'&nbsp;*Tableau `r incrément()`*   \n> #            \n> kable(tableau.effectifs, row.names = TRUE, align='c')\n\n\n|                                             |  2008   |  2009   |  2010   |  2011   |  2012   |",
        "\n|:--------------------------------------------|:-------:|:-------:|:-------:|:-------:|:-------:|\n|Total effectifs                              | 1 119,0 | 1 146,0 | 1 221,0 | 1 215,0 | 1 260,0 |\n|  dont présents 12 mois                      |  870,0  |  953,0  |  922,0  |  991,0  | 1 037,0 |\n|  dont fonctionnaires                        |  704,0  |  706,0  |  733,0  |  735,0  |  744,0  |\n|  dont fonct. présents 12 mois               |  644,0  |  661,0  |  667,0  |  698,0  |  690,0  |\n|  dont élus                                  |  100,0  |  72,0   |  75,0   |  73,0   |  76,0   |",
        "\n|  dont élus présents 12 mois                 |  37,0   |  67,0   |  69,0   |  72,0   |  71,0   |\n|  dont vacataires détectés (a)               |   0,0   |   1,0   |   0,0   |   0,0   |   0,0   |\n|  dont assistantes maternelles détectées (a) |   0,0   |   0,0   |   0,0   |   0,0   |   0,0   |\n|Total ETP/année (b)                          |  832,8  |  853,4  |  887,3  |  921,2  |  950,7  |\n|Total ETPT/année (c)                         |  779,5  |  803,9  |  819,6  |  857,0  |  879,7  |\n|Total ETPT/année personnes en place (d)      |   0,0   |  644,4  |  638,4  |  652,2  |  676,0  |",
        "\n|Total ETPT/année fonctionnaires              |  636,3  |  643,6  |  651,4  |  669,9  |  671,9  |\n|Total ETPT/année titulaires à temps complet  |  455,0  |  479,0  |  467,0  |  462,0  |  475,0  |\n\n> #'\n> #'**Nota:**   \n> #'*(a) Sur la base des libellés d'emploi et des libellés de lignes de paye. La détection peut être lacunaire*   \n> #'*(b) ETP  .... [TRUNCATED] \n\n\n|  Statistique  | Âge des personnels <br>au 31/12/2008 | Effectif |\n|:-------------:|:------------------------------------:|:--------:|",
        "\n|    Minimum    |                  18                  |          |\n| 1er quartile  |                  30                  |          |\n|    Médiane    |                  38                  |          |\n|    Moyenne    |                38,65                 |   941    |\n| 3ème quartile |                  48                  |          |\n|    Maximum    |                  64                  |          |\n\n> #'  \n> if (longueur.non.na(années.total.hors.élus.début) > 0)\n+   hist(années.total.hors.élus.début,\n+        xlab = \"Âge au 31 décembre \" %+% début",
        " .... [TRUNCATED] \n\n> #'  \n> #'&nbsp;*Tableau `r incrément()`*   \n> #'    \n> \n> Résumé(c(\"Âge des personnels <br>au 31/12/\" %+% fin.période.sous.revue,\n+          \"Effect ...\" ... [TRUNCATED] \n\n\n|  Statistique  | Âge des personnels <br>au 31/12/2012 | Effectif |\n|:-------------:|:------------------------------------:|:--------:|\n|    Minimum    |                  18                  |          |\n| 1er quartile  |                  31                  |          |\n|    Médiane    |                  40                  |          |",
        "\n|    Moyenne    |                40,08                 |          |\n| 3ème quartile |                  49                  |          |\n|    Maximum    |                  66                  |          |\n\n> #'  \n> #'  \n> if (longueur.non.na(années.total.hors.élus) > 0)\n+   hist(années.total.hors.élus,\n+        xlab = \"Âge au 31 décembre \" %+% fin.périod .... [TRUNCATED] \n\n> #'\n> #'### 1.2 Pyramide des âges, personnels non titulaires\n> \n> \n> #'  \n> #'&nbsp;*Tableau `r incrément()`*   \n> #'    \n> \n> Résumé(c(\"Âge des pers",
        " ...\" ... [TRUNCATED] \n\n\n|  Statistique  | Âge des personnels non titulaires<br>au 31/12/2008 | Effectif |\n|:-------------:|:--------------------------------------------------:|:--------:|\n|    Minimum    |                         18                         |          |\n| 1er quartile  |                         21                         |          |\n|    Médiane    |                        26,5                        |          |\n|    Moyenne    |                       31,72                        |   260    |",
        "\n| 3ème quartile |                         40                         |          |\n|    Maximum    |                         63                         |          |\n\n> #'  \n> if (longueur.non.na(années.total.nontit.début) > 0)\n+   hist(années.total.nontit.début,\n+        xlab = \"Âge au 31 décembre \" %+% début.pério .... [TRUNCATED] \n\n> #'  \n> #'&nbsp;*Tableau `r incrément()`*   \n> #'    \n> \n> Résumé(c(\"Âge des personnels non titulaires<br>au 31/12/\" %+% fin.période.sous.revue,\n+    .... [TRUNCATED] ",
        "\n\n\n|  Statistique  | Âge des personnels non titulaires<br>au 31/12/2012 | Effectif |\n|:-------------:|:--------------------------------------------------:|:--------:|\n|    Minimum    |                         18                         |          |\n| 1er quartile  |                         23                         |          |\n|    Médiane    |                         27                         |          |\n|    Moyenne    |                       32,23                        |   324    |\n| 3ème quartile |                       40,25                        |          |",
        "\n|    Maximum    |                         62                         |          |\n\n> if (longueur.non.na(années.total.nontit) > 0)\n+   hist(années.total.nontit,\n+        xlab = \"Âge au 31 décembre \" %+% fin.période.sous.revue,\n+      .... [TRUNCATED] \n\n> #'  \n> #'[Lien vers la base des âges](Bases/Effectifs/Bulletins.paie.nir.nontit.csv)  \n> #'  \n> #'\n> #'\n> #'### 1.4 Pyramide des âges, personnels fo .... [TRUNCATED] \n\n\n|  Statistique  | Âge des personnels <br>au 31/12/2008 | Effectif |\n|:-------------:|:------------------------------------:|:--------:|",
        "\n|    Minimum    |                  22                  |          |\n| 1er quartile  |                  34                  |          |\n|    Médiane    |                  41                  |          |\n|    Moyenne    |                41,42                 |   674    |\n| 3ème quartile |                  49                  |          |\n|    Maximum    |                  64                  |          |\n\n> #'  \n> #'\n> \n> if (longueur.non.na(années.fonctionnaires.début) > 0)\n+   hist(années.fonctionnaires.début,\n+        xlab = \"Âge au 31 décembre \" %+%",
        " .... [TRUNCATED] \n\n> #'  \n> \n> #'&nbsp;*Tableau `r incrément()`*   \n> #'    \n> \n> Résumé(c(\"Âge des personnels <br>au 31/12/\" %+% fin.période.sous.revue,\n+          \"Eff ...\" ... [TRUNCATED] \n\n\n|  Statistique  | Âge des personnels <br>au 31/12/2012 | Effectif |\n|:-------------:|:------------------------------------:|:--------:|\n|    Minimum    |                  23                  |          |\n| 1er quartile  |                  37                  |          |\n|    Médiane    |                  43                  |          |",
        "\n|    Moyenne    |                43,78                 |   723    |\n| 3ème quartile |                  51                  |          |\n|    Maximum    |                  66                  |          |\n\n> #'\n> \n> if (longueur.non.na(années.fonctionnaires) > 0)\n+   hist(années.fonctionnaires,\n+        xlab = \"Âge au 31 décembre \" %+% fin.période.sous.r .... [TRUNCATED] \n\n> #'  \n> #'[Lien vers la base des âges](Bases/Effectifs/Bulletins.paie.nir.fonctionnaires.csv)  \n> #'  \n> \n> #'### 1.5 Pyramide des âges, personnels p",
        " .... [TRUNCATED] \n\n\n|  Statistique  | Âge des personnels <br>au 31/12/2008 | Effectif |\n|:-------------:|:------------------------------------:|:--------:|\n|    Minimum    |                  18                  |          |\n| 1er quartile  |                  30                  |          |\n|    Médiane    |                  38                  |          |\n|    Moyenne    |                38,72                 |   934    |\n| 3ème quartile |                  48                  |          |\n|    Maximum    |                  64                  |          |",
        "\n\n> #'  \n> \n> if (longueur.non.na(années.total.permanents.début) > 0)\n+   hist(années.total.permanents.début,\n+        xlab = \"Âge au 31 décembre \" %+%  .... [TRUNCATED] \n\n> #'&nbsp;*Tableau `r incrément()`*   \n> #'    \n> \n> Résumé(c(\"Âge des personnels <br>au 31/12/\" %+% fin.période.sous.revue,\n+          \"Effectif\"),\n+ .... [TRUNCATED] \n\n\n|  Statistique  | Âge des personnels <br>au 31/12/2012 | Effectif |\n|:-------------:|:------------------------------------:|:--------:|\n|    Minimum    |                  18                  |          |",
        "\n| 1er quartile  |                  32                  |          |\n|    Médiane    |                  40                  |          |\n|    Moyenne    |                 40,2                 |   1047   |\n| 3ème quartile |                  49                  |          |\n|    Maximum    |                  66                  |          |\n\n> #'\n> \n> if (longueur.non.na(années.total.permanents) > 0)\n+   hist(années.total.permanents,\n+        xlab = \"Âge au 31 décembre \" %+% fin.période.so .... [TRUNCATED] ",
        "\n\n> #'  \n> #'[Lien vers la base des âges](Bases/Effectifs/Bulletins.paie.nir.permanents.csv)  \n> #'  \n> \n> #'### 1.6 Effectifs des personnels par durée  .... [TRUNCATED] \n\n\n| Plus de 2 ans | Moins de 2 ans | Moins d'un an | Moins de six mois |\n|:-------------:|:--------------:|:-------------:|:-----------------:|\n|      916      |      269       |      132      |        57         |\n\n> #'\n> \n> if (nrow(Analyse.variations.par.exercice) > 0)\n+   qplot(factor(Année),\n+         data = Analyse.variations.par.exercice,\n+         geom = \"",
        " ...\" ... [TRUNCATED] \n",
        "Error in guide_axis(details$x.major, details$x.labels, \"bottom\", theme) : \n  cannot open file 'C:/Dev/altair/lib/gtable/R/gtable.rdb': No such file or directory\n",
        "> ",
        "source.with.encoding('C:/Dev/altair/Tests/Exemple/altair.R', encoding='UTF-8', echo=TRUE)",
        "\n> #'---\n> #'title: false\n> #'author: false\n> #'date: false\n> #'output:\n> #'html_document:\n> #'css: style.css\n> #'---\n> \n> #'<p class = \"centered\"><img .... [TRUNCATED] \n\n> #write.csv(unique(Paie[Paie$delta > 500 & Paie$Montant > 500 & Paie$Type %chin% c(\"A\", \"I\", \"R\", \"AV\", \"A\"), c(\"Type\",  \"Libellé\", \"Code\"), with=F]) .... [TRUNCATED] \n\n> encodage.code.source <- \"UTF-8\" #\"ISO-8859-15\"\n\n> # encodage :sous unix, les fichiers sources devraient être encodés en UTF-8 pour\n> # permettre une génération correcte des documents sous Windows, e",
        " .... [TRUNCATED] \n\n> source(\"prologue.R\", encoding = encodage.code.source)\n\n> compilerOptions <- setCompilerOptions(suppressAll = TRUE)\n\n> JITLevel <- enableJIT(1)\n\n> source(file.path(chemin.dossier, \"bibliotheque.fonctions.paie.R\"), encoding = encodage.code.source)\n\n> dir.create(chemin.dossier.lib, recursive = TRUE)\n\n> .libPaths(union(chemin.dossier.lib, .libPaths()))\n\n> installer.paquets(knitr, digest, colorspace, ggplot2, assertthat, yaml, gtools, utils, data.table)\nError in install.packages : Updating loaded packages",
        "\n",
        "knitr n'a pas été installé.\n",
        "Error in install.packages : Updating loaded packages\n",
        "digest n'a pas été installé.\n",
        "Error in install.packages : Updating loaded packages\n",
        "colorspace n'a pas été installé.\n",
        "Error in install.packages : Updating loaded packages\n",
        "ggplot2 n'a pas été installé.\n",
        "Error in install.packages : Updating loaded packages\n",
        "assertthat n'a pas été installé.\n",
        "Warning in install.packages :\n  downloaded length 144793 != reported length 144793\n",
        "Installing package into ‘C:/Dev/altair/lib’\n(as ‘lib’ is unspecified)\n",
        "trying URL 'http://cran.rstudio.com/bin/windows/contrib/3.1/yaml_2.1.13.zip'\n",
        "Content type 'application/zip' length 180079 bytes (175 Kb)\n",
        "opened URL\n",
        "downloaded 175 Kb\n\n",
        "Warning in install.packages :\n  downloaded length 180079 != reported length 180079\npackage ‘yaml’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\Fab\\AppData\\Local\\Temp\\RtmpUnYH5L\\downloaded_packages\n",
        "Error in x[, 1] : incorrect number of dimensions\n",
        "yaml a été installé.\n",
        "Error in install.packages : Updating loaded packages\n",
        "gtools n'a pas été installé.\n",
        "utils est déjà installé.\n",
        "Error in install.packages : Updating loaded packages\n",
        "data.table n'a pas été installé.\n",
        "\n> if (paralléliser) installer.paquets(parallel)\n",
        "parallel est déjà installé.\n",
        "\n> # + parallel, soSNOW (windows) ou doMC (unix))\n> \n> # version parallélisée : à ce stade les tests ne sont pas concluant sur les applications de ddpl .... [TRUNCATED] \n\n> library(ggplot2)\n\n> library(assertthat)\n\n> library(gtools)\n\n> library(data.table)\n\n> if (séparateur.décimal.entrée != \".\")\n+   stop(\"Pour les tables importées par data.table::fread, le séparateur décimal doit être '.'\")\n\n> if (séparateur.décimal.entrée == séparateur.liste.entrée)\n+   stop(\"Le séparateur décimal en entrée doit être différent du séparateur de colonnes !\"",
        " .... [TRUNCATED] \n\n> if (séparateur.décimal.sortie == séparateur.liste.sortie)\n+   stop(\"Le séparateur décimal en sortie doit être différent du séparateur de colonnes !\" .... [TRUNCATED] \n\n> if (sauvegarder.bases.analyse) {\n+   for (path in c(\"Rémunérations\", \"Effectifs\", \"Réglementation\", \"Fiabilité\"))\n+     dir.create(file.path(chemin. .... [TRUNCATED] \n\n> if (sauvegarder.bases.origine)\n+   dir.create(file.path(chemin.dossier.bases, \"Paiements\"), recursive = TRUE)\n\n> # problème temporaire avec l'option fig.retina depuis fin mai 2014\n> \n> knitr::opts_chunk$set(fig.width = 7.5, echo = FALSE, warning = FALSE, messag",
        " .... [TRUNCATED] \n\n> # Contrôle de cohérence\n> #  on vérifie que chaque code de paie est associé, dans le fichier des codes de paiement (par défaut, racinecodes.csv),\n>  .... [TRUNCATED] \n\n> if (fichier.personnels.existe) {\n+   base.personnels.catégorie <- read.csv.skip(nom.fichier.personnels, séparateur.liste = séparateur.liste.entrée,  .... [TRUNCATED] \n\n> # Lignes de paie\n> # On peut lire jusqu'à 50 fichiers csv de lignes de paie qui seront générés au format :\n> \n> # \"chemin dossier + racine-Lignes de",
        " ...\" ... [TRUNCATED] \n\n> lignes.paie <- lignes.paie[file.exists(chemin(lignes.paie))]\n\n> # Bulletins de paie\n> # On peut lire jusqu'à 10 fichiers csv de bulletins de paie qui seront générés au format :\n> \n> # \"chemin dossier + racine-Bul ...\" ... [TRUNCATED] \n\n> bulletins.paie <- bulletins.paie[file.exists(chemin(bulletins.paie))]\n\n> nom.table      <- nom.table[file.exists(chemin(nom.table))]\n\n> # Programme principal\n> \n> # Bases\n> \n> # Lignes de paie\n> \n> # On ne retient que les bases ayant pour années au minimum début.période.sous.revue\n> ",
        " .... [TRUNCATED] \n\n> importer.bases.via.xhl2csv <- function(base, table = nom.table, colClasses = colonnes.classes.input, colNames =  colonnes.input) {\n+ \n+   res <- try .... [TRUNCATED] \n\n> importer.bases.via.xhl2csv(\"Paie\")\n\nRestarting R session...\n\n"
    ],
    "type" : [
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        2,
        3,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        2,
        3,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        3,
        2,
        2,
        2,
        2,
        2,
        3,
        3,
        2,
        3,
        3,
        2,
        2,
        3,
        2,
        2,
        3,
        2,
        2,
        3,
        2,
        2,
        3,
        2,
        2,
        3,
        2,
        2,
        2,
        3,
        2,
        2,
        2,
        2,
        2,
        3,
        2,
        2,
        2,
        2,
        2,
        3,
        2,
        3,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        2,
        3,
        2,
        3,
        2,
        3,
        2,
        3,
        2,
        3,
        2,
        3,
        3,
        3,
        3,
        3,
        2,
        3,
        3,
        2,
        3,
        3,
        2,
        3,
        2,
        3,
        2,
        2,
        2,
        2,
        2
    ]
}