c(étiquette.matricule, champ.nir) ],
Bulletins.paie[  Bulletins.paie$Année == fin.période.sous.revue
& Bulletins.paie$Mois == 12,
c(étiquette.matricule, champ.nir)], by = étiquette.matricule, all = FALSE)
head(Bulletins.paie.nir.total.hors.élus)
source('C:/Users/Public/altair/Tests/Exemple/exemple.R', echo=TRUE)
Bulletins.paie.nir.fonctionnaires
Bulletins.paie.nir.total.hors.élus <- merge(Analyse.rémunérations[   Analyse.rémunérations$Année == fin.période.sous.revue
& Analyse.rémunérations$indemnités.élu == 0,
c(étiquette.matricule, champ.nir) ],
Bulletins.paie[  Bulletins.paie$Année == fin.période.sous.revue
& Bulletins.paie$Mois == 12,
c(étiquette.matricule, champ.nir)],
by = étiquette.matricule, all = FALSE)
Bulletins.paie.nir.total.hors.élus
Bulletins.paie.nir.fonctionnaires <- Bulletins.paie.nir.fonctionnaires[-3]
names(Bulletins.paie.nir.fonctionnaires) <- c(étiquette.matricule, champ.nir)
Bulletins.paie.nir.total.hors.élus
head(Bulletins.paie.nir.total.hors.élus)
Bulletins.paie.nir.fonctionnaires[-3]
Bulletins.paie.nir.fonctionnaires <- Bulletins.paie.nir.fonctionnaires[-3]
head(Bulletins.paie.nir.total.hors.élus)
head(Bulletins.paie.nir.fonctionnaires)
Bulletins.paie.nir.total.hors.élus <- merge(Analyse.rémunérations[   Analyse.rémunérations$Année == fin.période.sous.revue
& Analyse.rémunérations$indemnités.élu == 0,
c(étiquette.matricule, champ.nir) ],
Bulletins.paie[  Bulletins.paie$Année == fin.période.sous.revue
& Bulletins.paie$Mois == 12,
c(étiquette.matricule, champ.nir)],
by = étiquette.matricule, all = FALSE)
Bulletins.paie.nir.fonctionnaires  <- unique(Bulletins.paie[  Bulletins.paie$Année == fin.période.sous.revue
& Bulletins.paie$Mois  == 12
& Bulletins.paie$Statut %in% c("TITULAIRE", "STAGIAIRE"),
c(étiquette.matricule, champ.nir)])
Bulletins.paie.nir.fonctionnaires <- Bulletins.paie.nir.fonctionnaires[-3]
names(Bulletins.paie.nir.fonctionnaires) <- c(étiquette.matricule, champ.nir)
head(Bulletins.paie.nir.fonctionnaires)
années.fonctionnaires   <- fin.période.sous.revue-(as.numeric(substr(as.character(Bulletins.paie.nir.fonctionnaires[ , champ.nir]), 2, 3)) + 1900)
années.total.hors.élus  <- fin.période.sous.revue-(as.numeric(substr(as.character(Bulletins.paie.nir.total.hors.élus[ , champ.nir]), 2, 3)) + 1900)
Bulletins.paie.nir.total.hors.élus
head(Bulletins.paie.nir.total.hors.élus)
source('C:/Users/Public/altair/Tests/Exemple/exemple.R', echo=TRUE)
source('C:/Users/Public/altair/Tests/Exemple/exemple.R', echo=TRUE)
Analyse.variations.synthèse.filtrée.plus.2.ans
source('C:/Users/Public/altair/Tests/Exemple/exemple.R', echo=TRUE)
source('C:/Users/Public/altair/Tests/Exemple/exemple.R', echo=TRUE)
source('C:/Users/Public/altair/Tests/Exemple/exemple.R', echo=TRUE)
View(Analyse.variations.par.exercice)
View(`Analyse.variations.synthèse`)
View(`Analyse.variations.synthèse`)
View(`Analyse.variations.synthèse`)
étiquette.année
View(Bulletins.paie)
View(Bulletins.paie)
nrow(Bulletins.paie[Bulletins.paie$Année == 2011, ])
source('C:/Users/Public/altair/Tests/Exemple/exemple.R', echo=TRUE)
Analyse.variations.par.exercice <- ddply(Bulletins.paie.Lignes.paie,
c(étiquette.matricule, étiquette.année),
summarise,
Montant.net = sum(Net.à.Payer),
Statut = Statut[length(Net.à.Payer)],
mois.entrée = ifelse((minimum <- min(Mois)) != Inf, minimum, 0),
mois.sortie = ifelse((maximum <- max(Mois)) != -Inf, maximum, 0),
nb.jours = calcul.nb.jours.mois(mois.entrée[1], mois.sortie[1], Année[1]))
Analyse.variations.synthèse <- ddply(Analyse.variations.par.exercice,
.(Matricule),
summarise,
Nexercices = length(Année),
nb.jours.exercice.début = nb.jours[1],
nb.jours.exercice.sortie = nb.jours[Nexercices],
total.jours = sum(nb.jours),
rémunération.début = ifelse(nb.jours.exercice.début == 0,
0,
Montant.net[1]/nb.jours.exercice.début*365),
rémunération.sortie = ifelse(nb.jours.exercice.sortie == 0,
0,
Montant.net[Nexercices]/nb.jours.exercice.sortie*365),
moyenne.rémunération.annuelle.sur.période = ifelse(total.jours == 0, 0, sum(Montant.net)*365/total.jours),
variation.rémunération.jour = calcul.variation(rémunération.début,
rémunération.sortie,
nb.jours.exercice.début,
nb.jours.exercice.sortie,
Nexercices),
variation.moyenne.rémunération.jour = ifelse(total.jours == 0,
0,
(( 1 + variation.rémunération.jour / 100 ) ^ (365 / total.jours) - 1) * 100),
plus.2.ans = (total.jours >= 2*365),
moins.2.ans = (total.jours < 2*365),
moins.1.an  = (total.jours < 365),
moins.six.mois = (total.jours < 365 / 2),
statut = Statut[1])
View(Analyse.variations.par.exercice)
View(`Analyse.variations.synthèse`)
source('C:/Users/Public/altair/Tests/Exemple/exemple.R', echo=TRUE)
source('C:/Users/Public/altair/Tests/Exemple/exemple.R', echo=TRUE)
Analyse.variations.par.exercice
Analyse.variations.par.exercice <- ddply(Bulletins.paie,
c(étiquette.matricule, étiquette.année),
summarise,
Montant.net = sum(Net.à.Payer),
Statut = Statut[length(Net.à.Payer)],
mois.entrée = ifelse((minimum <- min(Mois)) != Inf, minimum, 0),
mois.sortie = ifelse((maximum <- max(Mois)) != -Inf, maximum, 0),
nb.jours = calcul.nb.jours.mois(mois.entrée[1], mois.sortie[1], Année[1]))
)
Analyse.variations.par.exercice <- ddply(Bulletins.paie,
c(étiquette.matricule, étiquette.année),
summarise,
Montant.net = sum(Net.à.Payer),
Statut = Statut[length(Net.à.Payer)],
mois.entrée = ifelse((minimum <- min(Mois)) != Inf, minimum, 0),
mois.sortie = ifelse((maximum <- max(Mois)) != -Inf, maximum, 0),
nb.jours = calcul.nb.jours.mois(mois.entrée[1], mois.sortie[1], Année[1]))
Analyse.variations.par.exercice
head(Analyse.variations.par.exercice)
Analyse.variations.par.exercice <- ddply(Bulletins.paie,
.(Matricule, Année),
summarise,
Montant.net = sum(Net.à.Payer),
Statut = Statut[length(Net.à.Payer)],
mois.entrée = ifelse((minimum <- min(Mois)) != Inf, minimum, 0),
mois.sortie = ifelse((maximum <- max(Mois)) != -Inf, maximum, 0),
nb.jours = calcul.nb.jours.mois(mois.entrée[1], mois.sortie[1], Année[1]))
head(Analyse.variations.par.exercice)
Analyse.variations.synthèse <- ddply(Analyse.variations.par.exercice,
.(Matricule),
summarise,
Nexercices = length(Année),
nb.jours.exercice.début = nb.jours[1],
nb.jours.exercice.sortie = nb.jours[Nexercices],
total.jours = sum(nb.jours),
rémunération.début = ifelse(nb.jours.exercice.début == 0,
0,
Montant.net[1]/nb.jours.exercice.début*365),
rémunération.sortie = ifelse(nb.jours.exercice.sortie == 0,
0,
Montant.net[Nexercices]/nb.jours.exercice.sortie*365),
moyenne.rémunération.annuelle.sur.période = ifelse(total.jours == 0, 0, sum(Montant.net)*365/total.jours),
variation.rémunération.jour = calcul.variation(rémunération.début,
rémunération.sortie,
nb.jours.exercice.début,
nb.jours.exercice.sortie,
Nexercices),
variation.moyenne.rémunération.jour = ifelse(total.jours == 0,
0,
(( 1 + variation.rémunération.jour / 100 ) ^ (365 / total.jours) - 1) * 100),
plus.2.ans = (total.jours >= 2*365),
moins.2.ans = (total.jours < 2*365),
moins.1.an  = (total.jours < 365),
moins.six.mois = (total.jours < 365 / 2),
statut = Statut[1])
head(Analyse.variations.synthèse)
Analyse.variations.synthèse[Analyse.variations.synthèse$total.jours > 365,]
source('C:/Users/Public/altair/Tests/Exemple/exemple.R', echo=TRUE)
anavar <- ddply(Bulletins.paie,
c(étiquette.matricule, étiquette.année),
summarise,
# partie Analyse des variations par exercice #
Montant.net = sum(Net.à.Payer),
Montant.brut = sum(Brut),
Statut = Statut[length(Net.à.Payer)],
mois.entrée = ifelse((minimum <- min(Mois)) != Inf, minimum, 0),
mois.sortie = ifelse((maximum <- max(Mois)) != -Inf, maximum, 0),
nb.jours = calcul.nb.jours.mois(mois.entrée[1], mois.sortie[1], Année[1]),
nb.mois  = mois.sortie[1] - mois.entrée[1] + 1)
Bulletins.paie <- merge (Bulletins.paie, anavar)
Bulletins.paie.Lignes.paie <- merge(Bulletins.paie,
Lignes.paie,
by = c(clé.fusion, "Année", "Mois"))
Bulletins.paie.Lignes.paie <- mutate(Bulletins.paie.Lignes.paie,
montant.traitement.indiciaire
= Montant*(Code %in% codes.paiement[codes.paiement$Type.rémunération
== "TRAITEMENT","Code.rubrique"]),
montant.rémunération.principale.contractuel # rajouter critère non tit
= Montant*(Code %in% codes.paiement[codes.paiement$Type.rémunération
== "PRINCIPAL.CONTRACTUEL","Code.rubrique"]),
montant.primes
= Montant*(Code %in% codes.paiement[codes.paiement$Type.rémunération
== "INDEMNITAIRE","Code.rubrique"]),
montant.autres.rémunérations
= Montant*(Code %in% codes.paiement[codes.paiement$Type.rémunération
== "AUTRES","Code.rubrique"]),
montant.indemnité.élu
= Montant*(Code %in% codes.paiement[codes.paiement$Type.rémunération
== "ELU","Code.rubrique"]),
### EQTP  ###
quotité
=  Temps.de.travail/100
* ifelse(is.na(Taux), 1, Taux)
* (montant.rémunération.principale.contractuel > 0
|
montant.traitement.indiciaire  > 0)
*  ifelse(calculer.nb.jours, nb.jours / 365, nb.mois / 12))
Bulletins.paie.Lignes.paie <- mutate(Bulletins.paie.Lignes.paie,
montant.traitement.indiciaire
= Montant*(Code %in% codes.paiement[codes.paiement$Type.rémunération
== "TRAITEMENT","Code.rubrique"]),
montant.rémunération.principale.contractuel # rajouter critère non tit
= Montant*(Code %in% codes.paiement[codes.paiement$Type.rémunération
== "PRINCIPAL.CONTRACTUEL","Code.rubrique"]),
montant.primes
= Montant*(Code %in% codes.paiement[codes.paiement$Type.rémunération
== "INDEMNITAIRE","Code.rubrique"]),
montant.autres.rémunérations
= Montant*(Code %in% codes.paiement[codes.paiement$Type.rémunération
== "AUTRES","Code.rubrique"]),
montant.indemnité.élu
= Montant*(Code %in% codes.paiement[codes.paiement$Type.rémunération
== "ELU","Code.rubrique"]),
### EQTP  ###
quotité
=  Temps.de.travail/100
* ifelse(is.na(Taux), 1, Taux)
* (montant.rémunération.principale.contractuel > 0
|
montant.traitement.indiciaire  > 0)
*  ifelse(calculer.nb.jours, nb.jours / 365, nb.mois / 12))
Bulletins.paie.Lignes.paie <- mutate(Bulletins.paie.Lignes.paie,
montant.traitement.indiciaire
= Montant*(Code %in% codes.paiement[codes.paiement$Type.rémunération
== "TRAITEMENT","Code.rubrique"]),
montant.rémunération.principale.contractuel =0, # rajouter critère non tit
#                                         = Montant*(Code %in% codes.paiement[codes.paiement$Type.rémunération
#                                                                            == "PRINCIPAL.CONTRACTUEL","Code.rubrique"]),
montant.primes
= Montant*(Code %in% codes.paiement[codes.paiement$Type.rémunération
== "INDEMNITAIRE","Code.rubrique"]),
montant.autres.rémunérations
= Montant*(Code %in% codes.paiement[codes.paiement$Type.rémunération
== "AUTRES","Code.rubrique"]),
montant.indemnité.élu
= Montant*(Code %in% codes.paiement[codes.paiement$Type.rémunération
== "ELU","Code.rubrique"]),
### EQTP  ###
quotité
=  Temps.de.travail / 100
* ifelse(is.na(Taux), 1, Taux)
*  (montant.rémunération.principale.contractuel > 0
|
montant.traitement.indiciaire  > 0)
*  ifelse(calculer.nb.jours, nb.jours / 365, nb.mois / 12))
codes.paiement
odes.paiement
Bulletins.paie.Lignes.paie <- mutate(Bulletins.paie.Lignes.paie,
montant.traitement.indiciaire
= Montant*(Code %in% Codes.paiement[Codes.paiement$Type.rémunération
== "TRAITEMENT","Code.rubrique"]),
montant.rémunération.principale.contractuel =0, # rajouter critère non tit
#                                         = Montant*(Code %in% codes.paiement[codes.paiement$Type.rémunération
#                                                                            == "PRINCIPAL.CONTRACTUEL","Code.rubrique"]),
montant.primes
= Montant*(Code %in% Codes.paiement[Codes.paiement$Type.rémunération
== "INDEMNITAIRE","Code.rubrique"]),
montant.autres.rémunérations
= Montant*(Code %in% Codes.paiement[Codes.paiement$Type.rémunération
== "AUTRES","Code.rubrique"]),
montant.indemnité.élu
= Montant*(Code %in% Codes.paiement[Codes.paiement$Type.rémunération
== "ELU","Code.rubrique"]),
### EQTP  ###
quotité
=  Temps.de.travail / 100
* ifelse(is.na(Taux), 1, Taux)
*  (montant.rémunération.principale.contractuel > 0
|
montant.traitement.indiciaire  > 0)
*  ifelse(calculer.nb.jours, nb.jours / 365, nb.mois / 12))
source('C:/Users/Public/altair/Tests/Exemple/exemple.R', echo=TRUE)
source('C:/Users/Public/altair/Tests/Exemple/exemple.R', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
View(`Analyse.variations.synthèse.filtrée`)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
View(`Analyse.rémunérations`)
View(`Analyse.rémunérations.premier.exercice`)
View(`Analyse.rémunérations`)
View(Bulletins.paie.Lignes.paie)
source('C:/Users/Public/altair/Tests/Exemple/exemple.R', echo=TRUE)
View(Bulletins.paie.Lignes.paie)
View(Bulletins.paie.Lignes.paie)
View(`Analyse.rémunérations`)
source('C:/Users/Public/altair/Tests/Exemple/exemple.R', echo=TRUE)
source('C:/Users/Public/altair/Tests/Exemple/exemple.R', echo=TRUE)
source('C:/Users/Public/altair/Tests/Exemple/exemple.R', echo=TRUE)
View(`Analyse.rémunérations`)
Analyse.rémunérations <- Analyse.rémunérations[!is.na(Analyse.rémunérations$total.rémunérations), ]
Analyse.rémunérations <- Analyse.rémunérations[!is.na(Analyse.rémunérations$total.rémunérations), ]
Analyse.variations.par.exercice <- Analyse.rémunérations[ , c(étiquette.matricule, étiquette.année,
"rémunération.eqtp",
"Statut",
"nb.jours",
"nb.mois",
"quotité")]
Analyse.variations.synthèse <- ddply(Analyse.variations.par.exercice,
.(Matricule),
summarise,
Nexercices = length(Année),
# quotité.exercice.début = quotité[1],
# quotité.exercice.sortie = quotité[Nexercices],
nb.mois.exercice.début = nb.mois[1],
nb.mois.exercice.sortie   = nb.mois[Nexercices],
total.jours = sum(nb.jours),
total.mois  = sum(nb.mois),
rémunération.eqtp.début =  rémunération.eqtp[1],
rémunération.eqtp.sortie = rémunération.eqtp[Nexercices],
moyenne.rémunération.annuelle.sur.période = mean(rémunération.eqtp[rémunération.eqtp > 0], na.rm=TRUE),
variation.rémunération = ifelse(Nexercices > 1 & rémunération.eqtp.début > 0,
rémunération.eqtp.sortie / rémunération.eqtp.début -1,
0),
variation.moyenne.rémunération.jour = ifelse(total.mois == 0, 0,
( ( 1 + variation.rémunération / 100 ) ^ (12 / total.mois) - 1) * 100),
plus.2.ans = (total.mois >= 2*12),
moins.2.ans = (total.mois < 2*12),
moins.1.an  = (total.mois < 12),
moins.six.mois = (total.mois < 6),
statut = Statut[1])
View(Analyse.variations.par.exercice)
View(`Analyse.variations.synthèse`)
Analyse.variations.synthèse <- ddply(Analyse.variations.par.exercice,
.(Matricule),
summarise,
Nexercices = length(nb.mois),
# quotité.exercice.début = quotité[1],
# quotité.exercice.sortie = quotité[Nexercices],
nb.mois.exercice.début = nb.mois[1],
nb.mois.exercice.sortie   = nb.mois[Nexercices],
total.jours = sum(nb.jours),
total.mois  = sum(nb.mois),
rémunération.eqtp.début =  rémunération.eqtp[1],
rémunération.eqtp.sortie = rémunération.eqtp[Nexercices],
moyenne.rémunération.annuelle.sur.période = mean(rémunération.eqtp[rémunération.eqtp > 0], na.rm=TRUE),
variation.rémunération = ifelse(Nexercices > 1 & rémunération.eqtp.début > 0,
rémunération.eqtp.sortie / rémunération.eqtp.début -1,
0),
variation.moyenne.rémunération.jour = ifelse(total.mois == 0, 0,
( ( 1 + variation.rémunération / 100 ) ^ (12 / total.mois) - 1) * 100),
plus.2.ans = (total.mois >= 2*12),
moins.2.ans = (total.mois < 2*12),
moins.1.an  = (total.mois < 12),
moins.six.mois = (total.mois < 6),
statut = Statut[1])
View(`Analyse.variations.synthèse`)
Analyse.variations.synthèse
Analyse.variations.synthèse[Analyse.variations.synthèse$Nexercices > 1, ]
Analyse.variations.par.exercice
str(Analyse.variations.par.exercice)
str(Analyse.variations.synthèse)
Analyse.variations.par.exercice[Analyse.variations.par.exercice$Année == 2010,]
Analyse.variations.par.exercice[Analyse.variations.par.exercice$Année == 2011,]
Analyse.variations.par.exercice[Analyse.variations.par.exercice$Année == 2010,]
Analyse.variations.par.exercice[Analyse.variations.par.exercice$Année == 2011,]
clé.fusion
source('C:/Users/Public/altair/Tests/Exemple/exemple.R', echo=TRUE)
Analyse.rémunérations <- ddply(Bulletins.paie.Lignes.paie,
c(clé.fusion, étiquette.année),
summarise,
Nir = Nir[1],
Montant.net = Montant.net[1],
Statut = Statut[1],
mois.entrée = mois.entrée[1],
nb.jours = nb.jours[1],
nb.mois = nb.mois[1],
mois.sortie = mois.sortie[1],
Service = Service[length(Net.à.Payer)],
traitement.indiciaire = sum(montant.traitement.indiciaire),
rémunération.principale.contractuel = sum(montant.rémunération.principale.contractuel),
rémunération.indemnitaire = sum(montant.primes),
indemnités.élu = sum(montant.indemnité.élu),
autres.rémunérations = sum(montant.autres.rémunérations),
total.rémunérations =  traitement.indiciaire                       # le premier et deuxième terme sont exclusifs
+ rémunération.principale.contractuel
+ rémunération.indemnitaire,
quotité = ifelse(length(quotité[quotité > 0]) > 0, quotité[quotité > 0][1], 0),
rémunération.eqtp = ifelse(quotité == 0, 0, total.rémunérations / quotité),
part.rémunération.indemnitaire = ifelse( (s <- traitement.indiciaire + rémunération.principale.contractuel + rémunération.indemnitaire) == 0,
0,
(rémunération.indemnitaire + rémunération.principale.contractuel )/
(s * 100)))
View(`Analyse.rémunérations`)
Analyse.rémunérations <- Analyse.rémunérations[!is.na(Analyse.rémunérations$total.rémunérations), ]
Analyse.variations.par.exercice <- Analyse.rémunérations[ , c(clé.fusion, étiquette.année,
"rémunération.eqtp",
"Statut",
"nb.jours",
"nb.mois",
"quotité")]
Analyse.variations.synthèse <- ddply(Analyse.variations.par.exercice,
clé.fusion,
summarise,
Nexercices = length(Année),
# quotité.exercice.début = quotité[1],
# quotité.exercice.sortie = quotité[Nexercices],
nb.mois.exercice.début = nb.mois[1],
nb.mois.exercice.sortie   = nb.mois[Nexercices],
total.jours = sum(nb.jours),
total.mois  = sum(nb.mois),
rémunération.eqtp.début =  rémunération.eqtp[1],
rémunération.eqtp.sortie = rémunération.eqtp[Nexercices],
moyenne.rémunération.annuelle.sur.période = mean(rémunération.eqtp[rémunération.eqtp > 0], na.rm=TRUE),
variation.rémunération = ifelse(Nexercices > 1 & rémunération.eqtp.début > 0,
rémunération.eqtp.sortie / rémunération.eqtp.début -1,
0),
variation.moyenne.rémunération.jour = ifelse(total.mois == 0, 0,
( ( 1 + variation.rémunération / 100 ) ^ (12 / total.mois) - 1) * 100),
plus.2.ans = (total.mois >= 2*12),
moins.2.ans = (total.mois < 2*12),
moins.1.an  = (total.mois < 12),
moins.six.mois = (total.mois < 6),
statut = Statut[1])
View(`Analyse.variations.synthèse`)
Bulletins.paie.nir.total.hors.élus <- merge(Analyse.rémunérations[   Analyse.rémunérations$Année == fin.période.sous.revue
& Analyse.rémunérations$indemnités.élu == 0,
c(étiquette.matricule, champ.nir) ],
Bulletins.paie[  Bulletins.paie$Année == fin.période.sous.revue
& Bulletins.paie$Mois == 12,
c(étiquette.matricule, champ.nir)],
by = étiquette.matricule, all = FALSE)
Bulletins.paie.nir.fonctionnaires  <- unique(Bulletins.paie[  Bulletins.paie$Année == fin.période.sous.revue
& Bulletins.paie$Mois  == 12
& Bulletins.paie$Statut %in% c("TITULAIRE", "STAGIAIRE"),
c(étiquette.matricule, champ.nir)])
Bulletins.paie.nir.total.hors.élus <- Bulletins.paie.nir.total.hors.élus[-3]
names(Bulletins.paie.nir.total.hors.élus) <- c(étiquette.matricule, champ.nir)
source('C:/Users/Public/altair/Tests/Exemple/exemple.R', echo=TRUE)
Bulletins.paie.nir.total.hors.élus <- merge(Analyse.rémunérations[   Analyse.rémunérations$Année == fin.période.sous.revue
& Analyse.rémunérations$indemnités.élu == 0,
c(clé.fusion, champ.nir) ],
Bulletins.paie[  Bulletins.paie$Année == fin.période.sous.revue
& Bulletins.paie$Mois == 12,
c(clé.fusion, champ.nir)],
by = étiquette.matricule, all = FALSE)
Bulletins.paie.nir.fonctionnaires  <- unique(Bulletins.paie[  Bulletins.paie$Année == fin.période.sous.revue
& Bulletins.paie$Mois  == 12
& Bulletins.paie$Statut %in% c("TITULAIRE", "STAGIAIRE"),
c(clé.fusion, champ.nir)])
Bulletins.paie.nir.total.hors.élus <- merge(Analyse.rémunérations[   Analyse.rémunérations$Année == fin.période.sous.revue
& Analyse.rémunérations$indemnités.élu == 0,
c(clé.fusion, champ.nir) ],
Bulletins.paie[  Bulletins.paie$Année == fin.période.sous.revue
& Bulletins.paie$Mois == 12,
c(clé.fusion, champ.nir)],
by = clé.fusion, all = FALSE)
Bulletins.paie.nir.fonctionnaires  <- unique(Bulletins.paie[  Bulletins.paie$Année == fin.période.sous.revue
& Bulletins.paie$Mois  == 12
& Bulletins.paie$Statut %in% c("TITULAIRE", "STAGIAIRE"),
c(clé.fusion, champ.nir)])
Bulletins.paie.nir.total.hors.élus <- Bulletins.paie.nir.total.hors.élus[-3]
names(Bulletins.paie.nir.total.hors.élus) <- c(étiquette.matricule, champ.nir)
source('C:/Users/Public/altair/Tests/Exemple/exemple.R', echo=TRUE)
années.total.hors.élus
années.fonctionnaires
Bulletins.paie.nir.total.hors.élus
Bulletins.paie.nir.fonctionnaires
names(Bulletins.paie.nir.total.hors.élus) <- c(clé.fusion, champ.nir)
# ne pas oublier [ ,...] ici:
années.fonctionnaires   <- fin.période.sous.revue - (as.numeric(substr(as.character(Bulletins.paie.nir.fonctionnaires[ , champ.nir]), 2, 3)) + 1900)
années.total.hors.élus  <- fin.période.sous.revue - (as.numeric(substr(as.character(Bulletins.paie.nir.total.hors.élus[ , champ.nir]), 2, 3)) + 1900)
source('C:/Users/Public/altair/Tests/Exemple/exemple.R', echo=TRUE)
source('C:/Users/Public/altair/Tests/Exemple/exemple.R', echo=TRUE)
View(`Analyse.variations.synthèse`)
Analyse.variations.par.exercice <- Analyse.rémunérations[ , c(clé.fusion, étiquette.année,
"rémunération.eqtp",
"Statut",
"nb.jours",
"nb.mois",
"quotité")]
Analyse.variations.synthèse <- ddply(Analyse.variations.par.exercice,
clé.fusion,
summarise,
Nexercices = length(Année),
# quotité.exercice.début = quotité[1],
# quotité.exercice.sortie = quotité[Nexercices],
nb.mois.exercice.début = nb.mois[1],
nb.mois.exercice.sortie   = nb.mois[Nexercices],
total.jours = sum(nb.jours),
total.mois  = sum(nb.mois),
rémunération.eqtp.début =  rémunération.eqtp[1],
rémunération.eqtp.sortie = rémunération.eqtp[Nexercices],
moyenne.rémunération.annuelle.sur.période = mean(rémunération.eqtp[rémunération.eqtp > 0], na.rm=TRUE),
variation.rémunération = ifelse(Nexercices > 1 & rémunération.eqtp.début > 0,
rémunération.eqtp.sortie / rémunération.eqtp.début -1,
0),
variation.moyenne.rémunération.jour = ifelse(total.mois == 0, 0,
( ( 1 + variation.rémunération / 100 ) ^ (12 / total.mois) - 1) * 100),
plus.2.ans = (total.mois >= 2*12),
moins.2.ans = (total.mois < 2*12),
moins.1.an  = (total.mois < 12),
moins.six.mois = (total.mois < 6),
statut = Statut[1])
View(`Analyse.variations.synthèse`)
source('C:/Users/Public/altair/Tests/Exemple/exemple.R', echo=TRUE)
source('C:/Users/Public/altair/Tests/Exemple/exemple.R', echo=TRUE)
source('C:/Users/Public/altair/Tests/Exemple/exemple.R', echo=TRUE)
source('C:/Users/Public/altair/Tests/Exemple/exemple.R', echo=TRUE)
Analyse.variations.par.exercice
if (nrow(Analyse.variations.par.exercice) >0)
qplot(factor(Année),
data = Analyse.variations.par.exercice,
geom = "bar",
fill = factor(!plus.2.ans),
main = paste("Evolutions entre", début.période.sous.revue,"et", fin.période.sous.revue),
xlab = étiquette.année,
ylab = "Effectif",
asp = 4) +
scale_fill_discrete(name = "Personnels en fonction",
breaks = c(TRUE, FALSE),
labels = c("Moins de deux ans", "Plus de deux ans"))
source('C:/Users/Public/altair/Tests/Exemple/exemple.R', echo=TRUE)
source('C:/Users/Public/altair/Tests/Exemple/exemple.R', echo=TRUE)
source('C:/Users/Public/altair/Tests/Exemple/exemple.R', echo=TRUE)
source('C:/Users/Public/altair/Tests/Exemple/exemple.R', echo=TRUE)
source('C:/Users/Public/altair/Tests/Exemple/exemple.R', echo=TRUE)
