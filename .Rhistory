encodage.code.source <- "ISO-8859-1"
initwd <- getwd()
setOSWindows  <- Sys.info()["sysname"] != "Linux"
setOSWindows
setwd("Tests/Exemple")
source("syspaths.R", encoding = encodage.code.source)
knitr::opts_chunk$set(fig.width=8, fig.height=4, echo = FALSE, warning = FALSE, message = FALSE, results = 'asis')
library(knitr)
.libPaths()
install.packages("knitr)
""
)
"
install.packages("knitr")
source('~/Main/fab/Dev/altair/Tests/Exemple/rapport_msword.R', encoding = 'ISO8859-1')
setwd("~/Main/fab/Dev/altair")
source('~/Main/fab/Dev/altair/Tests/Exemple/rapport_msword.R', encoding = 'ISO8859-1')
setwd("~/Main/fab/Dev/altair")
encodage.code.source <- "ISO-8859-1"
initwd <- getwd()
setOSWindows  <- Sys.info()["sysname"] != "Linux"
setwd("Tests/Exemple")
source("syspaths.R", encoding = encodage.code.source)
knitr::opts_chunk$set(fig.width=8, fig.height=4, echo = FALSE, warning = FALSE, message = FALSE, results = 'asis')
source("prologue.R", encoding = encodage.code.source)
writeLines(iconv(readLines("altair.R"), from = encodage.code.source, to = "UTF-8"),
"altair.utf8.R")
library(knitr)
spin("altair.utf8.R")
install.packages("rmarkdown")
source('~/Main/fab/Dev/altair/Tests/Exemple/rapport_msword.R', encoding = 'ISO8859-1')
setwd("~/Main/fab/Dev/altair")
source('~/Main/fab/Dev/altair/Tests/Exemple/rapport_msword.R', encoding = 'ISO8859-1')
setwd("~/Main/fab/Dev/altair")
source('~/Main/fab/Dev/altair/Tests/Exemple/rapport_msword.R', encoding = 'ISO8859-1')
source('~/Main/fab/Dev/altair/Tests/Exemple/rapport_msword.R', encoding = 'ISO8859-1')
setwd("~/Main/fab/Dev/altair")
source('~/Main/fab/Dev/altair/Tests/Exemple/rapport_msword.R', encoding = 'ISO8859-1')
?spin
setwd("~/Main/fab/Dev/altair")
setwd("Tests/Exemple")
source("syspaths.R", encoding = encodage.code.source)
knitr::opts_chunk$set(fig.width=8, fig.height=4, echo = FALSE, warning = FALSE, message = FALSE, results = 'asis')
source("prologue.R", encoding = encodage.code.source)
writeLines(iconv(readLines("altair.R"), from = encodage.code.source, to = "UTF-8"),
"altair.utf8.R")
library(knitr)
spin("altair.utf8.R", knit=FALSE)
rmarkdown::render("altair.utf8.Rmd")
install.packages("ggplot2")
setwd("~/Main/fab/Dev/altair")
source('~/Main/fab/Dev/altair/Tests/Exemple/rapport_msword.R', encoding = 'ISO8859-1')
install.packages("assertthat")
source('~/Main/fab/Dev/altair/Tests/Exemple/rapport_msword.R', encoding = 'ISO8859-1')
setwd("~/Main/fab/Dev/altair")
source('~/Main/fab/Dev/altair/Tests/Exemple/rapport_msword.R', encoding = 'ISO8859-1')
source('gtools', encoding = 'ISO8859-1')
install.packages("gtools")
source('~/Main/fab/Dev/altair/Tests/Exemple/rapport_msword.R', encoding = 'ISO8859-1')
setwd("~/Main/fab/Dev/altair")
source('~/Main/fab/Dev/altair/Tests/Exemple/rapport_msword.R', encoding = 'ISO8859-1')
source('~/Main/fab/Dev/altair/Tests/Exemple/build.rdata.table.R', encoding = 'ISO8859-1')
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
source('~/Main/fab/Dev/altair/Tests/Exemple/build.rdata.table.R', encoding = 'ISO8859-1')
install.packages("devtools", lib="/home/fab/Main/fab/Dev/altair/lib_linux")
# encoder ce script en windows-1252
encodage.code.source <- "ISO-8859-1"
initwd <- getwd()
setOSWindows  <- Sys.info()["sysname"] != "Linux"
setwd("Tests/Exemple")
source("syspaths.R", encoding = encodage.code.source)
knitr::opts_chunk$set(fig.width=8, fig.height=4, echo = FALSE, warning = FALSE, message = FALSE, results = 'asis')
source("prologue.R", encoding = encodage.code.source)
writeLines(iconv(readLines("altair.R"), from = encodage.code.source, to = "UTF-8"),
"altair.utf8.R")
library(knitr)
spin("altair.utf8.R", knit=FALSE)
# rmarkdown::render("altair.utf8.Rmd", clean = FALSE,  output_format = c("html_document"), )
library(rmarkdown)
rmarkdown::render("altair.utf8.Rmd", clean = FALSE,
html_document(fig.retina = 5,
self_contained = TRUE))
system(paste("/usr/bin/pandoc",
"altair.utf8.html", "--to odt  --from html --output altaïr.odt --highlight-style tango"))
system(paste("/usr/bin/pandoc",
"altair.utf8.html", "--to latex  --from html --output altair.tex"))
system(paste("/usr/bin/pandoc",
"altair.utf8.html", "--to latex  --from html --output altair.tex"))
system(paste("/usr/bin/pandoc",
"altair.utf8.html", "--to latex  --from html --output altair.pdf"))
system(paste("/usr/bin/pandoc",
"altair.utf8.html", "--to latex  --from html --output altair.pdf"))
system(paste("/usr/bin/pandoc",
"altair.utf8.html", "--to latex  --from html --output altair.pdf"))
system(paste("/usr/bin/pandoc",
"altair.utf8.html", "--to odt  --from html --output altaïr.odt --highlight-style tango"))
rmarkdown::render("altair.utf8.Rmd", clean = FALSE,
html_document(fig.retina = 5,
self_contained = TRUE))
system(paste("/usr/local/bin/prince",
"altair.utf8.html", "-o altair.pdf"))
system(paste("/usr/local/bin/prince",
"altair.utf8.html", "-s style.pdf -o altair.pdf"))
system(paste("/usr/local/bin/prince",
"altair.utf8.html", "-s style.cdd -o altair.pdf"))
system(paste("/usr/local/bin/prince",
"altair.utf8.html", "-s style.css -o altair.pdf"))
system(paste("/usr/local/bin/prince",
"altair.utf8.html", "-s style.css -o altair.pdf"))
spin("altair.utf8.R", knit=TRUE)
setwd("Tests/Exemple")
source("syspaths.R", encoding = encodage.code.source)
knitr::opts_chunk$set(fig.width=8, fig.height=4, echo = FALSE, warning = FALSE, message = FALSE, results = 'asis')
source("prologue.R", encoding = encodage.code.source)
writeLines(iconv(readLines("altair.R"), from = encodage.code.source, to = "UTF-8"),
"altair.utf8.R")
library(knitr)
spin("altair.utf8.R", knit=TRUE)
system(paste("/usr/bin/pandoc",
"altair.utf8.html", "--to odt  --from html --output altaïr.odt --highlight-style tango"))
source("syspaths.R", encoding = encodage.code.source)
knitr::opts_chunk$set(fig.width=8, fig.height=4, echo = FALSE, warning = FALSE, message = FALSE, results = 'asis')
source("prologue.R", encoding = encodage.code.source)
writeLines(iconv(readLines("altair.R"), from = encodage.code.source, to = "UTF-8"),
"altair.utf8.R")
library(knitr)
spin("altair.utf8.R", knit=TRUE)
setwd("Tests/Exemple")
source("syspaths.R", encoding = encodage.code.source)
knitr::opts_chunk$set(fig.width=8, fig.height=4, echo = FALSE, warning = FALSE, message = FALSE, results = 'asis')
source("prologue.R", encoding = encodage.code.source)
writeLines(iconv(readLines("altair.R"), from = encodage.code.source, to = "UTF-8"),
"altair.utf8.R")
library(knitr)
spin("altair.utf8.R", knit=TRUE)
?knitr.spin
?knitr::spin
?knitr::knit2html
spin("altair.utf8.R", knit=FALSE)
knit2html("altair.utf8.Rmd", stylesheet = "style.css", force_v1 = TRUE)
knit2html("altair.utf8.Rmd", stylesheet = "style.css")
system(paste("/usr/bin/pandoc",
" -V papersize=A4 +RTS -K512m -RTS altair.utf8.md --to latex --from markdown+autolink_bare_uris+ascii_identifiers+tex_math_single_backslash-implicit_figures --output altaïr.pdf --template ../../lib_linux/rmarkdown/rmd/latex/default.tex --highlight-style tango --latex-engine pdflatex --variable geometry:margin=1in"))
?knitr::spin
knitr::opts_chunk$set(fig.width=8, fig.height=4, fig.retina=5, echo = FALSE, warning = FALSE, message = FALSE, results = 'asis')
spin("altair.utf8.R", knit=FALSE)
spin("altair.utf8.R")
system(paste("/usr/bin/pandoc",
" -V papersize=A4 +RTS -K512m -RTS altair.utf8.md --to latex --from markdown+autolink_bare_uris+ascii_identifiers+tex_math_single_backslash-implicit_figures --output altaïr.pdf --template ../../lib_linux/rmarkdown/rmd/latex/default.tex --highlight-style tango --latex-engine pdflatex --variable geometry:margin=1in"))
spin("altair.utf8.R", knit = FALSE)
rmarkdown::render("altair.utf8.Rmd", clean = FALSE,
pdf_document(fig.retina = 5,
self_contained = TRUE))
?rmarkdown::pdf_document
rmarkdown::render("altair.utf8.Rmd", clean = FALSE,
pdf_document())
getwd()
source("syspaths.R", encoding = encodage.code.source)
library(knitr)
opts_chunk$set(fig.width=8, fig.height=4, echo = FALSE, warning = FALSE, message = FALSE, results = 'asis')
source("prologue.R", encoding = encodage.code.source)
writeLines(iconv(readLines("altair.R"), from = encodage.code.source, to = "UTF-8"),
"altair.utf8.R")
spin("altair.utf8.R", knit = FALSE)
system(paste("/usr/bin/pandoc",
" -V papersize=A4 +RTS -K512m -RTS altair.utf8.md --to latex --from markdown+autolink_bare_uris+ascii_identifiers+tex_math_single_backslash-implicit_figures --output altaïr.pdf --template ../../lib_linux/rmarkdown/rmd/latex/default.tex --highlight-style tango --latex-engine pdflatex --variable geometry:margin=1in"))
spin("altair.utf8.R", knit = FALSE)
opts_chunk$set(fig.width=8, fig.height=4, echo = FALSE, warning = FALSE, message = FALSE, results = 'asis')
source("prologue.R", encoding = encodage.code.source)
writeLines(iconv(readLines("altair.R"), from = encodage.code.source, to = "UTF-8"),
"altair.utf8.R")
spin("altair.utf8.R", knit = TRUE)
system(paste("/usr/bin/pandoc",
" -V papersize=A4 +RTS -K512m -RTS altair.utf8.md --to latex --from markdown+autolink_bare_uris+ascii_identifiers+tex_math_single_backslash-implicit_figures --output altaïr.pdf --template ../../lib_linux/rmarkdown/rmd/latex/default.tex --highlight-style tango --latex-engine pdflatex --variable geometry:margin=1in"))
system(paste("/usr/bin/pandoc",
" -V papersize=A4 +RTS -K512m -RTS altair.utf8.md --to latex --from markdown+autolink_bare_uris+ascii_identifiers+tex_math_single_backslash-implicit_figures --output altaïr.pdf --template ../../lib_linux/rmarkdown/rmd/latex/default.tex --highlight-style tango --latex-engine pdflatex --variable geometry:margin=1in"))
system(paste("/usr/bin/pandoc",
" -V papersize=A4 +RTS -K512m -RTS altair.utf8.md --to latex --from markdown --output altaïr.pdf --template ../../lib_linux/rmarkdown/rmd/latex/default.tex --highlight-style tango --latex-engine pdflatex --variable geometry:margin=1in"))
system(paste("/usr/bin/pandoc",
" -V papersize=A4 +RTS -K512m -RTS altair.utf8.html --to latex --from markdown --output altaïr.pdf --template ../../lib_linux/rmarkdown/rmd/latex/default.tex --highlight-style tango --latex-engine pdflatex --variable geometry:margin=1in"))
system(paste("/usr/bin/pandoc",
" -V papersize=A4 +RTS -K512m -RTS altair.utf8.html --to latex --from html --output altaïr.pdf --template ../../lib_linux/rmarkdown/rmd/latex/default.tex --highlight-style tango --latex-engine pdflatex --variable geometry:margin=1in"))
system(paste("/usr/bin/pandoc",
"altair.utf8.html", "--to odt  --from html --output altaïr.odt --highlight-style tango"))
system(paste("/usr/bin/pandoc",
"altair.utf8.html", "--to latex  --from odt --output altaïr.pdf "))
system(paste("/usr/bin/pandoc", " -V papersize=A4 +RTS -K512m -RTS altair.utf8.md --to latex --from markdown+autolink_bare_uris+ascii_identifiers+tex_math_single_backslash-implicit_figures --output altaïr.pdf --template ../../lib_linux/rmarkdown/rmd/latex/default.tex --highlight-style tango --latex-engine pdflatex --variable geometry:margin=1in"))
setwd("Tests/Exemple")
source("syspaths.R", encoding = encodage.code.source)
library(knitr)
opts_chunk$set(fig.width=8, fig.height=4, echo = FALSE, warning = FALSE, message = FALSE, results = 'asis')
source("prologue.R", encoding = encodage.code.source)
writeLines(iconv(readLines("altair.R"), from = encodage.code.source, to = "UTF-8"),
"altair.utf8.R")
spin("altair.utf8.R", knit = TRUE)
system(paste("/usr/bin/pandoc", " -V papersize=A4 +RTS -K512m -RTS altair.utf8.md --to latex --from markdown+autolink_bare_uris+ascii_identifiers+tex_math_single_backslash-implicit_figures --output altaïr.pdf --template ../../lib_linux/rmarkdown/rmd/latex/default.tex --highlight-style tango --latex-engine pdflatex --variable geometry:margin=1in"))
getwd()
system(paste("/usr/bin/pandoc", " -V papersize=A4 +RTS -K512m -RTS altair.utf8.md --to latex --from markdown+autolink_bare_uris+ascii_identifiers+tex_math_single_backslash-implicit_figures --output altaïr.pdf --template ../../lib_linux/rmarkdown/rmd/latex/default.tex --highlight-style tango --latex-engine pdflatex --variable geometry:margin=1in"))
system(paste("/usr/bin/pandoc", " -V papersize=A4 +RTS -K512m -RTS altair.utf8.md --to latex --from markdown --output altaïr.pdf  --highlight-style tango --latex-engine pdflatex --variable geometry:margin=1in"))
?rmarkdown::html_document
setwd("Tests/Exemple")
source("syspaths.R", encoding = encodage.code.source)
library(knitr)
opts_chunk$set(fig.width=8, fig.height=4, echo = FALSE, warning = FALSE, message = FALSE, results = 'asis')
source("prologue.R", encoding = encodage.code.source)
writeLines(iconv(readLines("altair.R"), from = encodage.code.source, to = "UTF-8"),
"altair.utf8.R")
library(rmarkdown)
rmarkdown::render("altair.utf8.R", clean = FALSE,  html_document(fig_retina = 6))
# encoder ce script en windows-1252
encodage.code.source <- "ISO-8859-1"
initwd <- getwd()
setOSWindows  <- Sys.info()["sysname"] != "Linux"
setwd("Tests/Exemple")
source("syspaths.R", encoding = encodage.code.source)
library(knitr)
opts_chunk$set(fig.width=8, fig.height=4, echo = FALSE, warning = FALSE, message = FALSE, results = 'asis')
source("prologue.R", encoding = encodage.code.source)
writeLines(iconv(readLines("altair.R"), from = encodage.code.source, to = "UTF-8"),
"altair.utf8.R")
library(rmarkdown)
rmarkdown::render("altair.utf8.R", clean = FALSE,  html_document(fig_retina = 6))
system(paste("/usr/bin/pandoc",
"altair.utf8.html", "--to odt  --from html --output altaïr.odt --highlight-style tango"))
system(paste("/usr/bin/pandoc",
"altair.utf8.knit.md --to latex --output altaïr.pdf"))
system(paste("/usr/bin/pandoc",
"altair.utf8.html --to latex --output altaïr.pdf"))
system(paste("/usr/local/bin/prince",
"altair.utf8.html", "-s style.css -o altair.pdf"))
system(paste("/usr/local/bin/prince",
"altair.utf8.html", "-o altair.pdf"))
system(paste("/usr/bin/pandoc",
"altair.utf8.knit.md", "--to latex  --from markdown --output altair.pdf --highlight-style tango"))
?rmarkdown::pdf_document
rmarkdown::render("altair.utf8.R", clean = FALSE,
pdf_document(keep_tex=TRUE))
system(paste("/usr/bin/pandoc",
"altair.utf8.tex", "--to odt  --from lates --output altaïr.odt --highlight-style tango"))
system(paste("/usr/bin/pandoc",
"altair.utf8.tex", "--to odt  --from latex --output altaïr.odt --highlight-style tango"))
system(paste("/usr/bin/pandoc",
"altair.utf8.tex", "--to odt  --from latex --output altair.odt "))
system(paste("/usr/bin/pandoc",
"altair.utf8.utf8.md", "--to odt  --from markdown --output altair.odt "))
system(paste("/usr/bin/pandoc",
"altair.utf8.knit.md", "--to odt  --from markdown --output altair.odt "))
system(paste("/usr/bin/pandoc",
"altair.utf8.knit.md", "--to html  --from markdown --output altair.html "))
system(paste("/usr/bin/pandoc",
"altair.utf8.utf8.md", "--to html  --from markdown --output altair.html "))
system(paste("/usr/bin/pandoc",
"altair.utf8.utf8.md", "--to html  --from markdown --output altair.html "))
system(paste("/usr/bin/pandoc",
"altair.utf8.utf8.md", "--to html  --from markdown --output altair.html "))
system(paste("/usr/bin/pandoc",
"altair.utf8.utf8.md", "--to html  --from markdown --output altair.html "))
setwd("Tests/Exemple")
source("syspaths.R", encoding = encodage.code.source)
knitr::opts_chunk$set(fig.width=8, fig.height=4, echo = FALSE, warning = FALSE, message = FALSE, results = 'asis')
source("prologue.R", encoding = encodage.code.source)
writeLines(iconv(readLines("altair.R"), from = encodage.code.source, to = "UTF-8"),
"altair.utf8.R")
library(knitr)
spin("altair.utf8.R", knit=FALSE)
spin("altair.utf8.R")
rmarkdown::render("altair.utf8.Rmd", clean = FALSE,  c(html_document(fig_retina = 6))
)
rmarkdown::render("altair.utf8.Rmd", clean = FALSE,  html_document(fig_retina = 6))
system(paste("/usr/bin/pandoc",
"altair.utf8.knit.md", "--to latex  --from markdown --output altair.pdf --highlight-style tango"))
system(paste("/usr/local/bin/prince",
"altair.utf8.html", "-o altaïr.pdf"))
getwd()
system(paste("/usr/bin/pandoc",
"altair.utf8.utf8.md", "--to latex  --from markdown --output altair.pdf --highlight-style tango"))
spin("altair.utf8.R", knit=FALSE)
spin("altair.R", knit=FALSE)
system(paste("/usr/bin/pandoc",
"altair.utf8.utf8.md", "--to latex  --from markdown --output altair.pdf --highlight-style tango"))
system(paste("/usr/bin/pandoc",
"altair.utf8.html", "--to latex  --from html --output altair.pdf --highlight-style tango"))
system(paste("/usr/bin/pandoc",
"altair.utf8.utf8.md", "--to html -5  --from markdown --output altair.html "))
system(paste("/usr/bin/pandoc",
"altair.utf8.utf8.md", "--to html5 --from markdown --output altair.html "))
system(paste("/usr/bin/pandoc",
"altair.utf8.html", "--to latex  --from html --output altair.pdf --highlight-style tango"))
system(paste("/usr/bin/pandoc",
"altair.html", "--to latex  --from html --output altair.pdf --highlight-style tango"))
system(paste("/usr/bin/pandoc",
"altair.utf8.utf8.md", "--to html --from markdown --output altair.html "))
system(paste("/usr/bin/pandoc",
"altair.utf8.knit.md", "--to html --from markdown --output altair.html "))
system(paste("/usr/bin/pandoc",
"altair.utf8.html", "--to latex  --from html --output altair.pdf --highlight-style tango"))
system(paste("/usr/local/bin/prince",
"altair.utf8.html", "-o altaïr.pdf"))
system(paste("/usr/local/bin/prince",
"altair.utf8.html", "--pdf-profile PDF/X-4 -o altaïr.pdf"))
system(paste("/usr/local/bin/prince",
"altair.utf8.html", "--pdf-profile PDF/X-4 -o altaïr.pdf"))
system(paste("/usr/local/bin/prince",
"altair.utf8.html", " -o altaïr.pdf"))
rmarkdown::render("altair.utf8.R", clean = FALSE,  c(html_document(fig_retina = 6), pdf_document()))
writeLines(iconv(readLines("altair.R"), from = encodage.code.source, to = "UTF-8"),
"altair.utf8.R")
library(rmarkdown)
rmarkdown::render("altair.utf8.R", clean = FALSE,  c(html_document(fig_retina = 6), pdf_document()))
?rmarkdown::knitr_options_pdf
library(knitr)
opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, results = 'asis')
source("prologue.R", encoding = encodage.code.source)
writeLines(iconv(readLines("altair.R"), from = encodage.code.source, to = "UTF-8"),
"altair.utf8.R")
library(rmarkdown)
rmarkdown::knitr_options_html(fig.width=8, fig.height=4, fig.retina=6)
rmarkdown::knitr_options_pdf(fig.width=8, fig.height=4)
rmarkdown::knitr_options_html(fig.width=8, fig.height=4, fig.retina=6)
rmarkdown::knitr_options_html
rmarkdown::knitr_options_html(fig_width=8, fig_height=4, fig_retina=6)
rmarkdown::knitr_options_pdf(fig_width=8, fig_height=4)
rmarkdown::knitr_options_html(fig_width=8, fig_height=4, fig_retina=6, keep_md=FALSE)
rmarkdown::knitr_options_pdf(fig_width=8, fig_height=4, fig_crop=TRUE)
rmarkdown::knitr_options_html(fig_width=8, fig_height=4, fig_retina=6, keep_md=FALSE)
rmarkdown::knitr_options_pdf(fig_width=8, fig_height=4, fig_crop=TRUE)
rmarkdown::knitr_options_html(fig_width=8, fig_height=4, fig_retina=6, keep_md=FALSE)
rmarkdown::knitr_options_pdf(fig_width=8, fig_height=4, fig_crop=TRUE)
rmarkdown::render("altair.utf8.R", clean = FALSE,  c("html_document", "pdf_document"))
rmarkdown::knitr_options_html(fig_width=8, fig_height=4, fig_retina=6, keep_md=FALSE)
rmarkdown::knitr_options_pdf(fig_width=8, fig_height=4, fig_crop=TRUE)
rmarkdown::render("altair.utf8.R", clean = FALSE,  c("html_document", "pdf_document"))
system(paste("/usr/local/bin/prince",
"altair.utf8.html", " -o altaïr.pdf"))
system(paste("/usr/bin/pandoc",
"altair.utf8.html", "--to latex  --from html --output altair.pdf --highlight-style tango"))
system(paste("/usr/bin/pandoc",
"altair.utf8.html", "--to latex  --from html --output altair.tex --highlight-style tango"))
system(paste("/usr/bin/pdflatex",
"altair.tex"))
system(paste("/bin/wkhtmltopdf",
"altair.utf8.html"))
system(paste("/bin/wkhtmltopdf",
"altair.utf8.html altaïr-wk.pdf"))
system(paste("/bin/wkhtmltopdf",
"--zoom=0.7 altair.utf8.html altaïr-wk.pdf"))
system(paste("/bin/wkhtmltopdf",
"--zoom 0.7 altair.utf8.html altaïr-wk.pdf"))
system(paste("/bin/wkhtmltopdf",
"--zoom 0.5 altair.utf8.html altaïr-wk.pdf"))
system(paste("/bin/wkhtmltopdf",
"--page-size A3  altair.utf8.html altaïr-wk.pdf"))
writeLines(iconv(readLines("altair.R"), from = encodage.code.source, to = "UTF-8"),
"altair.utf8.R")
rmarkdown::knitr_options_html(fig_width=8, fig_height=4, fig_retina=6, keep_md=FALSE)
rmarkdown::knitr_options_pdf(fig_width=8, fig_height=4, fig_crop=TRUE)
rmarkdown::render("altair.utf8.R", clean = FALSE,  "html_document")
system(paste("/usr/local/bin/wkhtmltopdf",
"--page-size A3  altair.utf8.html altaïr-wk.pdf"))
system(paste("/usr/local/bin/wkhtmltopdf",
"--page-size A3  altair.utf8.html altaïr-wk.pdf"))
system(paste("/usr/local/bin/wkhtmltopdf",
"--page-size A3  altair.utf8.html altaïr-wk.pdf"))
system(paste("/usr/local/bin/wkhtmltopdf",
"--page-size A3  altair.utf8.html altaïr-wk.pdf"))
system(paste("/usr/local/bin/wkhtmltopdf",
"--page-size A3  altair.utf8.html altaïr-wk.pdf"))
system(paste("/usr/local/bin/wkhtmltopdf",
"--page-size A3  altair.utf8.html altaïr-wk.pdf"))
system(paste("/usr/local/bin/wkhtmltopdf",
"--page-size A3  altair.utf8.html altaïr-wk.pdf"))
system(paste("/usr/local/bin/wkhtmltopdf",
"--page-size A3  altair.utf8.html altaïr-wk.pdf"))
source("prologue.R", encoding = encodage.code.source)
writeLines(iconv(readLines("altair.R"), from = encodage.code.source, to = "UTF-8"),
"altair.utf8.R")
library(rmarkdown)
rmarkdown::knitr_options_html(fig_width=8, fig_height=4, fig_retina=6, keep_md=FALSE)
rmarkdown::knitr_options_pdf(fig_width=8, fig_height=4, fig_crop=TRUE)
rmarkdown::render("altair.utf8.R", clean = FALSE,  "html_document")
system(paste("/usr/local/bin/wkhtmltopdf",
"--page-size A3  altair.utf8.html altaïr-wk.pdf"))
system(paste("/usr/local/bin/wkhtmltopdf",
"--page-size A4  altair.utf8.html altaïr-wk.pdf"))
system(paste("/usr/local/bin/wkhtmltopdf",
"--page-size A4  altair.utf8.html altaïr-wk.pdf"))
system(paste("/usr/local/bin/wkhtmltopdf",
"--page-size A3  altair.utf8.html altaïr-wk.pdf"))
system(paste("/usr/local/bin/wkhtmltopdf",
"--page-size A4  altair.utf8.html altaïr-wk.pdf"))
writeLines(iconv(readLines("altair.R"), from = encodage.code.source, to = "UTF-8"),
"altair.utf8.R")
library(rmarkdown)
rmarkdown::knitr_options_html(fig_width=8, fig_height=4, fig_retina=6, keep_md=FALSE)
rmarkdown::knitr_options_pdf(fig_width=8, fig_height=4, fig_crop=TRUE)
rmarkdown::render("altair.utf8.R", clean = FALSE,  "html_document")
system(paste("/usr/local/bin/wkhtmltopdf",
"--page-size A4  altair.utf8.html altaïr-wk.pdf"))
rmarkdown::render("altair.utf8.R", clean = FALSE,  "html_document")
system(paste("/usr/local/bin/wkhtmltopdf",
"--page-size A4  altair.utf8.html altaïr-wk.pdf"))
rmarkdown::render("altair.utf8.R", clean = FALSE,  "html_document")
system(paste("/usr/local/bin/wkhtmltopdf",
"--page-size A4  altair.utf8.html altaïr-wk.pdf"))
rmarkdown::render("altair.utf8.R", clean = FALSE,  "html_document")
system(paste("/usr/local/bin/wkhtmltopdf",
"--page-size A4  altair.utf8.html altaïr-wk.pdf"))
system(paste("/usr/local/bin/wkhtmltopdf",
"--page-size A4  altair.utf8.html altaïr-wk.pdf"))
rmarkdown::render("altair.utf8.R", clean = FALSE,  "html_document")
system(paste("/usr/local/bin/wkhtmltopdf",
"--page-size A4  altair.utf8.html altaïr-wk.pdf"))
writeLines(iconv(readLines("altair.R"), from = encodage.code.source, to = "UTF-8"),
"altair.utf8.R")
knitr("altair.utf8.R", knit=FALSE)
library(knitr)
knitr("altair.utf8.R", knit=FALSE)
spin("altair.utf8.R", knit=FALSE)
writeLines(iconv(readLines("altair.R"), from = encodage.code.source, to = "UTF-8"),
"altair.utf8.R")
library(rmarkdown)
spin("altair.utf8.R", knit=FALSE)
writeLines(iconv(readLines("altair.R"), from = encodage.code.source, to = "UTF-8"),
"altair.utf8.R")
library(rmarkdown)
spin("altair.utf8.R", knit=FALSE)
source("prologue.R", encoding = encodage.code.source)
writeLines(iconv(readLines("altair.R"), from = encodage.code.source, to = "UTF-8"),
"altair.utf8.R")
library(rmarkdown)
rmarkdown::knitr_options_html(fig_width=8, fig_height=4, fig_retina=6, keep_md=FALSE)
rmarkdown::knitr_options_pdf(fig_width=8, fig_height=4, fig_crop=TRUE)
rmarkdown::render("altair.utf8.R", clean = FALSE,  "html_document")
system(paste("/usr/local/bin/wkhtmltopdf",
"--page-size A4  altair.utf8.html altaïr-wk.pdf"))
system(paste("/usr/local/bin/wkhtmltopdf",
"--page-size A4 --quiet altair.utf8.html altaïr-wk.pdf"))
spin("altair.utf8.R", knit=FALSE)
spin("altair.utf8.R", knit=FALSE)
writeLines(iconv(readLines("altair.R"), from = encodage.code.source, to = "UTF-8"),
"altair.utf8.R")
spin("altair.utf8.R", knit=FALSE)
source("syspaths.R", encoding = encodage.code.source)
library(knitr)
opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, results = 'asis')
source("prologue.R", encoding = encodage.code.source)
writeLines(iconv(readLines("altair.R"), from = encodage.code.source, to = "UTF-8"),
"altair.utf8.R")
library(rmarkdown)
#spin("altair.utf8.R", knit=FALSE)
rmarkdown::knitr_options_html(fig_width=8, fig_height=4, fig_retina=6, keep_md=FALSE)
rmarkdown::knitr_options_pdf(fig_width=8, fig_height=4, fig_crop=TRUE)
rmarkdown::render("altair.utf8.R", clean = FALSE,  "html_document")
system(paste("/usr/local/bin/wkhtmltopdf",
"--page-size A4 --quiet altair.utf8.html altaïr-wk.pdf"))
writeLines(iconv(readLines("altair.R"), from = encodage.code.source, to = "UTF-8"),
"altair.utf8.R")
library(rmarkdown)
#spin("altair.utf8.R", knit=FALSE)
rmarkdown::knitr_options_html(fig_width=8, fig_height=4, fig_retina=6, keep_md=FALSE)
rmarkdown::knitr_options_pdf(fig_width=8, fig_height=4, fig_crop=TRUE)
rmarkdown::render("altair.utf8.R", clean = FALSE,  "html_document")
system(paste("/usr/local/bin/wkhtmltopdf",
"--page-size A4 --quiet altair.utf8.html altaïr.pdf"))
writeLines(iconv(readLines("altair.R"), from = encodage.code.source, to = "UTF-8"),
"altair.utf8.R")
library(rmarkdown)
#spin("altair.utf8.R", knit=FALSE)
rmarkdown::knitr_options_html(fig_width=8, fig_height=4, fig_retina=6, keep_md=FALSE)
rmarkdown::knitr_options_pdf(fig_width=8, fig_height=4, fig_crop=TRUE)
rmarkdown::render("altair.utf8.R", clean = FALSE,  "html_document")
system(paste("/usr/local/bin/wkhtmltopdf",
"--page-size A4 --quiet altair.utf8.html altaïr.pdf"))
writeLines(iconv(readLines("altair.R"), from = encodage.code.source, to = "UTF-8"),
"altair.utf8.R")
library(rmarkdown)
#spin("altair.utf8.R", knit=FALSE)
rmarkdown::knitr_options_html(fig_width=8, fig_height=4, fig_retina=6, keep_md=FALSE)
rmarkdown::knitr_options_pdf(fig_width=8, fig_height=4, fig_crop=TRUE)
rmarkdown::render("altair.utf8.R", clean = FALSE,  "html_document")
system(paste("/usr/local/bin/wkhtmltopdf",
"--page-size A4 --quiet altair.utf8.html altaïr.pdf"))
setwd("Tests/Exemple")
source("syspaths.R", encoding = encodage.code.source)
library(knitr)
opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, results = 'asis')
source("prologue.R", encoding = encodage.code.source)
writeLines(iconv(readLines("altair.R"), from = encodage.code.source, to = "UTF-8"),
"altair.utf8.R")
library(rmarkdown)
#spin("altair.utf8.R", knit=FALSE)
rmarkdown::knitr_options_html(fig_width=8, fig_height=4, fig_retina=6, keep_md=FALSE)
rmarkdown::knitr_options_pdf(fig_width=8, fig_height=4, fig_crop=TRUE)
rmarkdown::render("altair.utf8.R", clean = FALSE,  "html_document")
system(paste("/usr/local/bin/wkhtmltopdf",
"--page-size A4 --quiet altair.utf8.html altaïr.pdf"))
source('~/Main/fab/Dev/altair/Tests/Exemple/rapport_msword_et_pdf.R', encoding = 'ISO8859-1')
setwd("~/Main/fab/Dev/altair")
source('~/Main/fab/Dev/altair/Tests/Exemple/rapport_msword_et_pdf.R', encoding = 'ISO8859-1')
source('~/Main/fab/Dev/altair/Tests/Exemple/altair.R', encoding = 'ISO8859-1')
setwd("~/Main/fab/Dev/altair")
source('~/Main/fab/Dev/altair/Tests/Exemple/altair.R', encoding = 'ISO8859-1')
source('~/Main/fab/Dev/altair/Tests/Exemple/rapport_msword_et_pdf.R', encoding = 'ISO8859-1')
system(paste("/usr/local/bin/wkhtmltopdf",
"--page-size A3 --quiet altair.utf8.html altaïr.pdf"))
setwd("Tests/Exemple")
system(paste("/usr/local/bin/wkhtmltopdf",
"--page-size A3 --quiet altair.utf8.html altaïr.pdf"))
system(paste("/usr/local/bin/wkhtmltopdf",
"--page-size A4 --quiet altair.utf8.html altaïr.pdf"))
